name: Install Environment
description: |
  Replicate a devcontainer environment for the repository.
inputs:
  repo_path:
    description: Path to the root of the repository.
    required: false
    default: .
  devcontainer_keys:
    description: Comma-separated list of devcontainer IDs to replicate.
    required: false
    default: ""
  activate_env:
    description: Name of a Conda environment to activate on all shells.
    required: false
    default: base
  load_cache:
    description: Load the local cache directory for the branch.
    required: false
    default: 'true'
outputs:
  temp_dirpath:
    value: ${{ steps.script.outputs.temp_dirpath }}
    description: Path to the temporary directory in the branch.
  report_dirpath:
    value: ${{ steps.script.outputs.report_dirpath }}
    description: Path to the report directory in the branch.
runs:
  using: composite
  steps:
    - name: Action Path
      id: path
      shell: bash -el {0}
      run: |
        # Get the absolute path to the action directory.
        echo "action_path=$(realpath --no-symlinks "${{ github.action_path }}")" >> "$GITHUB_OUTPUT"
    - name: Python Setup
      # https://github.com/actions/setup-python
      uses: actions/setup-python@v5
      with:
        python-version: '>=3.10'
        check-latest: 'true'
        cache: pip
        cache-dependency-path: ${{ steps.path.outputs.action_path }}/requirements.txt
    - name: Environment Setup
      shell: bash -el {0}
      run: |
        # Install action requirements
        echo "::group::pip install"
        python -m pip install -r "${{ steps.path.outputs.action_path }}/requirements.txt"
        echo "::endgroup::"
        echo "::group::pip list"
        pip list
        echo "::endgroup::"
    - name: Metadata Processing
      id: script
      shell: bash -el {0}
      env:
        ACTION_INPUTS: ${{ toJSON(inputs) }}
      run: |
        # Process metadata.
        python "${{ github.action_path }}/script.py"
    - name: Cache Load
      if: inputs.load_cache == 'true'
      uses: actions/cache@v4
      with:
        path: ${{ steps.script.outputs.cache_dirpath }}
        key: >-
          local--${{ runner.os }}--${{ runner.arch }}--${{ github.repository }}/${{ steps.script.outputs.branch_name }}
    - name: Task Sourcing
      shell: bash -el {0}
      env:
        TASK_FILEPATHS: ${{ steps.script.outputs.task_filepaths }}
      run: |
        # Source task scripts.
        while IFS= read -r task_filepath; do
          echo 'source "'"$task_filepath"'"' | tee -a ~/.bashrc ~/.bash_profile
        done <<< "$TASK_FILEPATHS"
    - name: Debug
      shell: bash -el {0}
      run: |
        echo ::group::❌❌Debug
        echo "HOME: $HOME"
        echo "USER: $USER"
        ls -la ~
        cat ~/.bashrc || echo "No .bashrc file found"
        cat ~/.bash_profile || echo "No .bash_profile file found"
        echo ::endgroup::
    - name: Conda Setup
      # https://github.com/conda-incubator/setup-miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        miniforge-version: latest
        channels: conda-forge
        auto-update-conda: true
        activate-environment: >-
          ${{ (inputs.activate_env != 'base' && inputs.activate_env) || '' }}
        auto-activate-base: ${{ steps.script.outputs.activate_env == 'base' }}
    - name: Debug
      shell: bash -el {0}
      run: |
        echo ::group::❌❌Debug
        echo "HOME: $HOME"
        echo "USER: $USER"
        ls -la ~
        cat ~/.bashrc || echo "No .bashrc file found"
        cat ~/.bash_profile || echo "No .bash_profile file found"
        echo ::endgroup::
    - name: Conda Cache
      id: conda-cache
      uses: actions/cache@v4
      with:
        path: ${{ env.CONDA }}/envs
        key: >-
          conda--${{ runner.os }}--${{ runner.arch }}--${{ steps.script.outputs.env_hash }}
    - name: Conda Install
      if: steps.conda-cache.outputs.cache-hit != 'true'
      shell: bash -el {0}
      env:
        ENV_NAMES: ${{ steps.script.outputs.env_names }}
        ENV_FILEPATHS: ${{ steps.script.outputs.env_filepaths }}
      run: |
        # Install Conda environments.
        while IFS= read -r env_filepath; do
          echo "::group::conda env update $env_filepath"
          conda env update -vv --file "$env_filepath"
          echo "::endgroup::"
        done <<< "$ENV_FILEPATHS"
        echo "::group::conda info"
        conda info
        echo "::endgroup::"
        echo "::group::conda config"
        conda config --show
        echo "::endgroup::"
        echo "::group::conda env list"
        conda env list
        echo "::endgroup::"
        while IFS= read -r env_name; do
          echo "::group::conda list $env_name"
          conda list --name "$env_name"
          echo "::endgroup::"
        done <<< "$ENV_NAMES"
    - name: Debug
      shell: bash -el {0}
      run: |
        echo ::group::❌❌Debug
        echo "HOME: $HOME"
        echo "USER: $USER"
        ls -la ~
        cat ~/.bashrc || echo "No .bashrc file found"
        cat ~/.bash_profile || echo "No .bash_profile file found"
        echo ::endgroup::
