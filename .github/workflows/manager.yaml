name: '[Reusable]: Project Manager'
on:
  workflow_call:
    secrets:
      github-admin-token:
        description: Token with admin permissions to the repository.
        required: false
      zenodo-token:
        description: Token for Zenodo API.
        required: false
      zenodo-sandbox-token:
        description: Token for Zenodo Sandbox API.
        required: false
    outputs:
      web:
        value: ${{ jobs.manager.outputs.web }}
        description: Configurations for website job.
      lint:
        value: ${{ jobs.manager.outputs.lint }}
        description: Configurations for lint job.
      test:
        value: ${{ jobs.manager.outputs.test }}
        description: Configurations for test job.
      build:
        value: ${{ jobs.manager.outputs.build }}
        description: Configurations for build job.
      binder:
        value: ${{ jobs.manager.outputs.binder }}
        description: Configurations for binder job.
      publish-testpypi:
        value: ${{ jobs.manager.outputs.publish-testpypi }}
        description: Configurations for publish-testpypi job.
      publish-pypi:
        value: ${{ jobs.manager.outputs.publish-pypi }}
        description: Configurations for publish-pypi job.
      publish-anaconda:
        value: ${{ jobs.manager.outputs.publish-anaconda }}
        description: Configurations for publish-anaconda job.
      release:
        value: ${{ jobs.manager.outputs.release }}
        description: Configurations for release job.
jobs:
  manager:
    name: Manager
    outputs:
      fail: ${{ steps.proman.outputs.fail }}
      web: ${{ steps.proman.outputs.web }}
      lint: ${{ steps.proman.outputs.lint }}
      test: ${{ steps.proman.outputs.test }}
      build: ${{ steps.proman.outputs.build }}
      binder: ${{ steps.proman.outputs.binder }}
      publish-testpypi: ${{ steps.proman.outputs.publish-testpypi }}
      publish-pypi: ${{ steps.proman.outputs.publish-pypi }}
      publish-anaconda: ${{ steps.proman.outputs.publish-anaconda }}
      release: ${{ steps.proman.outputs.release }}
    runs-on: ubuntu-latest
    env:
      PATH_REPO_BASE: repo_base
      PATH_REPO_HEAD: repo_head
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - name: Bashrc
        shell: bash
        run: |
          echo ::group::bashrc
          cat ~/.bashrc
          echo ::endgroup::
          echo ::group::bash_profile
          cat ~/.bash_profile
          echo ::endgroup::
      - name: Base Repository Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ inputs.admin-token || github.token }}
          repository: ${{ github.repository }}
          ref: ${{ github.event.repository.default_branch }}
          path: ${{ env.PATH_REPO_BASE }}
          fetch-depth: 0
      - name: Head Repository Checkout
        # https://github.com/actions/checkout
        uses: actions/checkout@v4
        with:
          token: ${{ inputs.admin-token || github.token }}
          repository: ${{ (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name) || github.repository }}
          ref: ${{ (github.event_name == 'pull_request' && github.event.pull_request.head.ref) || github.ref }}
          path: ${{ env.PATH_REPO_HEAD }}
          fetch-depth: 0
      - name: Bashrc
        shell: bash
        run: |
          echo ::group::bashrc
          cat ~/.bashrc
          echo ::endgroup::
          echo ::group::bash_profile
          cat ~/.bash_profile
          echo ::endgroup::
      - name: Environment Setup
        id: setup
        uses: ./repo_head/.github/actions/install-env
        with:
          repo_path: ${{ env.PATH_REPO_HEAD }}
          load_cache: 'true'
          activate_env: proman
      - name: Debug0
        shell: bash -el {0}
        run: |
          python -c "import subprocess; subprocess.run(["bash", "-c", "version"])"
      - name: Debug
        shell: bash -el {0}
        run: |
          
          echo "HOME: $HOME"
          echo "USER: $USER"
          ls -la ~
          echo ::group::❌❌Debug
          cat ~/.bashrc || echo "No .bashrc file found"
          cat ~/.bash_profile || echo "No .bash_profile file found"
          echo ::endgroup::
          cat ~/.profile || echo "No .profile file found"

      - name: ProMan Setup
        run: pip install ${{ env.PATH_REPO_HEAD }}/.github/actions/proman --no-deps
      - name: ProMan
        id: proman
        env:
          GITHUB_ADMIN_TOKEN: ${{ secrets.github-admin-token }}
          ZENODO_TOKEN: ${{ secrets.zenodo-token }}
          ZENODO_SANDBOX_TOKEN: ${{ secrets.zenodo-sandbox-token }}
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: python -m proman
      - name: Report Upload
        uses: actions/upload-artifact@v4
        with:
          path: ${{ steps.setup.outputs.report_dirpath }}
          name: Reports
  status:
    name: Status
    runs-on: ubuntu-latest
    needs: manager
    steps:
      - name: Status Check
        run: |
          if [ "${{ needs.manager.outputs.fail }}" = "true" ]; then
            exit 1
          else
            exit 0
          fi

