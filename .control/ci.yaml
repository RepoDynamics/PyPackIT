pypkg_ci:
  name: ProMan
  path:
    root: .github/actions/proman
  os: ${{ pypkg_main.os }}$
  python:
    version:
      spec: '>=3.10'
  dependency:
    core:
      rich:
        install:
          pip:
            version: '>=13.5,<14'
      jinja2:
        install:
          pip:
            version: '>=3,<4'
      actionman:
        install:
          pip:
            version: '==0.0.0.dev24'
            homepage: https://pypi.org/project/actionman
        url:
          docs: https://actionman.repodynamics.com
          source: https://github.com/repodynamics/actionman
      controlman:
        install:
          pip:
            version: '== 0.0.0.dev447'
            homepage: https://pypi.org/project/controlman
        url:
          docs: https://controlman.repodynamics.com
          source: https://github.com/repodynamics/controlman
      conventionalcommits:
        install:
          pip:
            version: '== 0.0.0.dev65'
            homepage: https://pypi.org/project/conventionalcommits
        url:
          docs: https://conventionalcommits.repodynamics.com
          source: https://github.com/repodynamics/conventionalcommits
      github-contexts:
        install:
          pip:
            version: '== 0.0.0.dev21'
            homepage: https://pypi.org/project/github-contexts
        url:
          docs: https://github-contexts.repodynamics.com
          source: https://github.com/repodynamics/github-contexts
      loggerman:
        install:
          pip:
            version: '== 0.0.0.dev93'
            homepage: https://pypi.org/project/loggerman
        url:
          docs: https://loggerman.repodynamics.com
          source: https://github.com/repodynamics/loggerman
      mdit:
        install:
          pip:
            version: '== 0.0.0.dev63'
            homepage: https://pypi.org/project/mdit
        url:
          docs: https://mdit.repodynamics.com
          source: https://github.com/repodynamics/mdit
      htmp:
        install:
          pip:
            version: '== 0.0.0.dev5'
            homepage: https://pypi.org/project/htmp
        url:
          docs: https://htmp.repodynamics.com
          source: https://github.com/repodynamics/htmp
      pylinks:
        install:
          pip:
            version: '== 0.0.0.dev76'
            homepage: https://pypi.org/project/pylinks
        url:
          docs: https://pylinks.repodynamics.com
          source: https://github.com/repodynamics/pylinks
      pysyntax:
        install:
          pip:
            version: '== 0.0.0.dev6'
            homepage: https://pypi.org/project/pysyntax
        url:
          docs: https://pysyntax.repodynamics.com
          source: https://github.com/repodynamics/pysyntax
      versionman:
        install:
          pip:
            version: '== 0.0.0.dev250'
            homepage: https://pypi.org/project/versionman
        url:
          docs: https://versionman.repodynamics.com
          source: https://github.com/repodynamics/versionman
      gittidy:
        install:
          pip:
            version: '== 0.0.0.dev91'
            homepage: https://pypi.org/project/gittidy
        url:
          docs: https://gittidy.repodynamics.com
          source: https://github.com/repodynamics/gittidy
      pkgdata:
        install:
          pip:
            version: '== 0.0.0.dev5'
            homepage: https://pypi.org/project/pkgdata
        url:
          docs: https://pkgdata.repodynamics.com
          source: https://github.com/repodynamics/pkgdata
      pyshellman:
        install:
          pip:
            version: '== 0.0.0.dev53'
            homepage: https://pypi.org/project/pyshellman
        url:
          docs: https://pyshellman.repodynamics.com
          source: https://github.com/repodynamics/pyshellman
      pyserials:
        install:
          pip:
            version: '== 0.0.0.dev66'
            homepage: https://pypi.org/project/pyserials
        url:
          docs: https://pyserials.repodynamics.com
          source: https://github.com/repodynamics/pyserials
      fileex:
        install:
          pip:
            version: '== 0.0.0.dev1'
            homepage: https://pypi.org/project/fileex
        url:
          docs: https://fileex.repodynamics.com
          source: https://github.com/repodynamics/fileex
      ansi-sgr:
        install:
          pip:
            version: '== 0.0.0.dev10'
            homepage: https://pypi.org/project/ansi-sgr
        url:
          docs: https://ansi-sgr.repodynamics.com
          source: https://github.com/repodynamics/ansi-sgr
      pycolorit:
        install:
          pip:
            version: '== 0.0.0.dev11'
            homepage: https://pypi.org/project/pycolorit
        url:
          docs: https://pycolorit.repodynamics.com
          source: https://github.com/repodynamics/pycolorit
  pyproject:
    build-system:
      build-backend: setuptools.build_meta
      requires:
        - setuptools >=72.1.0,<73
    project:
      name: ${{ pypkg_ci.name }}$
      version: 0.1.0
      requires-python: ${{ pypkg_ci.python.version.spec }}$
      dependencies: >-
        #{{ return hook.pyproject_dependency("core", pkg="ci") }}#
    tool:
      setuptools:
        include-package-data: true
        packages:
          find:
            where:
              - ${{ pypkg_ci.path.source_rel }}$
            namespace: true
control:
  cache:
    retention_hours:
      css_color_filter: 0
workflow:
  refactor:
    pre_commit_config: ${{ devcontainer_main.environment.pre_commit.file.pre_commit_config.content }}$
  web:
    container:
      id: docs
      command: ${{ devcontainer_docs.environment.website.task.build.alias }}$
    artifact:
      build:
        name: Website - v{{ version }}
        path: ${{ data_website.path.build }}$
        include_hidden: true
      pages:
        name: Website - v{{ version }} - GH-Pages
        path: ${{ data_website.path.build }}$/${{ file_script_web_build.data.sphinx_builder }}$
  binder:
    path:
      config: .binder_config
      dockerfile: .binder
    image:
      test_script: '${{ pypkg_test.entry.cli.main.name }}$'
  publish:
    anaconda:
      name: Publish (Anaconda)
      task_name: '{{ pkg.name }} v{{ version }}'
      env:
        name: Anaconda ({{ pkg.name }})
        url: https://anaconda.org/${{ ..index.channel }}$/{{ pkg.name }}/files?version={{ version }}
      index:
        channel: ${{ repo.owner }}$
      action:
        pkg: auto
        test: auto
    pypi:
      name: Publish (PyPI)
      task_name: '{{ pkg.name }} v{{ version }}'
      env:
        name: PyPI ({{ pkg.name }})
        url: https://pypi.org/project/{{ pkg.name }}/{{ version }}
      index:
        url:
          upload: https://upload.pypi.org/legacy/
      action:
        pkg: auto
        test: auto
    testpypi:
      name: Publish (TestPyPI)
      task_name: '{{ pkg.name }} v{{ version }}'
      env:
        name: TestPyPI ({{ pkg.name }})
        url: https://test.pypi.org/project/{{ pkg.name }}/{{ version }}
      index:
        url:
          upload: https://test.pypi.org/legacy/
      action:
        pkg: auto
        test: auto
    github:
      name: Release
      task_name: GitHub
      env:
        name: GitHub Release
        url: ${{ repo.url.deployments.home }}$
      release:
        body:
          body: ${{ __temp__.changelog.body }}$
          sections: ${{ __temp__.changelog.sections }}$
      asset:
        template:
          name: >-
            #{{ return slugify(get("name")) }}#-{{ version }}.zip
          label: ${{ name }}$
          format: zip
          files:
            - source: template
            - source: .github/workflows
              destination: .github/workflows
        sdist:
          name: >-
            #{{ return slugify(get("name")) }}#-{{ version }}-sdists.zip
          label: Source Distributions
          format: zip
          files:
            - pattern: '^[^/]+ - sdist/[^/]+\.tar\.gz$'
              artifact: true
        wheel:
          name: >-
            #{{ return slugify(get("name")) }}#-{{ version }}-wheels.zip
          label: Binary Distributions
          format: zip
          files:
            - pattern: '^[^/]+ - wheels/[^/]+\.whl$'
              artifact: true
        conda:
          name: >-
            #{{ return slugify(get("name")) }}#-{{ version }}-conda.zip
          label: Conda Distributions
          format: zip
          files:
            - pattern: '^[^/]+ - conda/.+\.conda$'
              artifact: true
        dockerfile:
          name: Dockerfile
          label: Dockerfile
          files:
            - source: ${{ workflow.binder.path.dockerfile }}$/Dockerfile
          media_type: text/plain
        docs:
          name: >-
            #{{ return slugify(get("name")) }}#-{{ version }}-docs.zip
          label: Documentation
          format: zip
          files:
            - pattern: '^Website(?!.*GH-Pages)[^/]*$'
              artifact: true
        license:
          name: >-
            #{{ return slugify(get("name")) }}#-{{ version }}-license.zip
          label: License
          format: zip
          files:
            - pattern: '^(LICENSE|COPYING)[^/]*$'
        citation:
          name: >-
            #{{ return slugify(get("name")) }}#-{{ version }}-citation.cff
          label: Citation
          files:
            - source: CITATION.cff
          media_type: application/yaml
    zenodo:
      name: Release
      task_name: Zenodo
      env:
        name: Zenodo
        url: https://zenodo.org/records/{{ id }}
      asset: ${{ workflow.publish.github.asset }}$
    zenodo_sandbox:
      name: Release
      task_name: Zenodo Sandbox
      env:
        name: Zenodo Sandbox
        url: https://sandbox.zenodo.org/records/{{ id }}
      asset: ${{ workflow.publish.github.asset }}$
  schedule:
    cca:
      cron: '43 23 * * *'  # Every day at 23:43 UTC.
      branch_types: [ main, release, pre ]
      job:
        sync:
          action: pull
        announcement_expiry:
          action: commit
    cr_ct:
      cron: '43 6 * * 6'  # Every Saturday at 6:43 UTC.
      branch_types: [ main, release ]
      job:
        lint:
          action: issue
        refactor:
          action: pull
        test:
          action: issue
  test:
    codecov:
      codecov_yml_path: ${{ devcontainer_main.environment.codecov.file.codecov_config.path }}$
