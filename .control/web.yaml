# Website Table of Contents (TOC)

file_web_toc:
  name: Website Table of Contents
  summary: Central table of contents definition for the entire website.
  description: |
    This file is used by the 
    [Sphinx-External-TOC](https://github.com/executablebooks/sphinx-external-toc)
    extension to define the structure of the website.
  type: yaml
  path: ${{ web.path.source }}/.toc.yaml
  content:
    root: index
    defaults:
      hidden: true
    entries:
      - file: intro/index
        title: Intro
        options:
          numbered: true
        entries:
          - file: intro/motivation/index
          - file: intro/overview/index
          - file: intro/background/index
            entries:
              - file: intro/background/methodologies/index
              - file: intro/background/github/index
              - file: intro/background/python/index
                entries:
                  - file: intro/background/python/pypi/index
                  - file: intro/background/python/pip/index
                  - file: intro/background/python/packaging/index
                  - file: intro/background/python/governance/index
              - file: intro/background/conda/index
                entries:
                  - file: intro/background/conda/packaging/index
              - file: intro/background/versioning/index
              - file: intro/background/jsonpath/index
              - file: intro/background/yaml/index
              - file: intro/background/toml/index
              - file: intro/background/jinja/index
              - file: intro/background/markdown/index
          - file: intro/glossary/index
          - file: intro/references/index
      - file: manual/index
        title: Manual
        options:
          numbered: true
        entries:
          - file: manual/install/index
            entries:
              - file: manual/install/new/index
              - file: manual/install/existing/index
              - file: manual/install/upgrade/index
              - file: manual/install/common/index
          - file: manual/quickstart/index
          - file: manual/config/index
            entries:
              - file: manual/config/location/index
              - file: manual/config/structure/index
              - file: manual/config/options/index
              - file: manual/config/synchronization/index
              - file: manual/config/outputs/index
              - file: manual/config/templating/index
              - file: manual/config/inheritance/index
              - file: manual/config/hooks/index
              - file: manual/config/caching/index
      - file: api/index
        title: API
        entries:
          - file: api/metadata/index
          - file: api/local/index
          - file: api/changelog/index
          - file: api/variables/index
          - file: api/contributors/index
          - file: api/cache/index
          - file: api/refs/index
      - file: news/index
        title: News
        entries:
          - glob: news/post/**
      - file: contribute/index
        title: Contribute
        options:
          numbered: true
        entries:
          - file: contribute/feedback/index
            entries:
              - file: contribute/feedback/security/index
              - file: contribute/feedback/bug/index
          - file: contribute/develop/index
          - file: contribute/support/index
      - file: about/index
        title: About
        options:
          numbered: true
        entries:
          - file: about/citation/index
          - file: about/contact/index
          - file: about/license/index
            entries:
              - glob: about/license/*/index
      - file: help/index
        title: Help
        options:
          numbered: true
        entries:
          - file: help/website/index
            entries:
              - file: help/website/tips/index
              - file: help/website/api/index

web:
  url:
    custom:
      name: pypackit.repodynamics.com
data_website:
  path:
    root: docs/website
    source_rel: source
    source: ${{ .root }}$/${{ .source_rel }}$
    build: ${{ .root }}$/.build
    to_root: |
      #{{ return len(get(".source").split("/")) * "../" }}#
  announcement:
    path: ${{ web.path.root }}$/announcement.html
  file:
    icon:
      rel_path: ${{ __data__.logo_dir_path }}$/favicon.svg
    logo_simple_light:
      rel_path: ${{ __data__.logo_dir_path }}$/simple_light.svg
    logo_simple_dark:
      rel_path: ${{ __data__.logo_dir_path }}$/simple_dark.svg
    logo_simple_raster:
      rel_path: ${{ __data__.logo_dir_path }}$/simple_light.png
    logo_full_light:
      rel_path: ${{ __data__.logo_dir_path }}$/full_light.svg
    logo_full_dark:
      rel_path: ${{ __data__.logo_dir_path }}$/full_dark.svg
    logo_full_raster:
      rel_path: ${{ __data__.logo_dir_path }}$/full_light.png
  page: '#{{ return hook.web_page() }}#'
  jsonschema:
    schema:
      additionalProperties: false
      properties:
        path:
          summary: Paths to the website directory.
          type: object
          additionalProperties: false
          required: [ root, source_rel, source, to_root ]
          properties:
            root:
              summary: Path to website root directory relative to the repository root.
              $ref: https://jsonschemata.repodynamics.com/path/posix/absolute-from-cwd
            source_rel:
              summary: Path to website source directory relative to the website root directory.
              $ref: https://jsonschemata.repodynamics.com/path/posix/absolute-from-cwd
            source:
              summary: Path to website source directory relative to the repository root.
              $ref: https://jsonschemata.repodynamics.com/path/posix/absolute-from-cwd
            to_root:
              summary: Relative path from the source directory to the root of the repository.
              type: string
        page:
          summary: Paths to important pages on the website.
          description:
            All paths must be relative to the root of the website directory, without suffix.
          type: object
          additionalProperties:
            title: Relative path to the page.
            type: object
            properties:
              title:
                summary: Title of the page.
                type: string
                examples:
                  - Introduction
                  - User Manual
                  - Installation
              path:
                summary: Path to the page.
                type: string
                examples:
                  - intro
                  - intro/index
                  - user-manual
                  - user-manual/installation/index
              url:
                summary: URL of the page.
                $ref: https://jsonschemata.repodynamics.com/url/http-explicit
            examples:
              - about/license
              - help/contact
        quicklinks:
          summary: Quicklinks
          description: |
            Quicklinks to important pages on the website.
            These are displayed in the footer of the website.
          type: array
          items:
            title: Group
            type: object
            required: [ links ]
            properties:
              title:
                summary: Title for the group of quicklinks.
                type: string
                examples:
                  - About
                  - Contact
                  - Help
              links:
                summary: Quicklinks in the group.
                type: array
        announcement:
          summary: Configurations of project announcements.
          type: object
          required: [ path, retention_days, url ]
          properties:
            path:
              summary: Path to the announcement banner file.
              $ref: https://jsonschemata.repodynamics.com/path/posix/absolute-from-cwd
              default: ${{ web.path.root }}$/announcement.html
              examples:
                - docs/announcement.html
            retention_days:
              summary: Number of days to keep an announcement.
              default: 30
              $ref: https://jsonschemata.repodynamics.com/number/non-negative
            url:
              summary: URL to the announcement banner file.
              $ref: https://jsonschemata.repodynamics.com/url/http-explicit
              default: ${{ repo.url.raw }}$/${{ .path }}$
        file:
          summary: Declaration of files in the website source directory.
          type: object
          additionalProperties:
            title: Website File
            description: |
              Declaration of a file in the website source directory.
            type: object
            additionalProperties: false
            required: [ path, url ]
            properties:
              rel_path:
                title: Relative Path
                summary: |
                  Path to the file relative to the website source directory.
                $ref: https://jsonschemata.repodynamics.com/path/posix/absolute-from-cwd
              path:
                summary: Absolute path to the file.
                $ref: https://jsonschemata.repodynamics.com/path/posix/absolute-from-cwd
                default: ${{ web.path.source }}$/${{ .rel_path }}$
              url:
                title: URL
                summary: URL to the file.
                $ref: https://jsonschemata.repodynamics.com/url/https
                default: ${{ repo.url.raw }}$/${{ .path }}$
data_css:
  stylesheet:
    theme_colors:
      # Colors for pydata-sphinx-theme
      # - Docs: https://pydata-sphinx-theme.readthedocs.io/en/stable/user_guide/styling.html#color-variables
      # - Source: https://github.com/pydata/pydata-sphinx-theme/blob/main/src/pydata_sphinx_theme/assets/styles/variables/_color.scss
      cases:
        light:
          selector: 'html[data-theme="light"]'
          prefix: --pst-color-
        dark:
          selector: 'html[data-theme="dark"]'
          prefix: --pst-color-
      properties: ${{ color }}$
    theme_font_sizes:
      # Font sizes for pydata-sphinx-theme.
      # - Docs: https://pydata-sphinx-theme.readthedocs.io/en/stable/user_guide/fonts.html
      # - Source: https://github.com/pydata/pydata-sphinx-theme/blob/main/src/pydata_sphinx_theme/assets/styles/variables/_fonts.scss
      selector: html
      prefix: --pst-font-size-
      properties:
        milli: 0.9rem
        base: 1rem
        # 1.2x (minor third) typographic scale starting from 1.10rem.
        # https://designcode.io/typographic-scales
        h6: 1.10rem
        h5: 1.32rem
        h4: 1.58rem
        h3: 1.90rem
        h2: 2.28rem
        h1: 2.74rem
    theme_header_color:
      cases:
        light:
          selector: html[data-theme="light"] .bd-header
        dark:
          selector: html[data-theme="dark"] .bd-header
      properties:
        background-color:
          light: white !important
          dark: black !important
    black_to_primary_filter:
      # CSS filters for transforming black to project's primary color.
      # This is used to dynamically change the color of SVG icons
      # with class name 'black-svg-icon'.
      cases:
        light:
          selector: html[data-theme="light"] .black-svg-icon
        dark:
          selector: html[data-theme="dark"] .black-svg-icon
      properties:
        filter: |
          #{{
            import pycolorit as pcit
  
            primary_color = get("color.primary")
            return {
                theme: pcit.css_filter.generate(pcit.color.css(primary_color[theme]))[2]
                for theme in ["light", "dark"]
            }
          }}#

  jsonschema:
    schema:
      title: CSS Stylesheets
      summary: CSS stylesheet definitions.
      description: |
        These stylesheets are dynamically added to the website during builds.
        For each stylesheet, add a key-value pair where the
        key is an ID for the stylesheet,
        and the value is a mapping defining CSS selectors, 
        property names, and corresponding values.
      type: object
      additionalProperties: false
      properties:
        stylesheet:
          type: object
          additionalProperties:
            title: Stylesheet
            summary: |
              A series of property-value pairs with common property-name prefix and/or suffixes,
              for a common CSS selector.
            description: |
              You can either define a single `selector` with optional `prefix` and `suffix`,
              or defines a series of `cases`, each with its own selector, prefix, and suffix.
            type: object
            additionalProperties: false
            required: [ properties ]
            oneOf:
              - required: [ selector ]
              - required: [ cases ]
            properties:
              selector:
                summary: Single CSS selector to apply all properties to.
                $ref: https://jsonschemata.repodynamics.com/string/nonempty
                description: |
                  If you use this instead of `cases`, then all `properties` must be strings.
                examples:
                  - 'html[data-theme="light"]'
                  - '.some-class-name'
                  - '#some-id'
              prefix:
                summary: Single prefix to prepend to all property names.
                $ref: https://jsonschemata.repodynamics.com/string/nonempty
                examples:
                  - '--'
                  - '--pst-color-'
              suffix:
                summary: Single suffix to append to all property names.
                $ref: https://jsonschemata.repodynamics.com/string/nonempty
              cases:
                summary: Cases for applying properties.
                description: |
                  To remove redundancy, you can define multiple selectors
                  (each with optional property-names prefix and suffix)
                  to apply properties to. For example, you may define
                  color variables to be applied to `html[data-theme="light"]`
                  and `html[data-theme="dark"]` selectors.
                type: object
                minProperties: 1
                additionalProperties:
                  type: object
                  additionalProperties: false
                  required: [ selector ]
                  properties:
                    selector:
                      summary: CSS selector to apply properties to.
                      $ref: https://jsonschemata.repodynamics.com/string/nonempty
                    prefix:
                      summary: Prefix to prepend to property names.
                      $ref: https://jsonschemata.repodynamics.com/string/nonempty
                    suffix:
                      summary: Suffix to append to property names.
                      $ref: https://jsonschemata.repodynamics.com/string/nonempty
              properties:
                summary: Properties to apply to the selector.
                description: |
                  Each key here defines the middle part of a CSS property name.
                  It is prefixed and suffixed (if defined) to generate the full name.
                  If you have defined a single selector for this stylesheet,
                  then all values must be strings. Otherwise, values must be mappings
                  from case IDs to corresponding values as strings.
                type: object
                additionalProperties:
                  title: Property
                  summary: The value of the CSS property.
                  description: |
                    If you have defined a single selector for this stylesheet,
                    then this must be a string. Otherwise, it must be a mapping
                    from case IDs to corresponding values as strings.
                  oneOf:
                    - $ref: https://jsonschemata.repodynamics.com/string/nonempty
                    - type: object
                      additionalProperties:
                        $ref: https://jsonschemata.repodynamics.com/string/nonempty

file_sphinx_conf:
  name: Sphinx Configuration
  summary: Sphinx configuration file for the website.
  type: json
  path: ${{ web.path.source }}$/conf.json
  content: |
    #{{
      import pyserials as ps
      
      out = {}
      for pkg_manager in ("conda", "pip"):
        for pkg in get(f"devcontainer_docs.environment.website.{pkg_manager}", {}).values():
          sphinx_conf = pkg.get("data", {}).get("sphinx_config")
          if sphinx_conf:
            ps.recursive_update(
              source=out,
              addon=sphinx_conf,
              undefined_existing="raise"
            )
      return out    
    }}#
  jsonschema:
    schema:
      $ref: https://jsonschemata.repodynamics.com/config/sphinx

data_readthedocs:
  name: ${{ repo.name }}$
  platform: community
  version_scheme:
    single_version: false
    translation: false
  language: en
  jsonschema:
    schema:
      summary: Workflow configurations for the ReadTheDocs website.
      description: |
        These are used to create website preview links for pull requests.
      type: object
      additionalProperties: false
      required: [ name, platform, version_scheme, language ]
      properties:
        name:
          summary: Name of the project on ReadTheDocs.
          description: |
            This is the slug name of the project.
          type: string
        platform:
          summary: ReadTheDocs hosting platform type.
          type: string
          enum: [ community, business ]
        version_scheme:
          summary: Versioning scheme of the website.
          description: |
            See [ReadTheDocs documentation](https://docs.readthedocs.io/en/stable/versioning-schemes.html)
            for more information.
          type: object
          additionalProperties: false
          required: [ single_version, translation ]
          properties:
            single_version:
              summary: Whether the website has a single version (vs. multiple versions).
              type: boolean
            translation:
              summary: Whether the website supports multiple languages.
              type: boolean
        language:
          summary: Language of the website.
          type: string
file_readthedocs:
  name: ReadTheDocs Configuration
  summary: >-
    [Configuration file](https://docs.readthedocs.io/en/stable/config-file/v2.html) 
    for the [ReadTheDocs](https://readthedocs.org/) web hosting service.
  type: yaml
  path: .readthedocs.yaml
  path_schema:
    description: |
      By default, ReadTheDocs only looks for a 
      [`.readthedocs.yaml`]((https://docs.readthedocs.io/en/stable/config-file/index.html#where-to-put-your-configuration-file)) 
      file in the root of the repository.
      However, you can [change this manually](https://docs.readthedocs.io/en/stable/guides/setup/monorepo.html#how-to-use-a-readthedocs-yaml-file-in-a-sub-folder)
      by setting another path on the ReadTheDocs website,
      and then specifying that path here.
    default: .readthedocs.yaml
  content:
    version: 2
    build: # Set the version of Python and other tools you might need
      os: ubuntu-22.04
      tools:
        python: "mambaforge-4.10"
      jobs:
        post_checkout:
          # versioningit needs the full git history to determine the package's version at build time.
          # see: https://github.com/readthedocs/readthedocs.org/issues/5989#issuecomment-853039401
          - git fetch --unshallow
    conda: # Website dependencies
      environment: ${{ web.env.file.conda.path }}$
    python:
      install: # Install the package
        - method: pip
          path: ${{ pkg.path.root }}$
    sphinx: # Build with Sphinx
      configuration: ${{ web.path.source }}$/conf.py
      builder: dirhtml
      fail_on_warning: false
    formats: all  # Build all additional formats of the documentation, i.e. pdf, epub, and htmlzip
  jsonschema:
    schema: !ext https://raw.githubusercontent.com/readthedocs/readthedocs.org/refs/heads/main/readthedocs/rtd_tests/fixtures/spec/v2/schema.json

file_script_web_build:
  name: Website Build Script
  summary: Script to build the website using Sphinx.
  path: ${{ devcontainer_docs.path }}$/script/website/build.sh
  type: txt
  data:
    tar_path: ${{ data_website.path.build }}$/website.tar
    sphinx_build_options: --verbose --show-traceback --keep-going --color --nitpicky --jobs auto
  content: |
    SPHINX_COMMON_OPTIONS="${{ .data.sphinx_build_options }}$"
    sphinx-build -M dirhtml ${{ data_website.path.source }}$ ${{ data_website.path.build }}$ $SPHINX_COMMON_OPTIONS
    
    # Create a tarball of the built website according to GitHub Pages requirements.
    # Ref: https://github.com/actions/upload-pages-artifact/blob/main/action.yml
    tar \
      --dereference --hard-dereference \
      --directory "${{ data_website.path.build }}$/dirhtml" \
      -cvf "${{ .data.tar_path }}$" \
      --exclude=.git \
      --exclude=.github \
      --exclude=".[^/]*" \
      .
  notes: |
    References:
    - [`sphinx-build` options](https://www.sphinx-doc.org/en/master/man/sphinx-build.html)
    - [Sphinx builders](https://www.sphinx-doc.org/en/master/usage/builders/index.html)
    - [Sphinx Makefile template](https://github.com/sphinx-doc/sphinx/blob/master/sphinx/templates/quickstart/Makefile.new.jinja)
file_script_web_livehtml:
  name: Website Live Preview Script
  summary: Script to start a live preview server for the website.
  path: ${{ devcontainer_docs.path }}$/script/website/livehtml.sh
  type: txt
  content: |
    sphinx-autobuild \
      ${{ data_website.path.source }}$ \
      ${{ data_website.path.build }}$ \
      ${{ file_script_web_build.config.sphinx_build_options }}$ \
      -a -b=dirhtml --open-browser --delay 0
  notes: |
    References:
    - [`sphinx-autobuild` options](https://github.com/sphinx-doc/sphinx-autobuild/blob/main/README.rst)
devcontainer_docs:
  dockerfile:
    - FROM texlive/texlive:latest
  container:
    name: Documentation Environment
    shutdownAction: none
    features:
      # https://github.com/devcontainers/features/tree/main/src/common-utils
      ghcr.io/devcontainers/features/common-utils:2: {}
      # https://github.com/devcontainers/features/tree/main/src/conda
      ghcr.io/devcontainers/features/conda:1:
        version: latest
        addCondaForge: true
      # https://github.com/devcontainers/features/tree/main/src/git
      "ghcr.io/devcontainers/features/git:1": {}
    customizations:
      vscode:
        extensions:
          - James-Yu.latex-workshop
          - ExecutableBookProject.myst-highlight
  environment:
    website:
      conda:
        sphinx:
          spec:
            version: ==8.1.3
          url:
            conda: https://anaconda.org/conda-forge/sphinx
            docs: https://www.sphinx-doc.org/
            source: https://github.com/sphinx-doc/sphinx
          data:
            sphinx_config:
              project: ${{ name }}$
              author: ${{ team.owner.name.full }}$
              project_copyright: ${{ copyright }}$
              needs_sphinx: 8.1
              today_fmt: '%b %d, %Y'
              numfig: true
              numfig_secnum_depth: 3
              pygment_style: default
              show_authors: true
              exclude_patterns:
                - "Thumbs.db"
                - ".DS_Store"
                - ".ipynb_checkpoints"
                - "README.md"
              trim_footnote_reference_space: true
              math_eqref_format: Eq. {number}
              math_number_all: true
              math_numfig: true
              math_numsep: .
              nitpicky: true
              maximum_signature_line_length: 80
              root_doc: index
              templates_path:
                - _templates  # Ref: https://www.sphinx-doc.org/en/master/development/templating.html
              show_warning_types: true
              html_title: ${{ name }}$
              html_short_title: ${{ name }}$
              html_baseurl: ${{ web.url.base }}$
              html_favicon: ${{ web.file.icon.rel_path }}$
              html_sidebars:
                "${{ web.page.blog.path }}$/**":
                  - ablog/postcard.html
                  - ablog/recentposts.html
                  - ablog/tagcloud.html
                  - ablog/categories.html
                  - ablog/archives.html
                  - ablog/authors.html
              html_static_path:
                - _static
                # Due to an issue with the PyData Sphinx Theme,
                #    the logo files used in the navbar must be explicitly
                #    added to the root of static path, since PyData always looks there,
                #    regardless of the set path.
                #    Refs:
                #    - https://github.com/pydata/pydata-sphinx-theme/issues/1325
                #    - https://github.com/pydata/pydata-sphinx-theme/issues/1328
                #    - https://github.com/pydata/pydata-sphinx-theme/issues/1385
                - '${{ web.file.logo_simple_light.rel_path }}$'
                - '${{ web.file.logo_simple_dark.rel_path }}$'
              html_css_files:
                - https://cdn.jsdelivr.net/npm/choices.js/public/assets/styles/choices.min.css
              html_js_files:
                - https://cdn.jsdelivr.net/npm/choices.js/public/assets/scripts/choices.min.js
              html_secnumber_suffix: ". "
              html_extra_path: [ ]
              html_use_opensearch: ${{ web.url.base }}$
              html_show_sphinx: false
              html_math_renderer: mathjax
              html_context:
                # Used by the Giscus template to extract page title
                pp_title_sep: ${{ web.sphinx.config.html_secnumber_suffix }}$
              html_last_updated_fmt: '%b %d, %Y'
              numfig_format:
                code-block: Code %s
                figure: Figure %s
                section: Section
                table: Table %s
              language: en
              latex_engine: lualatex
              latex_elements:
                papersize: a4paper
                pointsize: 11pt
                figure_align: htbp
                fontpkg: |
                  \setmainfont{DejaVu Serif}
                  \setsansfont{DejaVu Sans}
                  \setmonofont{DejaVu Sans Mono}
                preamble: |
                  \usepackage[titles]{tocloft}
                  \usepackage{fontspec}
                  \cftsetpnumwidth {1.25cm}\cftsetrmarg{1.5cm}
                  \setlength{\cftchapnumwidth}{0.75cm}
                  \setlength{\cftsecindent}{\cftchapnumwidth}
                  \setlength{\cftsecnumwidth}{1.25cm}
                fncychap: '\usepackage[Bjornstrup]{fncychap}'
                printindex: '\footnotesize\raggedright\printindex'
              latex_theme: manual
              latex_show_urls: footnote
              latex_show_pagerefs: true
              latex_logo: ${{ web.file.logo_full_raster.rel_path }}$
              python_display_short_literal_types: true
              python_maximum_signature_line_length: 80
              # ----- Builtin Extensions ------
              # https://www.sphinx-doc.org/en/master/usage/extensions/index.html#built-in-extensions
              extensions:
                - sphinx.ext.duration
                - sphinx.ext.graphviz
                - sphinx.ext.inheritance_diagram
                # Add links to external documentation:
                # Also required for the ABlog extension.
                # - https://ablog.readthedocs.io/en/stable/index.html#getting-started
                - sphinx.ext.intersphinx
                # Add external links to source code:
                # For configuration see `linkcode_resolve` function in `conf.py`.
                - sphinx.ext.linkcode
              # Config for sphinx.ext.intersphinx:
              # - https://www.sphinx-doc.org/en/master/usage/extensions/intersphinx.html
              intersphinx_mapping:
                # When `intersphinx_registry` (see `env` key) is used,
                # you can specify keys without values;
                # these will be automatically filled in by the registry.
                python: [ 'https://docs.python.org/3/', null ]
                numpy: null
                scipy: null
                matplotlib: null
        pydata-sphinx-theme:
          spec:
            version: ==0.16.1
          url:
            conda: https://anaconda.org/conda-forge/pydata-sphinx-theme
            docs: https://pydata-sphinx-theme.readthedocs.io/
            source: https://github.com/pydata/pydata-sphinx-theme
          data:
            sphinx_config:
              html_theme: pydata_sphinx_theme
              html_theme_options:
                # ---- Section Layout ----
                # https://pydata-sphinx-theme.readthedocs.io/en/stable/user_guide/layout.html#references
                # -- Header --
                navbar_start: [ navbar-logo ]  # header left
                navbar_center: [ navbar-nav ]  # header center
                navbar_persistent: [ search-button, theme-switcher, user_login_button ]  # header right persistent
                navbar_end: [ navbar-icon-links ]  # header right
                navbar_align: left  # alignment of `navbar_center`: {"left", "right", "content"}
                # -- Article Header --
                article_header_start: [ breadcrumbs ]  # article header left
                article_header_end: [ ]  # article header right
                # -- Article Footer --
                article_footer_items: [ ]  # article footer
                # -- Primary Sidebar (left) --
                primary_sidebar_end: [ ]  # left sidebar bottom
                # -- Secondary Sidebar (right) --
                secondary_sidebar_items:
                  - page-toc
                  - last-updated
                  - edit-this-page
                # -- Content Footer --
                content_footer_items: [ user_login_dialog ]
                # -- Footer --
                footer_start: [ footer_badges ]  # footer left
                footer_center: [ ]  # footer center
                footer_end: [ quicklinks ]  # footer right
                # ---- General ----
                show_prev_next: True
                show_nav_level: 1
                navigation_depth: 5
                show_toc_level: 5
                header_links_before_dropdown: 7
                icon_links:
                  - name: Source Repository
                    icon: fa-brands fa-github
                    url: ${{ repo.url.home }}$
                  - name: Issues
                    icon: fa-regular fa-circle-dot
                    url: ${{ repo.url.issues.home }}$
                  - name: Pull Requests
                    icon: fa-solid fa-code-pull-request
                    url: ${{ repo.url.pulls.home }}$
                  - name: Discussions
                    icon: fa-solid fa-comments
                    url: ${{ repo.url.discussions.home }}$
                  - name: License
                    icon: fa-solid fa-copyright
                    url: ${{ web.page.license.url }}$
                icon_links_label: External links
                use_edit_page_button: true
                announcement: ${{ web.announcement.url }}$
                search_bar_text: Search ${{ name }}$
                back_to_top_button: true
                logo:
                  image_light: _static/simple_light.svg
                  image_dark: _static/simple_dark.svg
                  alt_text: ${{ name }}$
                pygments_light_style: default  # Code highlighting color themes. See: https://pygments.org/styles/
                pygments_dark_style: monokai   # https://pydata-sphinx-theme.readthedocs.io/en/stable/user_guide/styling.html#configure-pygments-theme
                sidebarwidth: 270
                sidebar_includehidden: True
                # ---- Analytics ----
                analytics:
                  google_analytics_id: G-0X66W6TGL2
              html_context:
                github_user: ${{ repo.owner }}$
                github_repo: ${{ repo.name }}$
                github_version: ${{ repo.default_branch }}$
                doc_path: ${{ web.path.source }}$
                default_mode: auto  # Default theme mode: {'light', 'dark', 'auto'}
        # ---- Third-Party Sphinx Extensions ----
        # Resources:
        # - https://www.sphinx-doc.org/en/master/usage/extensions/index.html#third-party-extensions
        myst-nb:
          description: Adding MyST Markdown and Jupyter support to Sphinx.
          spec:
            version: ==1.2.0
          url:
            conda: https://anaconda.org/conda-forge/myst-nb
            docs: https://myst-parser.readthedocs.io/
            source: https://github.com/executablebooks/MyST-Parser
          notes: |
            MyST-NB is built on top of [MyST-Parser](https://myst-parser.readthedocs.io/)
            and exposes all of its functionalities. It also includes support for Jupyter Notebooks.
            When using MyST-NB, MyST-Parser must not be included separately.
          data:
            sphinx_config:
              extensions: [ myst_nb ]
              # ---- MyST Parser Configurations ----
              # Ref: https://myst-parser.readthedocs.io/en/latest/configuration.html
              myst_enable_extensions: # https://myst-parser.readthedocs.io/en/latest/syntax/optional.html
                - amsmath
                - attrs_inline
                - attrs_block
                - colon_fence
                - deflist
                - dollarmath
                - fieldlist
                - html_admonition
                - html_image
                - linkify
                - replacements
                - smartquotes
                - substitution
                - tasklist
              myst_links_external_new_tab: true
              myst_heading_anchors: 6
              myst_fence_as_directive: [ mermaid ]  # https://github.com/mgaitan/sphinxcontrib-mermaid?tab=readme-ov-file#markdown-support
              myst_linkify_fuzzy_links: false
        sphinx-design:
          description: Adding responsive web components, such as grids, cards, tabs, etc.
          spec:
            version: ==0.6.1
          url:
            conda: https://anaconda.org/conda-forge/sphinx-design
            docs: https://sphinx-design.readthedocs.io/
            source: https://github.com/executablebooks/sphinx-design
          data:
            sphinx_config:
              extensions: [ sphinx_design ]
              sd_fontawesome_latex: true
        sphinx-external-toc:
          description: Adding external table of contents to Sphinx.
          spec:
            version: ==1.0.1
          url:
            conda: https://anaconda.org/conda-forge/sphinx-external-toc
            docs: https://sphinx-external-toc.readthedocs.io
            source: https://github.com/executablebooks/sphinx-external-toc
          data:
            sphinx_config:
              suppress_warnings: [ etoc.toctree ]
              extensions: [ sphinx_external_toc ]
              external_toc_path: ${{ file_web_toc.path }}$
              external_toc_exclude_missing: false
        ablog:
          description: Adding a news blog to the website.
          spec:
            version: ==0.11.12
          url:
            conda: https://anaconda.org/conda-forge/ablog
            docs: https://ablog.readthedocs.io/
            source: https://github.com/sunpy/ablog
          data:
            sphinx_config:
              # https://ablog.readthedocs.io/en/stable/manual/ablog-configuration-options.html
              blog_baseurl: ${{ web.url.base }}$
              blog_default_author: owner
              blog_feed_archives: true
              blog_path: ${{ web.page.blog.path }}$/list
              blog_post_pattern:
                - ${{ web.page.blog.path }}$/post/*.md
              post_show_prev_next: false
              blog_title: ${{ name }}$ News
              fontawesome_included: true
              post_always_section: true
              post_auto_image: 1
              blog_authors: |
                #{{
                  web_url = get("web.url.home")
                  blog_authors = {}
                  for person_id, person in get("team").items():
                      if "website" in person:
                          url = person["website"]
                      else:
                          for contact_type in ("github", "twitter", "linkedin", "researchgate", "orcid", "email"):
                              if contact_type in person:
                                  url = person[contact_type]["url"]
                                  break
                          else:
                              url = web_url
                      blog_authors[person_id] = (person["name"]["full"], url)
                  return blog_authors
                }}#
        sphinx-copybutton:
          description: Adding a copy button to code blocks.
          spec:
            version: ==0.5.2
          url:
            conda: https://anaconda.org/conda-forge/sphinx-copybutton
            docs: https://sphinx-copybutton.readthedocs.io/
            source: https://github.com/executablebooks/sphinx-copybutton
          data:
            sphinx_config:
              extensions: [ sphinx_copybutton ]
        sphinxext-opengraph:
          description: |
            Generating [Open Graph](https://ogp.me/) metadata for each page.
          spec:
            version: ==0.9.1
          url:
            docs: https://sphinxext-opengraph.readthedocs.io/
            package: https://anaconda.org/conda-forge/sphinxext-opengraph
            source: https://github.com/wpilibsuite/sphinxext-opengraph/
          data:
            sphinx_config:
              extensions: [ sphinxext.opengraph ]
              ogp_site_url: ${{ web.url.base }}$
              ogp_use_first_image: true
              ogp_enable_meta_description: true
              ogp_social_cards:
                image: _static/simple_light.svg
                line_color: ${{ color.primary.light }}$
        sphinxcontrib-bibtex:
          description: Adding BibTeX-style citations.
          spec:
            version: ==2.6.3
          url:
            docs: https://sphinxcontrib-bibtex.readthedocs.io/
            package: https://anaconda.org/conda-forge/sphinxcontrib-bibtex
            source: https://github.com/mcmtroffaes/sphinxcontrib-bibtex
          data:
            sphinx_config:
              extensions: [ sphinxcontrib.bibtex ]
              bibtex_bibfiles: [ refs.bib ]
              bibtex_default_style: plain
              bibtex_reference_style: label
        sphinx-togglebutton:
          description: Adding toggle buttons to admonitions and other content.
          spec:
            version: ==0.3.2
          url:
            docs: https://sphinx-togglebutton.readthedocs.io/
            package: https://anaconda.org/conda-forge/sphinx-togglebutton
            source: https://github.com/executablebooks/sphinx-togglebutton
          data:
            sphinx_config:
              extensions: [ sphinx_togglebutton ]
              # https://sphinx-togglebutton.readthedocs.io/en/latest/use.html#change-the-button-hint-text
              togglebutton_hint: show details
              togglebutton_hint_hide: hide details
        sphinxcontrib-mermaid:
          description: Adding Mermaid diagrams and charts.
          spec:
            version: ==1.0.0
          url:
            docs: https://sphinxcontrib-mermaid-demo.readthedocs.io/en/stable/
            package: https://anaconda.org/conda-forge/sphinxcontrib-mermaid
            source: https://github.com/mgaitan/sphinxcontrib-mermaid
          data:
            sphinx_config:
              extensions: [ sphinxcontrib.mermaid ]
        sphinx-thebe:
          description: Make code cells interactive in Sphinx.
          spec:
            version: ==0.3.1
          url:
            docs: https://sphinx-thebe.readthedocs.io
            package: https://anaconda.org/conda-forge/sphinx-thebe
            source: https://github.com/executablebooks/sphinx-thebe
          data:
            sphinx_config:
              extensions: [ sphinx_thebe ]
        # ---- Non-extension Dependencies ----
        myst-parser:
          description: Adding MyST Markdown functionalities to Sphinx.
          notes: |
            This is added as a dependency and not an extension
            because the MyST-NB extension (a superset of MyST-Parser) is used as an extension,
            which already includes MyST-Parser.
            However, here we specifically include MyST-Parser to ensure the correct version is installed.
          spec:
            version: ==4.0.0
          url:
            docs: https://myst-parser.readthedocs.io/
            package: https://anaconda.org/conda-forge/myst-parser
            source: https://github.com/executablebooks/MyST-Parser
        linkify-it-py:
          description: |
            Linkify extension for MyST Markdown to automatically convert URLs to hyperlinks.
          spec:
            version: ==2.0.3
          url:
            docs: https://myst-parser.readthedocs.io/en/latest/syntax/optional.html#linkify
            package: https://anaconda.org/conda-forge/linkify-it-py
        librsvg:
          description: |
            Library for rendering SVG files and using them
            in PDF (via LaTeX) builds done by latexmk.
          spec:
            version: ==2.58.4
          url:
            docs: https://wiki.gnome.org/Projects/LibRsvg
            package: https://anaconda.org/conda-forge/librsvg
            source: https://gitlab.gnome.org/GNOME/librsvg
        libffi:
          description: |
            Library for handling Foreign Function Interface (FFI) calls.
            This is a dependency of `CairoSVG`, which is used by `sphinxcontrib-svg2pdfconverter`.
          spec:
            version: ==3.4.4
          url:
            docs: https://sourceware.org/libffi/
            package: https://anaconda.org/conda-forge/libffi
            source: https://github.com/libffi/libffi
        cairo:
          description: |
            Library for rendering 2D graphics.
            This is a dependency of `CairoSVG`, which is used by `sphinxcontrib-svg2pdfconverter`.
          spec:
            version: ==1.18.2
          url:
            docs: https://cairographics.org/
            package: https://anaconda.org/conda-forge/cairo
            source: https://gitlab.freedesktop.org/cairo/cairo
        intersphinx-registry:
          description: |
            Registry of intersphinx mappings for external documentation.
          url:
            package: https://anaconda.org/conda-forge/intersphinx-registry
            source: https://github.com/Quansight-labs/intersphinx_registry
      pip:
        # ---- Third-Party Sphinx Extensions ----
        sphinx-last-updated-by-git:
          description: Adding page-specific last-updated dates to each page.
          spec:
            version: ==0.3.8
          url:
            docs: https://sphinx-last-updated-by-git.readthedocs.io/
            package: https://pypi.org/project/sphinx-last-updated-by-git/
            source: https://github.com/mgeier/sphinx-last-updated-by-git
          data:
            sphinx_config:
              extensions: [ sphinx_last_updated_by_git ]
        sphinxcontrib-svg2pdfconverter:
          description: Converting SVG images to PNG for LaTeX.
          spec:
            version: ==1.2.3
            extras: [ CairoSVG ]
          url:
            package: https://pypi.org/project/sphinxcontrib-svg2pdfconverter/
            source: https://github.com/missinglinkelectronics/sphinxcontrib-svg2pdfconverter
          data:
            sphinx_config:
              extensions: [ sphinxcontrib.rsvgconverter ]
          notes: |
            This doesn't work on `latex_logo`;
            see [nbsphinx](https://nbsphinx.readthedocs.io/en/latest/markdown-cells.html).
        sphinx-tippy:
          description: Adding rich hover tooltips to content.
          spec:
            version: ==0.4.3
          url:
            docs: https://sphinx-tippy.readthedocs.io
            package: https://pypi.org/project/sphinx_tippy/
            source: https://github.com/sphinx-extensions2/sphinx-tippy
          data:
            sphinx_config:
              extensions: [ sphinx_tippy ]
              tippy_props:
                placement: auto-start  # https://atomiks.github.io/tippyjs/v6/all-props/#placement
                maxWidth: 500  # https://atomiks.github.io/tippyjs/v6/all-props/#maxwidth
                theme: material  # https://atomiks.github.io/tippyjs/v6/all-props/#theme
                interactive: true  # https://atomiks.github.io/tippyjs/v6/all-props/#interactive
                delay: [ 200, 500 ]  # https://atomiks.github.io/tippyjs/v6/all-props/#delay
                duration: [ 200, 100 ]  # https://atomiks.github.io/tippyjs/v6/all-props/#duration
        sphinx-notfound-page:
          description: Handling relative links in the custom 404 page.
          spec:
            version: ==1.0.4
          url:
            docs: https://sphinx-notfound-page.readthedocs.io/
            source: https://github.com/readthedocs/sphinx-notfound-page
            pip: https://pypi.org/project/sphinx-notfound-page/
          data:
            sphinx_config:
              extensions: [ notfound.extension ]
              notfound_urls_prefix: /${{ repo.name }}$/
        jsonschema-autodoc:
          url:
            package: https://pypi.org/project/jsonschema-autodoc/
          data:
            sphinx_config:
              extensions: [ jsonschema_autodoc.sphinx ]
        # ---- Non-extension Dependencies ----
        sphinx-autobuild:
          description: Automatically rebuilding the documentation when changes are made.
          notes: |
            This is added to the `Makefile` of Sphinx under the `livehtml` target,
            meaning that you can run `make livehtml` in the website directory
            to start the autobuild server.
          spec:
            version: ==2024.10.03
          url:
            package: https://pypi.org/project/sphinx-autobuild/
            source: https://github.com/sphinx-doc/sphinx-autobuild
        pygments-git:
          description: |
            Pygments lexer for Git files and outputs.
          spec:
            version: ==1.8.0
          url:
            package: https://pypi.org/project/pygments-git/
            source: https://github.com/adamchainz/pygments-git
        gittidy:
          description: |
            Git API to automatically retrieve project version from tags during builds.
          url:
            docs: https://gittidy.repodynamics.com
            package: https://pypi.org/project/gittidy/
        versionman:
          description: |
            Version management utilities to automatically find the latest version
            from git tags during build.
          url:
            docs: https://versionman.repodynamics.com
            package: https://pypi.org/project/versionman/
        pkgdata:
          description: |
            Handling package resources, such as accessing data files that are
            distributed with the package.
          url:
            docs: https://pkgdata.repodynamics.com/
            package: https://pypi.org/project/pkgdata/
            source: https://github.com/repodynamics/pkgdata
        controlman:
          url:
            package: https://pypi.org/project/controlman/
        mdit:
          url:
            package: https://pypi.org/project/mdit/
      task:
        build:
          name: Build Website
          description: Build the website using Sphinx.
          process: [ bash, '${{ file_script_web_build.path }}$' ]
        live:
          name: Live Website Preview
          description: |
            Start a live preview server for the website.
            This will automatically rebuild the website when changes are made.
          process: [ bash, '${{ file_script_web_livehtml.path }}$' ]


__temp__:
  docker_install: |
    COPY ${{ .path }}$/env /tmp/temp-env-files
    RUN if [ -f /tmp/temp-env-files/bash.sh ]; then bash /tmp/temp-env-files/bash.sh; fi
    RUN apt-get update && export DEBIAN_FRONTEND=noninteractive && \
      if [ -f /tmp/temp-env-files/apt.txt ]; then \
        apt-get -y install --no-install-recommends $(xargs < /tmp/temp-env-files/apt.txt); \
      fi && rm -rf /var/lib/apt/lists/*
    RUN if [ -d /tmp/temp-env-files/conda ] && ls /tmp/temp-env-files/conda/*.yaml >/dev/null 2>&1; then \
      for file in /tmp/temp-env-files/conda/*.yaml; do \
        conda env create -f "$file"; \
      done; \
    fi
  docker_pkg_deps: |
    COPY install.py .github/.repodynamics/metadata.json /tmp/temp-install-files/
    RUN python /tmp/temp-install-files/install.py --filepath /tmp/temp-install-files/metadata.json

