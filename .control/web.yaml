# Website Table of Contents (TOC)
file_web_toc:
  name: Website Table of Contents
  summary: Central table of contents definition for the entire website.
  description: |
    This file is used by the
    [Sphinx-External-TOC](https://github.com/executablebooks/sphinx-external-toc)
    extension to define the structure of the website.
  type: yaml
  data:
    rel_path: .toc.yaml
  path: ${{ web.path.source }}$/${{ .data.rel_path }}$
  content:
    root: index
    defaults:
      hidden: true
    entries:
      - file: intro/index
        title: Intro
        options:
          numbered: true
        entries:
          - file: intro/motivation/index
          - file: intro/overview/index
          - file: intro/background/index
            entries:
              - file: intro/background/methodologies/index
              - file: intro/background/github/index
              - file: intro/background/python/index
                entries:
                  - file: intro/background/python/pypi/index
                  - file: intro/background/python/pip/index
                  - file: intro/background/python/packaging/index
                  - file: intro/background/python/governance/index
              - file: intro/background/conda/index
                entries:
                  - file: intro/background/conda/packaging/index
              - file: intro/background/versioning/index
              - file: intro/background/jsonpath/index
              - file: intro/background/yaml/index
              - file: intro/background/toml/index
              - file: intro/background/jinja/index
              - file: intro/background/markdown/index
          - file: intro/glossary/index
          - file: intro/references/index
      - file: manual/index
        title: Manual
        options:
          numbered: true
        entries:
          - file: manual/install/index
            entries:
              - file: manual/install/new/index
              - file: manual/install/existing/index
              - file: manual/install/upgrade/index
              - file: manual/install/common/index
          - file: manual/quickstart/index
          - file: manual/config/index
            entries:
              - file: manual/config/location/index
              - file: manual/config/structure/index
              - file: manual/config/options/index
              - file: manual/config/synchronization/index
              - file: manual/config/outputs/index
              - file: manual/config/templating/index
              - file: manual/config/inheritance/index
              - file: manual/config/hooks/index
              - file: manual/config/caching/index
      - file: api/index
        title: API
        entries:
          - file: api/metadata/index
          - file: api/local/index
          - file: api/changelog/index
          - file: api/variables/index
          - file: api/contributors/index
          - file: api/cache/index
          - file: api/refs/index
      - file: news/index
        title: News
        entries:
          - glob: news/post/**
      - file: contribute/index
        title: Contribute
        options:
          numbered: true
        entries:
          - file: contribute/feedback/index
            entries:
              - file: contribute/feedback/security/index
              - file: contribute/feedback/bug/index
          - file: contribute/develop/index
          - file: contribute/support/index
      - file: about/index
        title: About
        options:
          numbered: true
        entries:
          - file: about/citation/index
          - file: about/contact/index
          - file: about/license/index
            entries:
              - glob: about/license/*/index
      - file: help/index
        title: Help
        options:
          numbered: true
        entries:
          - file: help/website/index
            entries:
              - file: help/website/tips/index
              - file: help/website/api/index
web:
  announcement:
    path: ${{ web.path.root }}$/announcement.html
  css:
    theme_colors:
      # Colors for pydata-sphinx-theme
      # - Docs: https://pydata-sphinx-theme.readthedocs.io/en/stable/user_guide/styling.html#color-variables
      # - Source: https://github.com/pydata/pydata-sphinx-theme/blob/main/src/pydata_sphinx_theme/assets/styles/variables/_color.scss
      cases:
        light:
          selector: 'html[data-theme="light"]'
          prefix: --pst-color-
        dark:
          selector: 'html[data-theme="dark"]'
          prefix: --pst-color-
      properties: '#{{ return {k: v for k, v in get("theme.color").items() if k != "jsonschema"} }}#'
    theme_font_sizes:
      # Font sizes for pydata-sphinx-theme.
      # - Docs: https://pydata-sphinx-theme.readthedocs.io/en/stable/user_guide/fonts.html
      # - Source: https://github.com/pydata/pydata-sphinx-theme/blob/main/src/pydata_sphinx_theme/assets/styles/variables/_fonts.scss
      selector: html
      prefix: --pst-font-size-
      properties:
        milli: 0.9rem
        base: 1rem
        # 1.2x (minor third) typographic scale starting from 1.10rem.
        # https://designcode.io/typographic-scales
        h6: 1.10rem
        h5: 1.32rem
        h4: 1.58rem
        h3: 1.90rem
        h2: 2.28rem
        h1: 2.74rem
    theme_header_color:
      cases:
        light:
          selector: html[data-theme="light"] .bd-header
        dark:
          selector: html[data-theme="dark"] .bd-header
      properties:
        background-color:
          light: white !important
          dark: black !important
    black_to_primary_filter:
      # CSS filters for transforming black to project's primary color.
      # This is used to dynamically change the color of SVG icons
      # with class name 'black-svg-icon'.
      cases:
        light:
          selector: html[data-theme="light"] .black-svg-icon
        dark:
          selector: html[data-theme="dark"] .black-svg-icon
      properties:
        filter: |
          #{{
            import pycolorit as pcit
            cache_group = "css_color_filter"
            primary_color = get("theme.color.primary")
            out = {}
            for theme in ["light", "dark"]:
              cache_id = f"black_to_{primary_color[theme]}"
              filter = cache_manager.get(cache_group, cache_id)
              if not filter:
                filter = pcit.css_filter.generate(pcit.color.css(primary_color[theme]))[2]
                cache_manager.set(cache_group, cache_id, filter)
              out[theme] = filter
            return out
          }}#
  file:
    icon:
      rel_path: ${{ web.path.logo_dir }}$/favicon.svg
    logo_simple_light:
      rel_path: ${{ web.path.logo_dir }}$/simple_light.svg
    logo_simple_dark:
      rel_path: ${{ web.path.logo_dir }}$/simple_dark.svg
    logo_simple_raster:
      rel_path: ${{ web.path.logo_dir }}$/simple_light.png
    logo_full_light:
      rel_path: ${{ web.path.logo_dir }}$/full_light.svg
    logo_full_dark:
      rel_path: ${{ web.path.logo_dir }}$/full_dark.svg
    logo_full_raster:
      rel_path: ${{ web.path.logo_dir }}$/full_light.png
  page: '#{{ return hook.web_page() }}#'
  path:
    root: docs/website
    source_rel: source
    source: ${{ .root }}$/${{ .source_rel }}$
    build: ${{ .root }}$/.build
    to_root: |
      #{{ return len(get(".source").split("/")) * "../" }}#
    logo_dir: _media/logo
  readthedocs:
    name: ${{ repo.name }}$
    platform: community
    version_scheme:
      single_version: false
      translation: false
    language: en
    config_file:
      path: .readthedocs.yaml
      content:
        version: 2
        formats: all  # Build all additional formats of the documentation, i.e. pdf, epub, and htmlzip
        build: # Set the version of Python and other tools you might need
          os: ubuntu-22.04
          tools:
            python: "mambaforge-4.10"
          jobs:
            post_checkout:
              # versioningit needs the full git history to determine the package's version at build time.
              # see: https://github.com/readthedocs/readthedocs.org/issues/5989#issuecomment-853039401
              - git fetch --unshallow
        conda: # Website dependencies
          environment: ${{ devcontainer_main.environment.website.path }}$
        python:
          install: # Install the package
            - method: pip
              path: ${{ pypkg_main.path.root }}$
        sphinx: # Build with Sphinx
          configuration: ${{ web.path.source }}$/conf.py
          builder: dirhtml
          fail_on_warning: false
  url:
    custom:
      name: pypackit.repodynamics.com
file_sphinx_conf:
  name: Sphinx Configuration
  summary: Sphinx configuration file for the website.
  type: json
  path: ${{ web.path.source }}$/conf.json
  content: |
    #{{
      import pyserials as ps

      out = {}
      for pkg_manager in ("conda", "pip"):
        for pkg in get(f"devcontainer_main.environment.website.{pkg_manager}", {}).values():
          sphinx_conf = pkg.get("data", {}).get("sphinx_config")
          if sphinx_conf:
            ps.update.recursive_update(
              source=out,
              addon=sphinx_conf,
              undefined_existing="raise"
            )
      return out
    }}#
  jsonschema:
    schema:
      $ref: https://jsonschemata.repodynamics.com/config/sphinx
file_script_web_build:
  name: Website Build Script
  summary: Script to build the website using Sphinx.
  path: ${{ devcontainer_main.path.root }}$/script/website_build.sh
  type: txt
  data:
    tar_path: ${{ web.path.build }}$/website.tar
    sphinx_build_options: --verbose --show-traceback --keep-going --color --nitpicky --jobs auto
    sphinx_builder: dirhtml
  content: |
    SPHINX_COMMON_OPTIONS="${{ .data.sphinx_build_options }}$"
    sphinx-build -M ${{ .data.sphinx_builder }}$ ${{ web.path.source }}$ ${{ web.path.build }}$ $SPHINX_COMMON_OPTIONS

    # Create a tarball of the built website according to GitHub Pages requirements.
    # Ref: https://github.com/actions/upload-pages-artifact/blob/main/action.yml
    tar \
      --dereference --hard-dereference \
      --directory "${{ web.path.build }}$/dirhtml" \
      -cvf "${{ .data.tar_path }}$" \
      --exclude=.git \
      --exclude=.github \
      --exclude=".[^/]*" \
      .
  notes: |
    References:
    - [`sphinx-build` options](https://www.sphinx-doc.org/en/master/man/sphinx-build.html)
    - [Sphinx builders](https://www.sphinx-doc.org/en/master/usage/builders/index.html)
    - [Sphinx Makefile template](https://github.com/sphinx-doc/sphinx/blob/master/sphinx/templates/quickstart/Makefile.new.jinja)
file_script_web_livehtml:
  name: Website Live Preview Script
  summary: Script to start a live preview server for the website.
  path: ${{ devcontainer_main.path.root }}$/script/website_livehtml.sh
  type: txt
  content: |
    sphinx-autobuild \
      ${{ web.path.source }}$ \
      ${{ web.path.build }}$ \
      ${{ file_script_web_build.data.sphinx_build_options }}$ \
      -a -b=${{ file_script_web_build.data.sphinx_builder }}$ --open-browser --delay 0
  notes: |
    References:
    - [`sphinx-autobuild` options](https://github.com/sphinx-doc/sphinx-autobuild/blob/main/README.rst)
