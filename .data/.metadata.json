{
   "abstract": "PyPackIT [\u02c8pa\u026a\u02ccp\u00e6k\u026at] is a comprehensive <strong>cloud-based automation tool</strong> for production of <abbr title=\"Findable, Accessible, Interoperable, and Reusable\">FAIR</abbr> and professional applications on <strong>GitHub</strong>, in accordance with the latest software engineering best practices and standards. PyPackIT is a ready-to-use software suite that streamlines the initiation, configuration, development, publication, management, and maintenance of high-quality <strong>Python applications</strong>. By taking charge of repetitive tasks and automatically enforcing best practices throughout the software development life cycle, PyPackIT enables users to solely focus on the creative aspects of their projects, while improving quality and lowering production costs. Using latest tools and methodologies, PyPackIT offers a robust project infrastructure, including a build-ready Python <strong>package skeleton</strong>, a fully operational <strong>test suite</strong>, an automated <strong>documentation website</strong>, and a comprehensive <strong>control center</strong> according to <strong>Infrastructure-as-Code</strong> and <strong>Continuous Configuration Automation</strong> practices to enable dynamic project management and customization. PyPackIT establishes a complete <strong>cloud development</strong> environment on GitHub, integrating with its version control system, issue tracker,and pull-based model to provide a fully <strong>automated software development workflow</strong> with <strong>issue management</strong>, <strong>branching model</strong>, and <strong>versioning scheme</strong>. Leveraging <strong>GitHub Actions</strong>, PyPackIT implements a cloud-native Agile development process using <strong>Continuous software engineering</strong>, <strong>containerization</strong>, and <strong>DevOps</strong> methodologies, with a full set of <strong>Continuous Integration</strong>, Deployment, Testing, Refactoring, and Maintenance pipelines. PyPackIT is a <strong>free</strong> and <strong>open-source</strong> software suite that readily integrates with both new and existing projects to ensure their long-term sustainability and high quality, enabling software projects to rapidly implement their ideas and easily maintain their products.",
   "branch": {
      "auto": {
         "name": "auto-update/",
         "name_separator": "/",
         "ruleset": {
            "bypass_actors": [
               {
                  "mode": "always",
                  "role": "organization_admin"
               },
               {
                  "mode": "always",
                  "role": "repository_admin"
               }
            ],
            "enforcement": "active",
            "protect_creation": true,
            "protect_deletion": true,
            "protect_force_push": true,
            "require_linear_history": true,
            "require_signatures": false
         }
      },
      "dev": {
         "name": "dev/",
         "name_separator": "/",
         "ruleset": {
            "bypass_actors": [
               {
                  "mode": "always",
                  "role": "organization_admin"
               },
               {
                  "mode": "always",
                  "role": "repository_admin"
               }
            ],
            "enforcement": "active",
            "protect_creation": true,
            "protect_deletion": true,
            "protect_force_push": true,
            "require_linear_history": true,
            "require_signatures": false
         }
      },
      "main": {
         "name": "main",
         "name_separator": "/",
         "ruleset": {
            "bypass_actors": [
               {
                  "mode": "always",
                  "role": "organization_admin"
               },
               {
                  "mode": "always",
                  "role": "repository_admin"
               }
            ],
            "enforcement": "active",
            "protect_creation": true,
            "protect_deletion": true,
            "protect_force_push": true,
            "protect_modification": {
               "allow_fetch_and_merge": true
            },
            "require_linear_history": true,
            "require_pull_request": {
               "dismiss_stale_reviews_on_push": true,
               "require_code_owner_review": true,
               "require_last_push_approval": true,
               "require_review_thread_resolution": true,
               "required_approving_review_count": 1
            },
            "require_signatures": true
         }
      },
      "pre": {
         "name": "prerelease/v",
         "name_separator": "/",
         "ruleset": {
            "bypass_actors": [
               {
                  "mode": "always",
                  "role": "organization_admin"
               },
               {
                  "mode": "always",
                  "role": "repository_admin"
               }
            ],
            "enforcement": "active",
            "protect_creation": true,
            "protect_deletion": true,
            "protect_force_push": true,
            "protect_modification": {
               "allow_fetch_and_merge": true
            },
            "require_linear_history": true,
            "require_pull_request": {
               "dismiss_stale_reviews_on_push": true,
               "require_code_owner_review": true,
               "require_last_push_approval": true,
               "require_review_thread_resolution": true,
               "required_approving_review_count": 1
            },
            "require_signatures": true
         }
      },
      "release": {
         "name": "release/v",
         "name_separator": "/",
         "ruleset": {
            "bypass_actors": [
               {
                  "mode": "always",
                  "role": "organization_admin"
               },
               {
                  "mode": "always",
                  "role": "repository_admin"
               }
            ],
            "enforcement": "active",
            "protect_creation": true,
            "protect_deletion": true,
            "protect_force_push": true,
            "protect_modification": {
               "allow_fetch_and_merge": true
            },
            "require_linear_history": true,
            "require_pull_request": {
               "dismiss_stale_reviews_on_push": true,
               "require_code_owner_review": true,
               "require_last_push_approval": true,
               "require_review_thread_resolution": true,
               "required_approving_review_count": 1
            },
            "require_signatures": true
         }
      }
   },
   "commit": {
      "__data__": {
         "h1_cd": {
            "description": "Changes in the Continuous Deployment pipelines of the project.",
            "title": "CD"
         },
         "h1_ci": {
            "description": "Changes in the Continuous Integration pipelines of the project.",
            "title": "CI"
         },
         "h1_config": {
            "description": "Changes in the project configurations and metadata.",
            "title": "Configuration"
         },
         "h1_docs": {
            "description": "Changes in the project documentation materials and website.",
            "title": "Documentation"
         },
         "h1_maintain": {
            "description": "General maintenance and housekeeping activities.",
            "title": "Maintenance"
         },
         "h1_pkg": {
            "description": "Changes in the PyPackIT Python package.",
            "title": "Package"
         },
         "h1_test": {
            "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
            "title": "Test Suite"
         },
         "h2_api": {
            "description": "Changes in the application programming interface (API) of the package.",
            "title": "API"
         },
         "h2_build": {
            "description": "Changes in the build and installation processes.",
            "title": "Setup"
         },
         "h2_cd_docs": {
            "description": "Changes in the website deployment pipelines.",
            "title": "Documentation"
         },
         "h2_cd_pkg": {
            "description": "Changes in the package deployment pipelines.",
            "title": "Package"
         },
         "h2_ci": {
            "description": "Related to the project's Continuous Integration and Deployment pipelines.",
            "title": "CI/CD"
         },
         "h2_ci_build": {
            "description": "Changes in the build pipelines.",
            "title": "Build"
         },
         "h2_ci_lint": {
            "description": "Changes in the Continuous Refactoring pipelines.",
            "title": "Lint"
         },
         "h2_ci_main": {
            "description": "Changes in the main pipeline.",
            "title": "Main"
         },
         "h2_ci_test": {
            "description": "Changes in the Continuous Testing pipelines.",
            "title": "Test"
         },
         "h2_cli": {
            "description": "Changes in the command-line interface (CLI) of the package.",
            "title": "CLI"
         },
         "h2_code": {
            "description": "Changes in code that do not affect public interfaces.",
            "title": "Code"
         },
         "h2_content": {
            "description": "Changes in documentation content.",
            "title": "Content"
         },
         "h2_design": {
            "description": "Changes in documentation and website design.",
            "title": "Web Design"
         },
         "h2_docs": {
            "description": "Related to the project documentation materials and website.",
            "title": "Documentation"
         },
         "h2_feat": {
            "description": "Changes in website features.",
            "title": "Web Features"
         },
         "h2_gui": {
            "description": "Changes in the graphical user interface (GUI) of the package.",
            "title": "GUI"
         },
         "h2_its": {
            "description": "Related to the project's issue tracking system.",
            "title": "Issue Tracking"
         },
         "h2_pkg": {
            "description": "Related to the PyPackIT Python package.",
            "title": "Package"
         },
         "h2_proj": {
            "description": "Related to the entire project.",
            "title": "Project"
         },
         "h2_test": {
            "description": "Related to the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
            "title": "Test Suite"
         },
         "h2_vcs": {
            "description": "Related to the project's version control system.",
            "title": "Version Control"
         },
         "h3_change": {
            "description": "Features that have been changed in some way, such as in behavior or input/outputs.\nThese are backward-incompatible (breaking) changes.\n",
            "title": "\ud83d\udeab\u2002Changed Features"
         },
         "h3_deprecate": {
            "description": "Features that have been marked for removal in the future.\nThese are backward-compatible changes.\n",
            "title": "\u26a0\ufe0f\u2002Deprecated Features"
         },
         "h3_enhance": {
            "description": "Features that have been improved in a backward-compatible way.\n",
            "title": "\u2728\u2002Enhanced Features"
         },
         "h3_feat": {
            "description": "Newly-added backward-compatible features.\n",
            "title": "\ud83c\udf31\u2002New Features"
         },
         "h3_fix": {
            "description": "Backward-compatible bug fixes.\n",
            "title": "\ud83d\udc1e\u2002Bug Fixes"
         },
         "h3_perf": {
            "description": "Backward-compatible performance improvements.\n",
            "title": "\ud83d\ude80\u2002Performance Improvements"
         },
         "h3_refactor": {
            "description": "Changes in code structure and organization.\nThese are backward-compatible changes that only concern contributors.\n",
            "title": "\ud83e\uddf9\u2002Refactoring"
         },
         "h3_remove": {
            "description": "Features that have been removed.\nThese are backward-incompatible (breaking) changes.\n",
            "title": "\u26d4\u2002Removed Features"
         },
         "h3_secure": {
            "description": "Fixes for security vulnerabilities.\nThese are backward-compatible changes.\n",
            "title": "\ud83d\udee1\ufe0f\u2002Security Fixes"
         },
         "h3_style": {
            "description": "Changes in code style and formatting without affecting the meaning.\nThese are backward-compatible changes that only concern contributors.\n",
            "title": "\ud83c\udfa8\u2002Style Changes"
         }
      },
      "auto": {
         "changelog_sync": {
            "description": "Synchronize changelog and contributors data.",
            "scope": "changelog",
            "type": "sync"
         },
         "config_sync": {
            "description": "Synchronize dynamic files with control center configurations.",
            "scope": "config",
            "type": "sync"
         },
         "contrib_sync": {
            "description": "Synchronize contributors file.",
            "scope": "contrib",
            "type": "sync"
         },
         "dev_branch_creation": {
            "body": "Head branch name: {{ head.name }}\nBase branch name: {{ base.name }}\nBase branch SHA:  {{ base.sha }}\n",
            "description": "Create development branch for pull #{{ pull_request.number }} (issue #{{ issue.number }}).",
            "scope": "dev",
            "type": "init"
         },
         "dockerfile_sync": {
            "description": "Synchronize dockerfile with latest image name.",
            "scope": "dockerfile",
            "type": "sync"
         },
         "refactor": {
            "description": "Apply automatic formatting and refactoring.",
            "scope": "auto",
            "type": "refactor"
         },
         "vars_sync": {
            "description": "Synchronize variables file.",
            "scope": "vars",
            "type": "sync"
         }
      },
      "config": {
         "body_separator": "\n\n",
         "description_separator": ": ",
         "footer_separator": "\n\n--------------------------------------------------\n",
         "regex": {
            "separator": {
               "body": "\\n",
               "description": "\\s*:\\s+",
               "footer": "\\n-{3,}\\n",
               "scope_end": "\\s*\\)\\s*",
               "scope_items": "\\s*,\\s*",
               "scope_start": "\\s*\\(\\s*"
            },
            "validator": {
               "description": "^[^\\n]+$",
               "scope": "^[^:\\s(),]+$",
               "type": "^[^:\\s(),]*$"
            }
         },
         "scope_end": ")",
         "scope_separator": ", ",
         "scope_start": "("
      },
      "dev": {
         "cd-docs-change": {
            "h1": {
               "description": "Changes in the Continuous Deployment pipelines of the project.",
               "title": "CD"
            },
            "h2": {
               "description": "Changes in the website deployment pipelines.",
               "title": "Documentation"
            },
            "h3": {
               "description": "Features that have been changed in some way, such as in behavior or input/outputs.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\ud83d\udeab\u2002Changed Features"
            },
            "scope": "cd-docs",
            "type": "change",
            "type_description": "Change a feature in the documentation deployment workflow."
         },
         "cd-docs-feat": {
            "h1": {
               "description": "Changes in the Continuous Deployment pipelines of the project.",
               "title": "CD"
            },
            "h2": {
               "description": "Changes in the website deployment pipelines.",
               "title": "Documentation"
            },
            "h3": {
               "description": "Newly-added backward-compatible features.\n",
               "title": "\ud83c\udf31\u2002New Features"
            },
            "scope": "cd-docs",
            "type": "feat",
            "type_description": "Add a feature to the documentation deployment workflow."
         },
         "cd-docs-fix": {
            "h1": {
               "description": "Changes in the Continuous Deployment pipelines of the project.",
               "title": "CD"
            },
            "h2": {
               "description": "Changes in the website deployment pipelines.",
               "title": "Documentation"
            },
            "h3": {
               "description": "Backward-compatible bug fixes.\n",
               "title": "\ud83d\udc1e\u2002Bug Fixes"
            },
            "scope": "cd-docs",
            "type": "fix",
            "type_description": "Fix a bug in the documentation deployment workflow."
         },
         "cd-docs-perf": {
            "h1": {
               "description": "Changes in the Continuous Deployment pipelines of the project.",
               "title": "CD"
            },
            "h2": {
               "description": "Changes in the website deployment pipelines.",
               "title": "Documentation"
            },
            "h3": {
               "description": "Backward-compatible performance improvements.\n",
               "title": "\ud83d\ude80\u2002Performance Improvements"
            },
            "scope": "cd-docs",
            "type": "perf",
            "type_description": "Improve performance in the documentation deployment workflow."
         },
         "cd-docs-remove": {
            "h1": {
               "description": "Changes in the Continuous Deployment pipelines of the project.",
               "title": "CD"
            },
            "h2": {
               "description": "Changes in the website deployment pipelines.",
               "title": "Documentation"
            },
            "h3": {
               "description": "Features that have been removed.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\u26d4\u2002Removed Features"
            },
            "scope": "cd-docs",
            "type": "remove",
            "type_description": "Remove a feature from the documentation deployment workflow."
         },
         "cd-docs-secure": {
            "h1": {
               "description": "Changes in the Continuous Deployment pipelines of the project.",
               "title": "CD"
            },
            "h2": {
               "description": "Changes in the website deployment pipelines.",
               "title": "Documentation"
            },
            "h3": {
               "description": "Fixes for security vulnerabilities.\nThese are backward-compatible changes.\n",
               "title": "\ud83d\udee1\ufe0f\u2002Security Fixes"
            },
            "scope": "cd-docs",
            "type": "secure",
            "type_description": "Fix a security issue in the documentation deployment workflow."
         },
         "cd-pkg-change": {
            "h1": {
               "description": "Changes in the Continuous Deployment pipelines of the project.",
               "title": "CD"
            },
            "h2": {
               "description": "Changes in the package deployment pipelines.",
               "title": "Package"
            },
            "h3": {
               "description": "Features that have been changed in some way, such as in behavior or input/outputs.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\ud83d\udeab\u2002Changed Features"
            },
            "scope": "cd-pkg",
            "type": "change",
            "type_description": "Change a feature in the package deployment workflow."
         },
         "cd-pkg-feat": {
            "h1": {
               "description": "Changes in the Continuous Deployment pipelines of the project.",
               "title": "CD"
            },
            "h2": {
               "description": "Changes in the package deployment pipelines.",
               "title": "Package"
            },
            "h3": {
               "description": "Newly-added backward-compatible features.\n",
               "title": "\ud83c\udf31\u2002New Features"
            },
            "scope": "cd-pkg",
            "type": "feat",
            "type_description": "Add a feature to the package deployment workflow."
         },
         "cd-pkg-fix": {
            "h1": {
               "description": "Changes in the Continuous Deployment pipelines of the project.",
               "title": "CD"
            },
            "h2": {
               "description": "Changes in the package deployment pipelines.",
               "title": "Package"
            },
            "h3": {
               "description": "Backward-compatible bug fixes.\n",
               "title": "\ud83d\udc1e\u2002Bug Fixes"
            },
            "scope": "cd-pkg",
            "type": "fix",
            "type_description": "Fix a bug in the package deployment workflow."
         },
         "cd-pkg-perf": {
            "h1": {
               "description": "Changes in the Continuous Deployment pipelines of the project.",
               "title": "CD"
            },
            "h2": {
               "description": "Changes in the package deployment pipelines.",
               "title": "Package"
            },
            "h3": {
               "description": "Backward-compatible performance improvements.\n",
               "title": "\ud83d\ude80\u2002Performance Improvements"
            },
            "scope": "cd-pkg",
            "type": "perf",
            "type_description": "Improve performance in the package deployment workflow."
         },
         "cd-pkg-remove": {
            "h1": {
               "description": "Changes in the Continuous Deployment pipelines of the project.",
               "title": "CD"
            },
            "h2": {
               "description": "Changes in the package deployment pipelines.",
               "title": "Package"
            },
            "h3": {
               "description": "Features that have been removed.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\u26d4\u2002Removed Features"
            },
            "scope": "cd-pkg",
            "type": "remove",
            "type_description": "Remove a feature from the package deployment workflow."
         },
         "cd-pkg-secure": {
            "h1": {
               "description": "Changes in the Continuous Deployment pipelines of the project.",
               "title": "CD"
            },
            "h2": {
               "description": "Changes in the package deployment pipelines.",
               "title": "Package"
            },
            "h3": {
               "description": "Fixes for security vulnerabilities.\nThese are backward-compatible changes.\n",
               "title": "\ud83d\udee1\ufe0f\u2002Security Fixes"
            },
            "scope": "cd-pkg",
            "type": "secure",
            "type_description": "Fix a security issue in the package deployment workflow."
         },
         "ci-build-change": {
            "h1": {
               "description": "Changes in the Continuous Integration pipelines of the project.",
               "title": "CI"
            },
            "h2": {
               "description": "Changes in the build pipelines.",
               "title": "Build"
            },
            "h3": {
               "description": "Features that have been changed in some way, such as in behavior or input/outputs.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\ud83d\udeab\u2002Changed Features"
            },
            "scope": "ci-build",
            "type": "change",
            "type_description": "Change a feature in the build workflow."
         },
         "ci-build-feat": {
            "h1": {
               "description": "Changes in the Continuous Integration pipelines of the project.",
               "title": "CI"
            },
            "h2": {
               "description": "Changes in the build pipelines.",
               "title": "Build"
            },
            "h3": {
               "description": "Newly-added backward-compatible features.\n",
               "title": "\ud83c\udf31\u2002New Features"
            },
            "scope": "ci-build",
            "type": "feat",
            "type_description": "Add a feature to the build workflow."
         },
         "ci-build-fix": {
            "h1": {
               "description": "Changes in the Continuous Integration pipelines of the project.",
               "title": "CI"
            },
            "h2": {
               "description": "Changes in the build pipelines.",
               "title": "Build"
            },
            "h3": {
               "description": "Backward-compatible bug fixes.\n",
               "title": "\ud83d\udc1e\u2002Bug Fixes"
            },
            "scope": "ci-build",
            "type": "fix",
            "type_description": "Fix a bug in the build workflow."
         },
         "ci-build-perf": {
            "h1": {
               "description": "Changes in the Continuous Integration pipelines of the project.",
               "title": "CI"
            },
            "h2": {
               "description": "Changes in the build pipelines.",
               "title": "Build"
            },
            "h3": {
               "description": "Backward-compatible performance improvements.\n",
               "title": "\ud83d\ude80\u2002Performance Improvements"
            },
            "scope": "ci-build",
            "type": "perf",
            "type_description": "Improve performance in the build workflow."
         },
         "ci-build-remove": {
            "h1": {
               "description": "Changes in the Continuous Integration pipelines of the project.",
               "title": "CI"
            },
            "h2": {
               "description": "Changes in the build pipelines.",
               "title": "Build"
            },
            "h3": {
               "description": "Features that have been removed.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\u26d4\u2002Removed Features"
            },
            "scope": "ci-build",
            "type": "remove",
            "type_description": "Remove a feature from the build workflow."
         },
         "ci-build-secure": {
            "h1": {
               "description": "Changes in the Continuous Integration pipelines of the project.",
               "title": "CI"
            },
            "h2": {
               "description": "Changes in the build pipelines.",
               "title": "Build"
            },
            "h3": {
               "description": "Fixes for security vulnerabilities.\nThese are backward-compatible changes.\n",
               "title": "\ud83d\udee1\ufe0f\u2002Security Fixes"
            },
            "scope": "ci-build",
            "type": "secure",
            "type_description": "Fix a security issue in the build workflow."
         },
         "ci-lint-change": {
            "h1": {
               "description": "Changes in the Continuous Integration pipelines of the project.",
               "title": "CI"
            },
            "h2": {
               "description": "Changes in the Continuous Refactoring pipelines.",
               "title": "Lint"
            },
            "h3": {
               "description": "Features that have been changed in some way, such as in behavior or input/outputs.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\ud83d\udeab\u2002Changed Features"
            },
            "scope": "ci-lint",
            "type": "change",
            "type_description": "Change a feature in the lint workflow."
         },
         "ci-lint-feat": {
            "h1": {
               "description": "Changes in the Continuous Integration pipelines of the project.",
               "title": "CI"
            },
            "h2": {
               "description": "Changes in the Continuous Refactoring pipelines.",
               "title": "Lint"
            },
            "h3": {
               "description": "Newly-added backward-compatible features.\n",
               "title": "\ud83c\udf31\u2002New Features"
            },
            "scope": "ci-lint",
            "type": "feat",
            "type_description": "Add a feature to the lint workflow."
         },
         "ci-lint-fix": {
            "h1": {
               "description": "Changes in the Continuous Integration pipelines of the project.",
               "title": "CI"
            },
            "h2": {
               "description": "Changes in the Continuous Refactoring pipelines.",
               "title": "Lint"
            },
            "h3": {
               "description": "Backward-compatible bug fixes.\n",
               "title": "\ud83d\udc1e\u2002Bug Fixes"
            },
            "scope": "ci-lint",
            "type": "fix",
            "type_description": "Fix a bug in the lint workflow."
         },
         "ci-lint-perf": {
            "h1": {
               "description": "Changes in the Continuous Integration pipelines of the project.",
               "title": "CI"
            },
            "h2": {
               "description": "Changes in the Continuous Refactoring pipelines.",
               "title": "Lint"
            },
            "h3": {
               "description": "Backward-compatible performance improvements.\n",
               "title": "\ud83d\ude80\u2002Performance Improvements"
            },
            "scope": "ci-lint",
            "type": "perf",
            "type_description": "Improve performance in the lint workflow."
         },
         "ci-lint-remove": {
            "h1": {
               "description": "Changes in the Continuous Integration pipelines of the project.",
               "title": "CI"
            },
            "h2": {
               "description": "Changes in the Continuous Refactoring pipelines.",
               "title": "Lint"
            },
            "h3": {
               "description": "Features that have been removed.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\u26d4\u2002Removed Features"
            },
            "scope": "ci-lint",
            "type": "remove",
            "type_description": "Remove a feature from the lint workflow."
         },
         "ci-lint-secure": {
            "h1": {
               "description": "Changes in the Continuous Integration pipelines of the project.",
               "title": "CI"
            },
            "h2": {
               "description": "Changes in the Continuous Refactoring pipelines.",
               "title": "Lint"
            },
            "h3": {
               "description": "Fixes for security vulnerabilities.\nThese are backward-compatible changes.\n",
               "title": "\ud83d\udee1\ufe0f\u2002Security Fixes"
            },
            "scope": "ci-lint",
            "type": "secure",
            "type_description": "Fix a security issue in the lint workflow."
         },
         "ci-main-change": {
            "h1": {
               "description": "Changes in the Continuous Integration pipelines of the project.",
               "title": "CI"
            },
            "h2": {
               "description": "Changes in the main pipeline.",
               "title": "Main"
            },
            "h3": {
               "description": "Features that have been changed in some way, such as in behavior or input/outputs.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\ud83d\udeab\u2002Changed Features"
            },
            "scope": "ci-main",
            "type": "change",
            "type_description": "Change a feature in the main workflow."
         },
         "ci-main-feat": {
            "h1": {
               "description": "Changes in the Continuous Integration pipelines of the project.",
               "title": "CI"
            },
            "h2": {
               "description": "Changes in the main pipeline.",
               "title": "Main"
            },
            "h3": {
               "description": "Newly-added backward-compatible features.\n",
               "title": "\ud83c\udf31\u2002New Features"
            },
            "scope": "ci-main",
            "type": "feat",
            "type_description": "Add a feature to the main workflow."
         },
         "ci-main-fix": {
            "h1": {
               "description": "Changes in the Continuous Integration pipelines of the project.",
               "title": "CI"
            },
            "h2": {
               "description": "Changes in the main pipeline.",
               "title": "Main"
            },
            "h3": {
               "description": "Backward-compatible bug fixes.\n",
               "title": "\ud83d\udc1e\u2002Bug Fixes"
            },
            "scope": "ci-main",
            "type": "fix",
            "type_description": "Fix a bug in the main workflow."
         },
         "ci-main-perf": {
            "h1": {
               "description": "Changes in the Continuous Integration pipelines of the project.",
               "title": "CI"
            },
            "h2": {
               "description": "Changes in the main pipeline.",
               "title": "Main"
            },
            "h3": {
               "description": "Backward-compatible performance improvements.\n",
               "title": "\ud83d\ude80\u2002Performance Improvements"
            },
            "scope": "ci-main",
            "type": "perf",
            "type_description": "Improve performance in the main workflow."
         },
         "ci-main-remove": {
            "h1": {
               "description": "Changes in the Continuous Integration pipelines of the project.",
               "title": "CI"
            },
            "h2": {
               "description": "Changes in the main pipeline.",
               "title": "Main"
            },
            "h3": {
               "description": "Features that have been removed.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\u26d4\u2002Removed Features"
            },
            "scope": "ci-main",
            "type": "remove",
            "type_description": "Remove a feature from the main workflow."
         },
         "ci-main-secure": {
            "h1": {
               "description": "Changes in the Continuous Integration pipelines of the project.",
               "title": "CI"
            },
            "h2": {
               "description": "Changes in the main pipeline.",
               "title": "Main"
            },
            "h3": {
               "description": "Fixes for security vulnerabilities.\nThese are backward-compatible changes.\n",
               "title": "\ud83d\udee1\ufe0f\u2002Security Fixes"
            },
            "scope": "ci-main",
            "type": "secure",
            "type_description": "Fix a security issue in the main workflow."
         },
         "ci-test-change": {
            "h1": {
               "description": "Changes in the Continuous Integration pipelines of the project.",
               "title": "CI"
            },
            "h2": {
               "description": "Changes in the Continuous Testing pipelines.",
               "title": "Test"
            },
            "h3": {
               "description": "Features that have been changed in some way, such as in behavior or input/outputs.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\ud83d\udeab\u2002Changed Features"
            },
            "scope": "ci-test",
            "type": "change",
            "type_description": "Change a feature in the test workflow."
         },
         "ci-test-feat": {
            "h1": {
               "description": "Changes in the Continuous Integration pipelines of the project.",
               "title": "CI"
            },
            "h2": {
               "description": "Changes in the Continuous Testing pipelines.",
               "title": "Test"
            },
            "h3": {
               "description": "Newly-added backward-compatible features.\n",
               "title": "\ud83c\udf31\u2002New Features"
            },
            "scope": "ci-test",
            "type": "feat",
            "type_description": "Add a feature to the test workflow."
         },
         "ci-test-fix": {
            "h1": {
               "description": "Changes in the Continuous Integration pipelines of the project.",
               "title": "CI"
            },
            "h2": {
               "description": "Changes in the Continuous Testing pipelines.",
               "title": "Test"
            },
            "h3": {
               "description": "Backward-compatible bug fixes.\n",
               "title": "\ud83d\udc1e\u2002Bug Fixes"
            },
            "scope": "ci-test",
            "type": "fix",
            "type_description": "Fix a bug in the test workflow."
         },
         "ci-test-perf": {
            "h1": {
               "description": "Changes in the Continuous Integration pipelines of the project.",
               "title": "CI"
            },
            "h2": {
               "description": "Changes in the Continuous Testing pipelines.",
               "title": "Test"
            },
            "h3": {
               "description": "Backward-compatible performance improvements.\n",
               "title": "\ud83d\ude80\u2002Performance Improvements"
            },
            "scope": "ci-test",
            "type": "perf",
            "type_description": "Improve performance in the test workflow."
         },
         "ci-test-remove": {
            "h1": {
               "description": "Changes in the Continuous Integration pipelines of the project.",
               "title": "CI"
            },
            "h2": {
               "description": "Changes in the Continuous Testing pipelines.",
               "title": "Test"
            },
            "h3": {
               "description": "Features that have been removed.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\u26d4\u2002Removed Features"
            },
            "scope": "ci-test",
            "type": "remove",
            "type_description": "Remove a feature from the test workflow."
         },
         "ci-test-secure": {
            "h1": {
               "description": "Changes in the Continuous Integration pipelines of the project.",
               "title": "CI"
            },
            "h2": {
               "description": "Changes in the Continuous Testing pipelines.",
               "title": "Test"
            },
            "h3": {
               "description": "Fixes for security vulnerabilities.\nThese are backward-compatible changes.\n",
               "title": "\ud83d\udee1\ufe0f\u2002Security Fixes"
            },
            "scope": "ci-test",
            "type": "secure",
            "type_description": "Fix a security issue in the test workflow."
         },
         "config-ci": {
            "h1": {
               "description": "Changes in the project configurations and metadata.",
               "title": "Configuration"
            },
            "h2": {
               "description": "Related to the project's Continuous Integration and Deployment pipelines.",
               "title": "CI/CD"
            },
            "scope": "ci",
            "type": "config",
            "type_description": "Change CI/CD configurations."
         },
         "config-docs": {
            "h1": {
               "description": "Changes in the project configurations and metadata.",
               "title": "Configuration"
            },
            "h2": {
               "description": "Related to the project documentation materials and website.",
               "title": "Documentation"
            },
            "scope": "docs",
            "type": "config",
            "type_description": "Change documentation configurations."
         },
         "config-its": {
            "h1": {
               "description": "Changes in the project configurations and metadata.",
               "title": "Configuration"
            },
            "h2": {
               "description": "Related to the project's issue tracking system.",
               "title": "Issue Tracking"
            },
            "scope": "its",
            "type": "config",
            "type_description": "Change issue tracking system configurations."
         },
         "config-pkg": {
            "h1": {
               "description": "Changes in the project configurations and metadata.",
               "title": "Configuration"
            },
            "h2": {
               "description": "Related to the PyPackIT Python package.",
               "title": "Package"
            },
            "scope": "pkg",
            "type": "config",
            "type_description": "Change package configurations."
         },
         "config-proj": {
            "h1": {
               "description": "Changes in the project configurations and metadata.",
               "title": "Configuration"
            },
            "h2": {
               "description": "Related to the entire project.",
               "title": "Project"
            },
            "scope": "proj",
            "type": "config",
            "type_description": "Change project configurations."
         },
         "config-test": {
            "h1": {
               "description": "Changes in the project configurations and metadata.",
               "title": "Configuration"
            },
            "h2": {
               "description": "Related to the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "scope": "test",
            "type": "config",
            "type_description": "Change test configurations."
         },
         "config-vcs": {
            "h1": {
               "description": "Changes in the project configurations and metadata.",
               "title": "Configuration"
            },
            "h2": {
               "description": "Related to the project's version control system.",
               "title": "Version Control"
            },
            "scope": "vcs",
            "type": "config",
            "type_description": "Change version control system configurations."
         },
         "docs-content-change": {
            "h1": {
               "description": "Changes in the project documentation materials and website.",
               "title": "Documentation"
            },
            "h2": {
               "description": "Changes in documentation content.",
               "title": "Content"
            },
            "h3": {
               "description": "Features that have been changed in some way, such as in behavior or input/outputs.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\ud83d\udeab\u2002Changed Features"
            },
            "scope": "docs-content",
            "type": "change",
            "type_description": "Change content in the documentation."
         },
         "docs-content-feat": {
            "h1": {
               "description": "Changes in the project documentation materials and website.",
               "title": "Documentation"
            },
            "h2": {
               "description": "Changes in documentation content.",
               "title": "Content"
            },
            "h3": {
               "description": "Newly-added backward-compatible features.\n",
               "title": "\ud83c\udf31\u2002New Features"
            },
            "scope": "docs-content",
            "type": "feat",
            "type_description": "Add content to the documentation."
         },
         "docs-content-fix": {
            "h1": {
               "description": "Changes in the project documentation materials and website.",
               "title": "Documentation"
            },
            "h2": {
               "description": "Changes in documentation content.",
               "title": "Content"
            },
            "h3": {
               "description": "Backward-compatible bug fixes.\n",
               "title": "\ud83d\udc1e\u2002Bug Fixes"
            },
            "scope": "docs-content",
            "type": "fix",
            "type_description": "Fix content in the documentation."
         },
         "docs-content-remove": {
            "h1": {
               "description": "Changes in the project documentation materials and website.",
               "title": "Documentation"
            },
            "h2": {
               "description": "Changes in documentation content.",
               "title": "Content"
            },
            "h3": {
               "description": "Features that have been removed.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\u26d4\u2002Removed Features"
            },
            "scope": "docs-content",
            "type": "remove",
            "type_description": "Remove content from the documentation."
         },
         "docs-design-change": {
            "h1": {
               "description": "Changes in the project documentation materials and website.",
               "title": "Documentation"
            },
            "h2": {
               "description": "Changes in documentation and website design.",
               "title": "Web Design"
            },
            "h3": {
               "description": "Features that have been changed in some way, such as in behavior or input/outputs.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\ud83d\udeab\u2002Changed Features"
            },
            "scope": "docs-design",
            "type": "change",
            "type_description": "Change design elements in the documentation."
         },
         "docs-design-feat": {
            "h1": {
               "description": "Changes in the project documentation materials and website.",
               "title": "Documentation"
            },
            "h2": {
               "description": "Changes in documentation and website design.",
               "title": "Web Design"
            },
            "h3": {
               "description": "Newly-added backward-compatible features.\n",
               "title": "\ud83c\udf31\u2002New Features"
            },
            "scope": "docs-design",
            "type": "feat",
            "type_description": "Add design elements to the documentation."
         },
         "docs-design-fix": {
            "h1": {
               "description": "Changes in the project documentation materials and website.",
               "title": "Documentation"
            },
            "h2": {
               "description": "Changes in documentation and website design.",
               "title": "Web Design"
            },
            "h3": {
               "description": "Backward-compatible bug fixes.\n",
               "title": "\ud83d\udc1e\u2002Bug Fixes"
            },
            "scope": "docs-design",
            "type": "fix",
            "type_description": "Fix design elements in the documentation."
         },
         "docs-design-remove": {
            "h1": {
               "description": "Changes in the project documentation materials and website.",
               "title": "Documentation"
            },
            "h2": {
               "description": "Changes in documentation and website design.",
               "title": "Web Design"
            },
            "h3": {
               "description": "Features that have been removed.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\u26d4\u2002Removed Features"
            },
            "scope": "docs-design",
            "type": "remove",
            "type_description": "Remove design elements from the documentation."
         },
         "docs-feat-change": {
            "h1": {
               "description": "Changes in the project documentation materials and website.",
               "title": "Documentation"
            },
            "h2": {
               "description": "Changes in website features.",
               "title": "Web Features"
            },
            "h3": {
               "description": "Features that have been changed in some way, such as in behavior or input/outputs.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\ud83d\udeab\u2002Changed Features"
            },
            "scope": "docs-feat",
            "type": "change",
            "type_description": "Change features in the documentation."
         },
         "docs-feat-feat": {
            "h1": {
               "description": "Changes in the project documentation materials and website.",
               "title": "Documentation"
            },
            "h2": {
               "description": "Changes in website features.",
               "title": "Web Features"
            },
            "h3": {
               "description": "Newly-added backward-compatible features.\n",
               "title": "\ud83c\udf31\u2002New Features"
            },
            "scope": "docs-feat",
            "type": "feat",
            "type_description": "Add features to the documentation."
         },
         "docs-feat-fix": {
            "h1": {
               "description": "Changes in the project documentation materials and website.",
               "title": "Documentation"
            },
            "h2": {
               "description": "Changes in website features.",
               "title": "Web Features"
            },
            "h3": {
               "description": "Backward-compatible bug fixes.\n",
               "title": "\ud83d\udc1e\u2002Bug Fixes"
            },
            "scope": "docs-feat",
            "type": "fix",
            "type_description": "Fix features in the documentation."
         },
         "docs-feat-remove": {
            "h1": {
               "description": "Changes in the project documentation materials and website.",
               "title": "Documentation"
            },
            "h2": {
               "description": "Changes in website features.",
               "title": "Web Features"
            },
            "h3": {
               "description": "Features that have been removed.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\u26d4\u2002Removed Features"
            },
            "scope": "docs-feat",
            "type": "remove",
            "type_description": "Remove features from the documentation."
         },
         "maintain-ci": {
            "h1": {
               "description": "General maintenance and housekeeping activities.",
               "title": "Maintenance"
            },
            "h2": {
               "description": "Related to the project's Continuous Integration and Deployment pipelines.",
               "title": "CI/CD"
            },
            "scope": "ci",
            "type": "maintain",
            "type_description": "Perform maintenance tasks on the CI/CD pipelines."
         },
         "maintain-docs": {
            "h1": {
               "description": "General maintenance and housekeeping activities.",
               "title": "Maintenance"
            },
            "h2": {
               "description": "Related to the project documentation materials and website.",
               "title": "Documentation"
            },
            "scope": "docs",
            "type": "maintain",
            "type_description": "Perform maintenance tasks on the documentation."
         },
         "maintain-its": {
            "h1": {
               "description": "General maintenance and housekeeping activities.",
               "title": "Maintenance"
            },
            "h2": {
               "description": "Related to the project's issue tracking system.",
               "title": "Issue Tracking"
            },
            "scope": "its",
            "type": "maintain",
            "type_description": "Perform maintenance tasks on the issue tracking system."
         },
         "maintain-pkg": {
            "h1": {
               "description": "General maintenance and housekeeping activities.",
               "title": "Maintenance"
            },
            "h2": {
               "description": "Related to the PyPackIT Python package.",
               "title": "Package"
            },
            "scope": "pkg",
            "type": "maintain",
            "type_description": "Perform maintenance tasks on the package."
         },
         "maintain-proj": {
            "h1": {
               "description": "General maintenance and housekeeping activities.",
               "title": "Maintenance"
            },
            "h2": {
               "description": "Related to the entire project.",
               "title": "Project"
            },
            "scope": "proj",
            "type": "maintain",
            "type_description": "Perform maintenance tasks on the project as a whole."
         },
         "maintain-test": {
            "h1": {
               "description": "General maintenance and housekeeping activities.",
               "title": "Maintenance"
            },
            "h2": {
               "description": "Related to the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "scope": "test",
            "type": "maintain",
            "type_description": "Perform maintenance tasks on the test suite."
         },
         "maintain-vcs": {
            "h1": {
               "description": "General maintenance and housekeeping activities.",
               "title": "Maintenance"
            },
            "h2": {
               "description": "Related to the project's version control system.",
               "title": "Version Control"
            },
            "scope": "vcs",
            "type": "maintain",
            "type_description": "Perform maintenance tasks on the version control system."
         },
         "pkg-api-change": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in the application programming interface (API) of the package.",
               "title": "API"
            },
            "h3": {
               "description": "Features that have been changed in some way, such as in behavior or input/outputs.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\ud83d\udeab\u2002Changed Features"
            },
            "scope": "pkg-api",
            "type": "change",
            "type_description": "Change a feature in PyPackIT's API."
         },
         "pkg-api-deprecate": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in the application programming interface (API) of the package.",
               "title": "API"
            },
            "h3": {
               "description": "Features that have been marked for removal in the future.\nThese are backward-compatible changes.\n",
               "title": "\u26a0\ufe0f\u2002Deprecated Features"
            },
            "scope": "pkg-api",
            "type": "deprecate",
            "type_description": "Deprecate a feature in PyPackIT's API."
         },
         "pkg-api-enhance": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in the application programming interface (API) of the package.",
               "title": "API"
            },
            "h3": {
               "description": "Features that have been improved in a backward-compatible way.\n",
               "title": "\u2728\u2002Enhanced Features"
            },
            "scope": "pkg-api",
            "type": "enhance",
            "type_description": "Enhance a feature in PyPackIT's API."
         },
         "pkg-api-feat": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in the application programming interface (API) of the package.",
               "title": "API"
            },
            "h3": {
               "description": "Newly-added backward-compatible features.\n",
               "title": "\ud83c\udf31\u2002New Features"
            },
            "scope": "pkg-api",
            "type": "feat",
            "type_description": "Add a feature to PyPackIT's API."
         },
         "pkg-api-fix": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in the application programming interface (API) of the package.",
               "title": "API"
            },
            "h3": {
               "description": "Backward-compatible bug fixes.\n",
               "title": "\ud83d\udc1e\u2002Bug Fixes"
            },
            "scope": "pkg-api",
            "type": "fix",
            "type_description": "Fix a bug in PyPackIT's API."
         },
         "pkg-api-perf": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in the application programming interface (API) of the package.",
               "title": "API"
            },
            "h3": {
               "description": "Backward-compatible performance improvements.\n",
               "title": "\ud83d\ude80\u2002Performance Improvements"
            },
            "scope": "pkg-api",
            "type": "perf",
            "type_description": "Improve performance in PyPackIT's API."
         },
         "pkg-api-remove": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in the application programming interface (API) of the package.",
               "title": "API"
            },
            "h3": {
               "description": "Features that have been removed.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\u26d4\u2002Removed Features"
            },
            "scope": "pkg-api",
            "type": "remove",
            "type_description": "Remove a feature from PyPackIT's API."
         },
         "pkg-api-secure": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in the application programming interface (API) of the package.",
               "title": "API"
            },
            "h3": {
               "description": "Fixes for security vulnerabilities.\nThese are backward-compatible changes.\n",
               "title": "\ud83d\udee1\ufe0f\u2002Security Fixes"
            },
            "scope": "pkg-api",
            "type": "secure",
            "type_description": "Fix a security issue in PyPackIT's API."
         },
         "pkg-build-change": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in the build and installation processes.",
               "title": "Setup"
            },
            "h3": {
               "description": "Features that have been changed in some way, such as in behavior or input/outputs.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\ud83d\udeab\u2002Changed Features"
            },
            "scope": "pkg-build",
            "type": "change",
            "type_description": "Change a feature in PyPackIT's build."
         },
         "pkg-build-deprecate": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in the build and installation processes.",
               "title": "Setup"
            },
            "h3": {
               "description": "Features that have been marked for removal in the future.\nThese are backward-compatible changes.\n",
               "title": "\u26a0\ufe0f\u2002Deprecated Features"
            },
            "scope": "pkg-build",
            "type": "deprecate",
            "type_description": "Deprecate a feature in PyPackIT's build."
         },
         "pkg-build-enhance": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in the build and installation processes.",
               "title": "Setup"
            },
            "h3": {
               "description": "Features that have been improved in a backward-compatible way.\n",
               "title": "\u2728\u2002Enhanced Features"
            },
            "scope": "pkg-build",
            "type": "enhance",
            "type_description": "Enhance a feature in PyPackIT's build."
         },
         "pkg-build-feat": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in the build and installation processes.",
               "title": "Setup"
            },
            "h3": {
               "description": "Newly-added backward-compatible features.\n",
               "title": "\ud83c\udf31\u2002New Features"
            },
            "scope": "pkg-build",
            "type": "feat",
            "type_description": "Add a feature to PyPackIT's build."
         },
         "pkg-build-fix": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in the build and installation processes.",
               "title": "Setup"
            },
            "h3": {
               "description": "Backward-compatible bug fixes.\n",
               "title": "\ud83d\udc1e\u2002Bug Fixes"
            },
            "scope": "pkg-build",
            "type": "fix",
            "type_description": "Fix a bug in PyPackIT's build."
         },
         "pkg-build-perf": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in the build and installation processes.",
               "title": "Setup"
            },
            "h3": {
               "description": "Backward-compatible performance improvements.\n",
               "title": "\ud83d\ude80\u2002Performance Improvements"
            },
            "scope": "pkg-build",
            "type": "perf",
            "type_description": "Improve performance in PyPackIT's build."
         },
         "pkg-build-remove": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in the build and installation processes.",
               "title": "Setup"
            },
            "h3": {
               "description": "Features that have been removed.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\u26d4\u2002Removed Features"
            },
            "scope": "pkg-build",
            "type": "remove",
            "type_description": "Remove a feature from PyPackIT's build."
         },
         "pkg-build-secure": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in the build and installation processes.",
               "title": "Setup"
            },
            "h3": {
               "description": "Fixes for security vulnerabilities.\nThese are backward-compatible changes.\n",
               "title": "\ud83d\udee1\ufe0f\u2002Security Fixes"
            },
            "scope": "pkg-build",
            "type": "secure",
            "type_description": "Fix a security issue in PyPackIT's build."
         },
         "pkg-cli-change": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in the command-line interface (CLI) of the package.",
               "title": "CLI"
            },
            "h3": {
               "description": "Features that have been changed in some way, such as in behavior or input/outputs.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\ud83d\udeab\u2002Changed Features"
            },
            "scope": "pkg-cli",
            "type": "change",
            "type_description": "Change a feature in PyPackIT's CLI."
         },
         "pkg-cli-deprecate": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in the command-line interface (CLI) of the package.",
               "title": "CLI"
            },
            "h3": {
               "description": "Features that have been marked for removal in the future.\nThese are backward-compatible changes.\n",
               "title": "\u26a0\ufe0f\u2002Deprecated Features"
            },
            "scope": "pkg-cli",
            "type": "deprecate",
            "type_description": "Deprecate a feature in PyPackIT's CLI."
         },
         "pkg-cli-enhance": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in the command-line interface (CLI) of the package.",
               "title": "CLI"
            },
            "h3": {
               "description": "Features that have been improved in a backward-compatible way.\n",
               "title": "\u2728\u2002Enhanced Features"
            },
            "scope": "pkg-cli",
            "type": "enhance",
            "type_description": "Enhance a feature in PyPackIT's CLI."
         },
         "pkg-cli-feat": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in the command-line interface (CLI) of the package.",
               "title": "CLI"
            },
            "h3": {
               "description": "Newly-added backward-compatible features.\n",
               "title": "\ud83c\udf31\u2002New Features"
            },
            "scope": "pkg-cli",
            "type": "feat",
            "type_description": "Add a feature to PyPackIT's CLI."
         },
         "pkg-cli-fix": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in the command-line interface (CLI) of the package.",
               "title": "CLI"
            },
            "h3": {
               "description": "Backward-compatible bug fixes.\n",
               "title": "\ud83d\udc1e\u2002Bug Fixes"
            },
            "scope": "pkg-cli",
            "type": "fix",
            "type_description": "Fix a bug in PyPackIT's CLI."
         },
         "pkg-cli-perf": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in the command-line interface (CLI) of the package.",
               "title": "CLI"
            },
            "h3": {
               "description": "Backward-compatible performance improvements.\n",
               "title": "\ud83d\ude80\u2002Performance Improvements"
            },
            "scope": "pkg-cli",
            "type": "perf",
            "type_description": "Improve performance in PyPackIT's CLI."
         },
         "pkg-cli-remove": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in the command-line interface (CLI) of the package.",
               "title": "CLI"
            },
            "h3": {
               "description": "Features that have been removed.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\u26d4\u2002Removed Features"
            },
            "scope": "pkg-cli",
            "type": "remove",
            "type_description": "Remove a feature from PyPackIT's CLI."
         },
         "pkg-cli-secure": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in the command-line interface (CLI) of the package.",
               "title": "CLI"
            },
            "h3": {
               "description": "Fixes for security vulnerabilities.\nThese are backward-compatible changes.\n",
               "title": "\ud83d\udee1\ufe0f\u2002Security Fixes"
            },
            "scope": "pkg-cli",
            "type": "secure",
            "type_description": "Fix a security issue in PyPackIT's CLI."
         },
         "pkg-code-refactor": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in code that do not affect public interfaces.",
               "title": "Code"
            },
            "h3": {
               "description": "Changes in code structure and organization.\nThese are backward-compatible changes that only concern contributors.\n",
               "title": "\ud83e\uddf9\u2002Refactoring"
            },
            "scope": "pkg",
            "type": "refactor",
            "type_description": "Refactor code in PyPackIT."
         },
         "pkg-code-style": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in code that do not affect public interfaces.",
               "title": "Code"
            },
            "h3": {
               "description": "Changes in code style and formatting without affecting the meaning.\nThese are backward-compatible changes that only concern contributors.\n",
               "title": "\ud83c\udfa8\u2002Style Changes"
            },
            "scope": "pkg",
            "type": "style",
            "type_description": "Change text style and formatting in PyPackIT."
         },
         "pkg-gui-change": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in the graphical user interface (GUI) of the package.",
               "title": "GUI"
            },
            "h3": {
               "description": "Features that have been changed in some way, such as in behavior or input/outputs.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\ud83d\udeab\u2002Changed Features"
            },
            "scope": "pkg-gui",
            "type": "change",
            "type_description": "Change a feature in PyPackIT's GUI."
         },
         "pkg-gui-deprecate": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in the graphical user interface (GUI) of the package.",
               "title": "GUI"
            },
            "h3": {
               "description": "Features that have been marked for removal in the future.\nThese are backward-compatible changes.\n",
               "title": "\u26a0\ufe0f\u2002Deprecated Features"
            },
            "scope": "pkg-gui",
            "type": "deprecate",
            "type_description": "Deprecate a feature in PyPackIT's GUI."
         },
         "pkg-gui-enhance": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in the graphical user interface (GUI) of the package.",
               "title": "GUI"
            },
            "h3": {
               "description": "Features that have been improved in a backward-compatible way.\n",
               "title": "\u2728\u2002Enhanced Features"
            },
            "scope": "pkg-gui",
            "type": "enhance",
            "type_description": "Enhance a feature in PyPackIT's GUI."
         },
         "pkg-gui-feat": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in the graphical user interface (GUI) of the package.",
               "title": "GUI"
            },
            "h3": {
               "description": "Newly-added backward-compatible features.\n",
               "title": "\ud83c\udf31\u2002New Features"
            },
            "scope": "pkg-gui",
            "type": "feat",
            "type_description": "Add a feature to PyPackIT's GUI."
         },
         "pkg-gui-fix": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in the graphical user interface (GUI) of the package.",
               "title": "GUI"
            },
            "h3": {
               "description": "Backward-compatible bug fixes.\n",
               "title": "\ud83d\udc1e\u2002Bug Fixes"
            },
            "scope": "pkg-gui",
            "type": "fix",
            "type_description": "Fix a bug in PyPackIT's GUI."
         },
         "pkg-gui-perf": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in the graphical user interface (GUI) of the package.",
               "title": "GUI"
            },
            "h3": {
               "description": "Backward-compatible performance improvements.\n",
               "title": "\ud83d\ude80\u2002Performance Improvements"
            },
            "scope": "pkg-gui",
            "type": "perf",
            "type_description": "Improve performance in PyPackIT's GUI."
         },
         "pkg-gui-remove": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in the graphical user interface (GUI) of the package.",
               "title": "GUI"
            },
            "h3": {
               "description": "Features that have been removed.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\u26d4\u2002Removed Features"
            },
            "scope": "pkg-gui",
            "type": "remove",
            "type_description": "Remove a feature from PyPackIT's GUI."
         },
         "pkg-gui-secure": {
            "h1": {
               "description": "Changes in the PyPackIT Python package.",
               "title": "Package"
            },
            "h2": {
               "description": "Changes in the graphical user interface (GUI) of the package.",
               "title": "GUI"
            },
            "h3": {
               "description": "Fixes for security vulnerabilities.\nThese are backward-compatible changes.\n",
               "title": "\ud83d\udee1\ufe0f\u2002Security Fixes"
            },
            "scope": "pkg-gui",
            "type": "secure",
            "type_description": "Fix a security issue in PyPackIT's GUI."
         },
         "test-api-change": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in the application programming interface (API) of the package.",
               "title": "API"
            },
            "h3": {
               "description": "Features that have been changed in some way, such as in behavior or input/outputs.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\ud83d\udeab\u2002Changed Features"
            },
            "scope": "test-api",
            "type": "change",
            "type_description": "Change a feature in PyPackIT-TestSuite's API."
         },
         "test-api-deprecate": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in the application programming interface (API) of the package.",
               "title": "API"
            },
            "h3": {
               "description": "Features that have been marked for removal in the future.\nThese are backward-compatible changes.\n",
               "title": "\u26a0\ufe0f\u2002Deprecated Features"
            },
            "scope": "test-api",
            "type": "deprecate",
            "type_description": "Deprecate a feature in PyPackIT-TestSuite's API."
         },
         "test-api-enhance": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in the application programming interface (API) of the package.",
               "title": "API"
            },
            "h3": {
               "description": "Features that have been improved in a backward-compatible way.\n",
               "title": "\u2728\u2002Enhanced Features"
            },
            "scope": "test-api",
            "type": "enhance",
            "type_description": "Enhance a feature in PyPackIT-TestSuite's API."
         },
         "test-api-feat": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in the application programming interface (API) of the package.",
               "title": "API"
            },
            "h3": {
               "description": "Newly-added backward-compatible features.\n",
               "title": "\ud83c\udf31\u2002New Features"
            },
            "scope": "test-api",
            "type": "feat",
            "type_description": "Add a feature to PyPackIT-TestSuite's API."
         },
         "test-api-fix": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in the application programming interface (API) of the package.",
               "title": "API"
            },
            "h3": {
               "description": "Backward-compatible bug fixes.\n",
               "title": "\ud83d\udc1e\u2002Bug Fixes"
            },
            "scope": "test-api",
            "type": "fix",
            "type_description": "Fix a bug in PyPackIT-TestSuite's API."
         },
         "test-api-perf": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in the application programming interface (API) of the package.",
               "title": "API"
            },
            "h3": {
               "description": "Backward-compatible performance improvements.\n",
               "title": "\ud83d\ude80\u2002Performance Improvements"
            },
            "scope": "test-api",
            "type": "perf",
            "type_description": "Improve performance in PyPackIT-TestSuite's API."
         },
         "test-api-remove": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in the application programming interface (API) of the package.",
               "title": "API"
            },
            "h3": {
               "description": "Features that have been removed.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\u26d4\u2002Removed Features"
            },
            "scope": "test-api",
            "type": "remove",
            "type_description": "Remove a feature from PyPackIT-TestSuite's API."
         },
         "test-api-secure": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in the application programming interface (API) of the package.",
               "title": "API"
            },
            "h3": {
               "description": "Fixes for security vulnerabilities.\nThese are backward-compatible changes.\n",
               "title": "\ud83d\udee1\ufe0f\u2002Security Fixes"
            },
            "scope": "test-api",
            "type": "secure",
            "type_description": "Fix a security issue in PyPackIT-TestSuite's API."
         },
         "test-build-change": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in the build and installation processes.",
               "title": "Setup"
            },
            "h3": {
               "description": "Features that have been changed in some way, such as in behavior or input/outputs.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\ud83d\udeab\u2002Changed Features"
            },
            "scope": "test-build",
            "type": "change",
            "type_description": "Change a feature in PyPackIT-TestSuite's build."
         },
         "test-build-deprecate": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in the build and installation processes.",
               "title": "Setup"
            },
            "h3": {
               "description": "Features that have been marked for removal in the future.\nThese are backward-compatible changes.\n",
               "title": "\u26a0\ufe0f\u2002Deprecated Features"
            },
            "scope": "test-build",
            "type": "deprecate",
            "type_description": "Deprecate a feature in PyPackIT-TestSuite's build."
         },
         "test-build-enhance": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in the build and installation processes.",
               "title": "Setup"
            },
            "h3": {
               "description": "Features that have been improved in a backward-compatible way.\n",
               "title": "\u2728\u2002Enhanced Features"
            },
            "scope": "test-build",
            "type": "enhance",
            "type_description": "Enhance a feature in PyPackIT-TestSuite's build."
         },
         "test-build-feat": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in the build and installation processes.",
               "title": "Setup"
            },
            "h3": {
               "description": "Newly-added backward-compatible features.\n",
               "title": "\ud83c\udf31\u2002New Features"
            },
            "scope": "test-build",
            "type": "feat",
            "type_description": "Add a feature to PyPackIT-TestSuite's build."
         },
         "test-build-fix": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in the build and installation processes.",
               "title": "Setup"
            },
            "h3": {
               "description": "Backward-compatible bug fixes.\n",
               "title": "\ud83d\udc1e\u2002Bug Fixes"
            },
            "scope": "test-build",
            "type": "fix",
            "type_description": "Fix a bug in PyPackIT-TestSuite's build."
         },
         "test-build-perf": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in the build and installation processes.",
               "title": "Setup"
            },
            "h3": {
               "description": "Backward-compatible performance improvements.\n",
               "title": "\ud83d\ude80\u2002Performance Improvements"
            },
            "scope": "test-build",
            "type": "perf",
            "type_description": "Improve performance in PyPackIT-TestSuite's build."
         },
         "test-build-remove": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in the build and installation processes.",
               "title": "Setup"
            },
            "h3": {
               "description": "Features that have been removed.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\u26d4\u2002Removed Features"
            },
            "scope": "test-build",
            "type": "remove",
            "type_description": "Remove a feature from PyPackIT-TestSuite's build."
         },
         "test-build-secure": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in the build and installation processes.",
               "title": "Setup"
            },
            "h3": {
               "description": "Fixes for security vulnerabilities.\nThese are backward-compatible changes.\n",
               "title": "\ud83d\udee1\ufe0f\u2002Security Fixes"
            },
            "scope": "test-build",
            "type": "secure",
            "type_description": "Fix a security issue in PyPackIT-TestSuite's build."
         },
         "test-cli-change": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in the command-line interface (CLI) of the package.",
               "title": "CLI"
            },
            "h3": {
               "description": "Features that have been changed in some way, such as in behavior or input/outputs.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\ud83d\udeab\u2002Changed Features"
            },
            "scope": "test-cli",
            "type": "change",
            "type_description": "Change a feature in PyPackIT-TestSuite's CLI."
         },
         "test-cli-deprecate": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in the command-line interface (CLI) of the package.",
               "title": "CLI"
            },
            "h3": {
               "description": "Features that have been marked for removal in the future.\nThese are backward-compatible changes.\n",
               "title": "\u26a0\ufe0f\u2002Deprecated Features"
            },
            "scope": "test-cli",
            "type": "deprecate",
            "type_description": "Deprecate a feature in PyPackIT-TestSuite's CLI."
         },
         "test-cli-enhance": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in the command-line interface (CLI) of the package.",
               "title": "CLI"
            },
            "h3": {
               "description": "Features that have been improved in a backward-compatible way.\n",
               "title": "\u2728\u2002Enhanced Features"
            },
            "scope": "test-cli",
            "type": "enhance",
            "type_description": "Enhance a feature in PyPackIT-TestSuite's CLI."
         },
         "test-cli-feat": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in the command-line interface (CLI) of the package.",
               "title": "CLI"
            },
            "h3": {
               "description": "Newly-added backward-compatible features.\n",
               "title": "\ud83c\udf31\u2002New Features"
            },
            "scope": "test-cli",
            "type": "feat",
            "type_description": "Add a feature to PyPackIT-TestSuite's CLI."
         },
         "test-cli-fix": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in the command-line interface (CLI) of the package.",
               "title": "CLI"
            },
            "h3": {
               "description": "Backward-compatible bug fixes.\n",
               "title": "\ud83d\udc1e\u2002Bug Fixes"
            },
            "scope": "test-cli",
            "type": "fix",
            "type_description": "Fix a bug in PyPackIT-TestSuite's CLI."
         },
         "test-cli-perf": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in the command-line interface (CLI) of the package.",
               "title": "CLI"
            },
            "h3": {
               "description": "Backward-compatible performance improvements.\n",
               "title": "\ud83d\ude80\u2002Performance Improvements"
            },
            "scope": "test-cli",
            "type": "perf",
            "type_description": "Improve performance in PyPackIT-TestSuite's CLI."
         },
         "test-cli-remove": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in the command-line interface (CLI) of the package.",
               "title": "CLI"
            },
            "h3": {
               "description": "Features that have been removed.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\u26d4\u2002Removed Features"
            },
            "scope": "test-cli",
            "type": "remove",
            "type_description": "Remove a feature from PyPackIT-TestSuite's CLI."
         },
         "test-cli-secure": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in the command-line interface (CLI) of the package.",
               "title": "CLI"
            },
            "h3": {
               "description": "Fixes for security vulnerabilities.\nThese are backward-compatible changes.\n",
               "title": "\ud83d\udee1\ufe0f\u2002Security Fixes"
            },
            "scope": "test-cli",
            "type": "secure",
            "type_description": "Fix a security issue in PyPackIT-TestSuite's CLI."
         },
         "test-code-refactor": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in code that do not affect public interfaces.",
               "title": "Code"
            },
            "h3": {
               "description": "Changes in code structure and organization.\nThese are backward-compatible changes that only concern contributors.\n",
               "title": "\ud83e\uddf9\u2002Refactoring"
            },
            "scope": "test",
            "type": "refactor",
            "type_description": "Refactor code in PyPackIT-TestSuite."
         },
         "test-code-style": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in code that do not affect public interfaces.",
               "title": "Code"
            },
            "h3": {
               "description": "Changes in code style and formatting without affecting the meaning.\nThese are backward-compatible changes that only concern contributors.\n",
               "title": "\ud83c\udfa8\u2002Style Changes"
            },
            "scope": "test",
            "type": "style",
            "type_description": "Change text style and formatting in PyPackIT-TestSuite."
         },
         "test-gui-change": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in the graphical user interface (GUI) of the package.",
               "title": "GUI"
            },
            "h3": {
               "description": "Features that have been changed in some way, such as in behavior or input/outputs.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\ud83d\udeab\u2002Changed Features"
            },
            "scope": "test-gui",
            "type": "change",
            "type_description": "Change a feature in PyPackIT-TestSuite's GUI."
         },
         "test-gui-deprecate": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in the graphical user interface (GUI) of the package.",
               "title": "GUI"
            },
            "h3": {
               "description": "Features that have been marked for removal in the future.\nThese are backward-compatible changes.\n",
               "title": "\u26a0\ufe0f\u2002Deprecated Features"
            },
            "scope": "test-gui",
            "type": "deprecate",
            "type_description": "Deprecate a feature in PyPackIT-TestSuite's GUI."
         },
         "test-gui-enhance": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in the graphical user interface (GUI) of the package.",
               "title": "GUI"
            },
            "h3": {
               "description": "Features that have been improved in a backward-compatible way.\n",
               "title": "\u2728\u2002Enhanced Features"
            },
            "scope": "test-gui",
            "type": "enhance",
            "type_description": "Enhance a feature in PyPackIT-TestSuite's GUI."
         },
         "test-gui-feat": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in the graphical user interface (GUI) of the package.",
               "title": "GUI"
            },
            "h3": {
               "description": "Newly-added backward-compatible features.\n",
               "title": "\ud83c\udf31\u2002New Features"
            },
            "scope": "test-gui",
            "type": "feat",
            "type_description": "Add a feature to PyPackIT-TestSuite's GUI."
         },
         "test-gui-fix": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in the graphical user interface (GUI) of the package.",
               "title": "GUI"
            },
            "h3": {
               "description": "Backward-compatible bug fixes.\n",
               "title": "\ud83d\udc1e\u2002Bug Fixes"
            },
            "scope": "test-gui",
            "type": "fix",
            "type_description": "Fix a bug in PyPackIT-TestSuite's GUI."
         },
         "test-gui-perf": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in the graphical user interface (GUI) of the package.",
               "title": "GUI"
            },
            "h3": {
               "description": "Backward-compatible performance improvements.\n",
               "title": "\ud83d\ude80\u2002Performance Improvements"
            },
            "scope": "test-gui",
            "type": "perf",
            "type_description": "Improve performance in PyPackIT-TestSuite's GUI."
         },
         "test-gui-remove": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in the graphical user interface (GUI) of the package.",
               "title": "GUI"
            },
            "h3": {
               "description": "Features that have been removed.\nThese are backward-incompatible (breaking) changes.\n",
               "title": "\u26d4\u2002Removed Features"
            },
            "scope": "test-gui",
            "type": "remove",
            "type_description": "Remove a feature from PyPackIT-TestSuite's GUI."
         },
         "test-gui-secure": {
            "h1": {
               "description": "Changes in the PyPackIT-TestSuite Python package, i.e., PyPackIT's test-suite.",
               "title": "Test Suite"
            },
            "h2": {
               "description": "Changes in the graphical user interface (GUI) of the package.",
               "title": "GUI"
            },
            "h3": {
               "description": "Fixes for security vulnerabilities.\nThese are backward-compatible changes.\n",
               "title": "\ud83d\udee1\ufe0f\u2002Security Fixes"
            },
            "scope": "test-gui",
            "type": "secure",
            "type_description": "Fix a security issue in PyPackIT-TestSuite's GUI."
         }
      },
      "release": {
         "chore": {
            "description": "{{ pull_request.title }}",
            "type": "chore",
            "type_description": "Perform general maintenance and housekeeping activities."
         },
         "ci": {
            "description": "{{ pull_request.title }}",
            "type": "ci",
            "type_description": "Change Continuous Integration and Deployment pipelines."
         },
         "config": {
            "description": "{{ pull_request.title }}",
            "type": "config",
            "type_description": "Change project configurations and metadata."
         },
         "docs_change": {
            "action": "post",
            "description": "{{ pull_request.title }}",
            "scope": "docs",
            "type": "change",
            "type_description": "Introduce backward-incompatible changes in PyPackIT's documentation."
         },
         "docs_feat": {
            "action": "post",
            "description": "{{ pull_request.title }}",
            "scope": "docs",
            "type": "feat",
            "type_description": "Add backward-compatible features to PyPackIT's documentation."
         },
         "docs_fix": {
            "action": "post",
            "description": "{{ pull_request.title }}",
            "scope": "docs",
            "type": "fix",
            "type_description": "Fix bugs in PyPackIT's documentation."
         },
         "pkg_api_change": {
            "action": "major",
            "description": "{{ pull_request.title }}",
            "scope": "pkg-api",
            "type": "change",
            "type_description": "Introduce backward-incompatible changes in PyPackIT's API."
         },
         "pkg_api_feat": {
            "action": "minor",
            "description": "{{ pull_request.title }}",
            "scope": "pkg-api",
            "type": "feat",
            "type_description": "Add backward-compatible features to PyPackIT's API."
         },
         "pkg_api_fix": {
            "action": "patch",
            "description": "{{ pull_request.title }}",
            "scope": "pkg-api",
            "type": "fix",
            "type_description": "Fix bugs in PyPackIT's API."
         },
         "pkg_build_change": {
            "action": "major",
            "description": "{{ pull_request.title }}",
            "scope": "pkg-build",
            "type": "change",
            "type_description": "Introduce backward-incompatible changes in PyPackIT's build system."
         },
         "pkg_build_feat": {
            "action": "minor",
            "description": "{{ pull_request.title }}",
            "scope": "pkg-build",
            "type": "feat",
            "type_description": "Add backward-compatible features to PyPackIT's build system."
         },
         "pkg_build_fix": {
            "action": "patch",
            "description": "{{ pull_request.title }}",
            "scope": "pkg-build",
            "type": "fix",
            "type_description": "Fix bugs in PyPackIT's build system."
         },
         "pkg_cli_change": {
            "action": "major",
            "description": "{{ pull_request.title }}",
            "scope": "pkg-cli",
            "type": "change",
            "type_description": "Introduce backward-incompatible changes in PyPackIT's CLI."
         },
         "pkg_cli_feat": {
            "action": "minor",
            "description": "{{ pull_request.title }}",
            "scope": "pkg-cli",
            "type": "feat",
            "type_description": "Add backward-compatible features to PyPackIT's CLI."
         },
         "pkg_cli_fix": {
            "action": "patch",
            "description": "{{ pull_request.title }}",
            "scope": "pkg-cli",
            "type": "fix",
            "type_description": "Fix bugs in PyPackIT's CLI."
         },
         "pkg_gui_change": {
            "action": "major",
            "description": "{{ pull_request.title }}",
            "scope": "pkg-gui",
            "type": "change",
            "type_description": "Introduce backward-incompatible changes in PyPackIT's GUI."
         },
         "pkg_gui_feat": {
            "action": "minor",
            "description": "{{ pull_request.title }}",
            "scope": "pkg-gui",
            "type": "feat",
            "type_description": "Add backward-compatible features to PyPackIT's GUI."
         },
         "pkg_gui_fix": {
            "action": "patch",
            "description": "{{ pull_request.title }}",
            "scope": "pkg-gui",
            "type": "fix",
            "type_description": "Fix bugs in PyPackIT's GUI."
         },
         "refactor": {
            "action": "post",
            "description": "{{ pull_request.title }}",
            "type": "refactor",
            "type_description": "Refactor code in PyPackIT."
         },
         "test_api_change": {
            "action": "post",
            "description": "{{ pull_request.title }}",
            "scope": "test-api",
            "type": "change",
            "type_description": "Introduce backward-incompatible changes in PyPackIT-TestSuite's API."
         },
         "test_api_feat": {
            "action": "post",
            "description": "{{ pull_request.title }}",
            "scope": "test-api",
            "type": "feat",
            "type_description": "Add backward-compatible features to PyPackIT-TestSuite's API."
         },
         "test_api_fix": {
            "action": "post",
            "description": "{{ pull_request.title }}",
            "scope": "test-api",
            "type": "fix",
            "type_description": "Fix bugs in PyPackIT-TestSuite's API."
         },
         "test_build_change": {
            "action": "post",
            "description": "{{ pull_request.title }}",
            "scope": "test-build",
            "type": "change",
            "type_description": "Introduce backward-incompatible changes in PyPackIT-TestSuite's build system."
         },
         "test_build_feat": {
            "action": "post",
            "description": "{{ pull_request.title }}",
            "scope": "test-build",
            "type": "feat",
            "type_description": "Add backward-compatible features to PyPackIT-TestSuite's build system."
         },
         "test_build_fix": {
            "action": "post",
            "description": "{{ pull_request.title }}",
            "scope": "test-build",
            "type": "fix",
            "type_description": "Fix bugs in PyPackIT-TestSuite's build system."
         },
         "test_cli_change": {
            "action": "post",
            "description": "{{ pull_request.title }}",
            "scope": "test-cli",
            "type": "change",
            "type_description": "Introduce backward-incompatible changes in PyPackIT-TestSuite's CLI."
         },
         "test_cli_feat": {
            "action": "post",
            "description": "{{ pull_request.title }}",
            "scope": "test-cli",
            "type": "feat",
            "type_description": "Add backward-compatible features to PyPackIT-TestSuite's CLI."
         },
         "test_cli_fix": {
            "action": "post",
            "description": "{{ pull_request.title }}",
            "scope": "test-cli",
            "type": "fix",
            "type_description": "Fix bugs in PyPackIT-TestSuite's CLI."
         },
         "test_gui_change": {
            "action": "post",
            "description": "{{ pull_request.title }}",
            "scope": "test-gui",
            "type": "change",
            "type_description": "Introduce backward-incompatible changes in PyPackIT-TestSuite's GUI."
         },
         "test_gui_feat": {
            "action": "post",
            "description": "{{ pull_request.title }}",
            "scope": "test-gui",
            "type": "feat",
            "type_description": "Add backward-compatible features to PyPackIT-TestSuite's GUI."
         },
         "test_gui_fix": {
            "action": "post",
            "description": "{{ pull_request.title }}",
            "scope": "test-gui",
            "type": "fix",
            "type_description": "Fix bugs in PyPackIT-TestSuite's GUI."
         }
      }
   },
   "control": {
      "changelogs": {
         "path": ".data/.changelogs.json"
      },
      "variable": {
         "path": ".data/.variable.json"
      },
      "contributor": {
         "path": ".data/contributor.json"
      },
      "source": {
         "path": ".data/source.yaml"
      },
      "cache": {
         "retention_hours": {
            "css_color_filter": 0,
            "doi": 1000,
            "extension": 0,
            "license": 1000,
            "orcid": 240,
            "python": 500,
            "repo": 1,
            "user": 24
         }
      },
      "path": {
         "config": ".control/control.yaml",
         "pkg_install_script": "install.py"
      },
      "url": {
         "changelog": "https://raw.githubusercontent.com/RepoDynamics/PyPackIT/main/.github/.repodynamics/changelog.json",
         "metadata": "https://raw.githubusercontent.com/RepoDynamics/PyPackIT/main/.github/.repodynamics/metadata.json",
         "variables": "https://raw.githubusercontent.com/RepoDynamics/PyPackIT/main/.github/.repodynamics/variables.json"
      }
   },
   "copy_app_copyright": {
      "destinations": [
         "pkg/COPYRIGHTS",
         "test/COPYRIGHTS"
      ],
      "sources": [
         "COPYRIGHT-AGPL-3-0-or-later.md"
      ]
   },
   "copy_app_license": {
      "destinations": [
         "pkg/LICENSES",
         "test/LICENSES"
      ],
      "sources": [
         "LICENSE-AGPL-3-0-or-later.md"
      ]
   },
   "copyright": "\u00a9 2023\u20132025 RepoDynamics",
   "default": {
      "file_setting": {
         "json": {
            "end_of_file_newline": true,
            "indent": 3,
            "sort_keys": true
         },
         "yaml": {
            "block_string": true,
            "end_of_file_newline": true,
            "mapping_indent": 2,
            "remove_top_level_indent": true,
            "sequence_indent": 4,
            "sequence_indent_offset": 2,
            "sort_keys": true
         }
      }
   },
   "devcontainer": {
      "docker-compose": {
         "config": {
            "services": {
               "main": {
                  "build": {
                     "context": "../",
                     "dockerfile": ".devcontainer/Dockerfile"
                  },
                  "command": "sleep infinity",
                  "privileged": true,
                  "volumes": [
                     "../:/pypackit:cached"
                  ]
               },
               "openjournals": {
                  "command": [
                     "-c",
                     "tail -f /dev/null"
                  ],
                  "container_name": "openjournals-inara",
                  "entrypoint": [
                     "/bin/sh"
                  ],
                  "image": "openjournals/inara:latest",
                  "volumes": [
                     "../:/pypackit"
                  ],
                  "working_dir": "/pypackit"
               }
            }
         },
         "path": ".devcontainer/docker-compose.yaml"
      },
      "feature": {
         "git": {
            "install": {
               "content": {
                  "body": [
                     {
                        "content": "exit_if_not_root"
                     },
                     {
                        "content": "\"$SYSPKG_INSTALL_SCRIPT\" \\\n  --apt \"$(get_script_dir)/requirements/apt.txt\" \\\n  --logfile \"$LOGFILE\" \\\n  $( [ \"$DEBUG\" = \"true\" ] && echo --debug )\n",
                        "summary": "Install system dependencies."
                     },
                     {
                        "content": "VERSION=$(\n    get_matching_github_refs \\\n        --owner git \\\n        --repo git \\\n        --ref \"tags/v\" \\\n        --remove_prefix \"tags/v\" \\\n        --regex \"$VERSION\"\n)\n",
                        "summary": "Resolve version"
                     },
                     {
                        "content": "# https://github.com/devcontainers/features/blob/8895eb3d161d28ada3a8de761a83135e811cae3d/src/git/install.sh#L299-L312\nmkdir -p \"$INSTALLER_DIR\"\necho \"\ud83d\udce5 Download source code for Git v${VERSION}.\"\ncurl -sL \"${SOURCE}${VERSION}.tar.gz\" | tar -xzC \"$INSTALLER_DIR\" 2>&1\necho \"\ud83c\udfd7 Build Git.\"\ncd \"$INSTALLER_DIR/git-$VERSION\"\ngit_options=(\"prefix=$PREFIX\")\ngit_options+=(\"sysconfdir=$SYSCONFDIR\")\ngit_options+=(\"USE_LIBPCRE=YesPlease\")\nmake -s \"${git_options[@]}\" all && make -s \"${git_options[@]}\" install 2>&1\n",
                        "summary": "Download and install Git from source."
                     },
                     {
                        "content": "echo \"\u2705 Git v${VERSION} installed successfully.\""
                     }
                  ],
                  "flags": "-euo pipefail",
                  "function": {
                     "__cleanup__": {
                        "body": [
                           "[[ \"$NO_CLEAN\" == false ]] && (cd / && rm -rf \"$INSTALLER_DIR/git-$VERSION\")",
                           "if [ -n \"${LOGFILE-}\" ]; then",
                           "  echo \"\u2139\ufe0f Write logs to file '$LOGFILE'\" >&2",
                           "  mkdir -p \"$(dirname \"$LOGFILE\")\"",
                           "  cat \"$_LOGFILE_TMP\" >> \"$LOGFILE\"",
                           "  rm -f \"$_LOGFILE_TMP\"",
                           "fi"
                        ],
                        "name": "__cleanup__",
                        "summary": "Cleanup function."
                     }
                  },
                  "import": [
                     "exit_if_not_root",
                     "get_script_dir"
                  ],
                  "interpreter": "usr/bin/env bash",
                  "parameter": {
                     "debug": {
                        "summary": "Enable debug output.",
                        "type": "boolean"
                     },
                     "instller_dir": {
                        "array_delimiter": " :: ",
                        "default": "/tmp/git-installer",
                        "summary": "Path to a directory to download the installer to.",
                        "type": "string"
                     },
                     "logfile": {
                        "default": "",
                        "summary": "Log all output (stdout + stderr) to this file in addition to console.",
                        "type": "string"
                     },
                     "no_clean": {
                        "array_delimiter": " :: ",
                        "summary": "Skip removing installer artifacts after installation.",
                        "type": "boolean"
                     },
                     "prefix": {
                        "array_delimiter": " :: ",
                        "default": "/usr/local/git",
                        "summary": "Path to the directory where Git will be installed.",
                        "type": "string"
                     },
                     "source": {
                        "array_delimiter": " :: ",
                        "default": "https://www.kernel.org/pub/software/scm/git/git-",
                        "description": "The full URL is built by appending the resolved version to this URL.",
                        "examples": [
                           "https://github.com/git/git/archive/v"
                        ],
                        "summary": "URL to download the Git source code from.",
                        "type": "string"
                     },
                     "sysconfdir": {
                        "array_delimiter": " :: ",
                        "default": "/etc",
                        "summary": "Path to the system configuration directory for Git.",
                        "type": "string"
                     },
                     "version": {
                        "array_delimiter": " :: ",
                        "default": "",
                        "description": "This must be a regex matching a version number (`^` and `$` are automatically added to this). The latest version matching the regex will be selected. If not specified, the latest version will be installed.",
                        "examples": [
                           "2.*",
                           "2.[0-9]+.[0-9]+"
                        ],
                        "summary": "Version of Git to install.",
                        "type": "string"
                     }
                  }
               },
               "content_setting": {
                  "prefix": "",
                  "separator": "\n",
                  "suffix": ""
               },
               "description": "Install Git from the official Git repository.\n",
               "file_setting": {
                  "eof_newline": true,
                  "json": {
                     "end_of_file_newline": true,
                     "indent": 3,
                     "sort_keys": true
                  },
                  "md": {
                     "heading_number": false,
                     "target": "github"
                  },
                  "sort_keys": true,
                  "yaml": {
                     "block_string": true,
                     "end_of_file_newline": true,
                     "mapping_indent": 2,
                     "remove_top_level_indent": true,
                     "sequence_indent": 4,
                     "sequence_indent_offset": 2,
                     "sort_keys": true
                  }
               },
               "name": "Git Installation",
               "path": ".devcontainer/feature/git/install.sh",
               "references": [
                  {
                     "title": "Git installation documentation",
                     "url": "https://git-scm.com/book/en/v2/Getting-Started-Installing-Git"
                  },
                  {
                     "title": "Git Devcontainer Feature installation script",
                     "url": "https://github.com/devcontainers/features/tree/main/src/git/"
                  }
               ],
               "relpath": "install.sh",
               "status": "active",
               "summary": "Install Git.",
               "type": "shell_exec",
               "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/feature/git/install.sh"
            },
            "metadata": {
               "content": {
                  "description": "Install Git from the official Git repository.",
                  "id": "git",
                  "name": "Git Installation",
                  "options": {
                     "debug": {
                        "default": false,
                        "description": "Enable debug output.",
                        "type": "boolean"
                     },
                     "instller_dir": {
                        "default": "/tmp/git-installer",
                        "description": "Path to a directory to download the installer to.",
                        "type": "string"
                     },
                     "logfile": {
                        "default": "",
                        "description": "Log all output (stdout + stderr) to this file in addition to console.",
                        "type": "string"
                     },
                     "no_clean": {
                        "default": false,
                        "description": "Skip removing installer artifacts after installation.",
                        "type": "boolean"
                     },
                     "prefix": {
                        "default": "/usr/local/git",
                        "description": "Path to the directory where Git will be installed.",
                        "type": "string"
                     },
                     "source": {
                        "default": "https://www.kernel.org/pub/software/scm/git/git-",
                        "description": "URL to download the Git source code from.\nThe full URL is built by appending the resolved version to this URL.",
                        "type": "string"
                     },
                     "sysconfdir": {
                        "default": "/etc",
                        "description": "Path to the system configuration directory for Git.",
                        "type": "string"
                     },
                     "version": {
                        "default": "",
                        "description": "Version of Git to install.\nThis must be a regex matching a version number (`^` and `$` are automatically added to this). The latest version matching the regex will be selected. If not specified, the latest version will be installed.",
                        "type": "string"
                     }
                  },
                  "version": "0.1.0"
               },
               "content_setting": {
                  "prefix": "",
                  "separator": "\n",
                  "suffix": ""
               },
               "file_setting": {
                  "eof_newline": true,
                  "json": {
                     "end_of_file_newline": true,
                     "indent": 3,
                     "sort_keys": true
                  },
                  "md": {
                     "heading_number": false,
                     "target": "github"
                  },
                  "sort_keys": true,
                  "yaml": {
                     "block_string": true,
                     "end_of_file_newline": true,
                     "mapping_indent": 2,
                     "remove_top_level_indent": true,
                     "sequence_indent": 4,
                     "sequence_indent_offset": 2,
                     "sort_keys": true
                  }
               },
               "name": "Git Installation Devcontainer Feature Metadata",
               "path": ".devcontainer/feature/git/devcontainer-feature.json",
               "relpath": "devcontainer-feature.json",
               "status": "active",
               "summary": "`devcontainer-feature.json` file for the feature.",
               "type": "json",
               "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/feature/git/devcontainer-feature.json"
            },
            "path": ".devcontainer/feature/git",
            "relpath": "feature/git"
         },
         "miniforge": {
            "install": {
               "content": {
                  "body": [
                     {
                        "content": "exit_if_not_root"
                     },
                     {
                        "content": "set_executable_paths"
                     },
                     {
                        "content": "if [[ \"$DOWNLOAD\" == true || \"$INSTALL\" == true || \"$REINSTALL\" == true ]]; then\n    set_installer_filename\nfi\n"
                     },
                     {
                        "content": "if [[ \"$DOWNLOAD\" == true ]]; then download_miniforge; fi",
                        "summary": "Download Miniforge installer."
                     },
                     {
                        "content": "if [[ \"$DOWNLOAD\" == true || \"$INSTALL\" == true || \"$REINSTALL\" == true ]]; then\n    if [[ -f \"$CHECKSUM\" ]]; then\n        verify_miniforge\n    else\n        echo \"\u26a0\ufe0f Checksum file not found. Skipping verification.\" >&2\n    fi\nfi\n",
                        "summary": "Verify installer checksum."
                     },
                     {
                        "content": "if [[ \"$INSTALL\" == true || \"$REINSTALL\" == true ]]; then\n    if command -v conda >/dev/null 2>&1; then\n        echo \"\u26a0\ufe0f Conda installation found.\"\n        if [[ \"$REINSTALL\" != true ]]; then\n            echo \"\u23e9 Conda is already available.\"\n        else\n            uninstall_miniforge\n            install_miniforge\n        fi\n    else\n        install_miniforge\n    fi\nfi\n",
                        "summary": "Install Miniforge."
                     },
                     {
                        "content": "set_executable_paths --verify",
                        "description": "If installation was not performed in this run,\nupdate the CONDA_EXEC variable to point to the correct location.\n",
                        "summary": "Update executable paths."
                     },
                     {
                        "content": "if [[ ${#ACTIVATES[@]} -gt 0 ]]; then add_activation_to_rcfile; fi",
                        "summary": "Source activation scripts."
                     },
                     {
                        "content": "if [[ \"$UPDATE_BASE\" == true ]]; then\n    echo \"\u26a0\ufe0f Updating base conda environment.\"\n    \"$MAMBA_EXEC\" update -n base --all -y\nfi\n",
                        "summary": "Update base environment."
                     },
                     {
                        "content": "if [[ ${#ENV_FILES[@]} -gt 0 || ${#ENV_DIRS[@]} -gt 0 ]]; then setup_environments; fi\n",
                        "summary": "Install conda environments."
                     },
                     {
                        "content": "if [[ \"$SET_PERMISSION\" == true ]]; then set_permission; fi",
                        "summary": "Set permissions for conda directory."
                     },
                     {
                        "content": "echo \"\u2705 Conda installation complete.\""
                     }
                  ],
                  "flags": "-euo pipefail",
                  "function": {
                     "__cleanup__": {
                        "body": [
                           "if [[ \"$NO_CLEAN\" == false ]]; then",
                           "    [ -f \"$INSTALLER\" ] && { echo \"\ud83d\uddd1 Removing installer script at '$INSTALLER'\" >&2; rm -f \"$INSTALLER\"; }",
                           "    [ -f \"$CHECKSUM\" ] && { echo \"\ud83d\uddd1 Removing checksum file at '$CHECKSUM'\" >&2; rm -f \"$CHECKSUM\"; }",
                           "    [ -d \"$INSTALLER_DIR\" ] && [ -z \"$(ls -A \"$INSTALLER_DIR\")\" ] && {",
                           "        echo \"\ud83d\uddd1 Removing installation directory at '$INSTALLER_DIR'\" >&2",
                           "        rmdir \"$INSTALLER_DIR\"",
                           "    }",
                           "fi",
                           "find \"$CONDA_DIR\" -follow -type f -name '*.a' -delete",
                           "find \"$CONDA_DIR\" -follow -type f -name '*.pyc' -delete",
                           "if [[ \"$NO_CACHE_CLEAN\" == false ]] && [[ -f \"$CONDA_EXEC\" ]]; then",
                           "    echo \"\ud83e\uddf9 Cleaning up conda cache.\"",
                           "    \"$CONDA_EXEC\" clean --all --force-pkgs-dirs --yes",
                           "fi",
                           "if [ -n \"${LOGFILE-}\" ]; then",
                           "  echo \"\u2139\ufe0f Write logs to file '$LOGFILE'\" >&2",
                           "  mkdir -p \"$(dirname \"$LOGFILE\")\"",
                           "  cat \"$_LOGFILE_TMP\" >> \"$LOGFILE\"",
                           "  rm -f \"$_LOGFILE_TMP\"",
                           "fi"
                        ],
                        "name": "__cleanup__",
                        "summary": "Cleanup function."
                     },
                     "add_activation_to_rcfile": {
                        "body": "local conda_script=\"$CONDA_DIR/$CONDA_ACTIVATION_SCRIPT_PATH\"\nlocal mamba_script=\"$CONDA_DIR/$MAMBA_ACTIVATION_SCRIPT_PATH\"\nlines=(\n    \". '$conda_script'\"\n    \". '$mamba_script'\"\n)\nif [[ -n \"$ACTIVE_ENV\" ]]; then\n    lines+=(\"conda activate $ACTIVE_ENV\")\nfi\n\nfor path in \"${ACTIVATES[@]}\"; do\n    echo \"\u25b6\ufe0f Sourcing activation script to '$path'\"\n    [[ -f \"$path\" ]] || touch \"$path\"\n    for line in \"${lines[@]}\"; do\n        if grep -Fxq \"$line\" \"$path\"; then\n            echo \"\u23ed\ufe0f Line already exists in '$path': $line\"\n        else\n            echo \"$line\" >> \"$path\"\n            echo \"\u2139\ufe0f Appended to '$path': $line\"\n        fi\n    done\ndone\n",
                        "name": "add_activation_to_rcfile",
                        "summary": "Add conda activation to shell configuration files."
                     },
                     "download_miniforge": {
                        "body": "local installer_url\nlocal checksum_url\nif [[ \"$MINIFORGE_VERSION\" == \"latest\" ]]; then\n    installer_url=\"https://github.com/conda-forge/miniforge/releases/latest/download/${INSTALLER_FILENAME}\"\n    checksum_url=\"\"  # TODO: Find a way to get the checksum URL for the latest version.\nelse\n    installer_url=\"https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/${INSTALLER_FILENAME}\"\n    checksum_url=\"$installer_url.sha256\"\nfi\nmkdir -p \"$INSTALLER_DIR\"\nif command -v wget >/dev/null 2>&1; then\n    echo \"\ud83d\udce5 Downloading installer using wget from $installer_url\" >&2\n    wget --no-hsts --tries 3 --output-document \"$INSTALLER\" \"$installer_url\"\n    if [[ -n \"$checksum_url\" ]]; then\n        wget --no-hsts --tries 3 --output-document \"$CHECKSUM\" \"$checksum_url\"\n    fi\nelif command -v curl >/dev/null 2>&1; then\n    echo \"\ud83d\udce5 Downloading installer using curl from $installer_url\" >&2\n    curl --fail --location --retry 3 --output \"$INSTALLER\" \"$installer_url\"\n    if [[ -n \"$checksum_url\" ]]; then\n        curl --fail --location --retry 3 --output \"$CHECKSUM\" \"$checksum_url\"\n    fi\nelse\n    echo \"\u26d4 Neither wget nor curl is available.\" >&2\n    exit 1\nfi\nif [[ -n \"$checksum_url\" ]]; then\n    verify_miniforge\nfi\n",
                        "description": "This function downloads the Miniforge installer\nand its checksum file from the official GitHub repository,\nand verifies the checksum if available.\n",
                        "name": "download_miniforge",
                        "summary": "Download the Miniforge installer."
                     },
                     "install_miniforge": {
                        "body": "echo \"\ud83d\udce6 Installing Miniforge to $CONDA_DIR\"\nif [[ \"$INTERACTIVE\" == true ]]; then\n    /bin/bash \"$INSTALLER\" -p \"$CONDA_DIR\"\nelse\n    /bin/bash \"$INSTALLER\" -b -p \"$CONDA_DIR\"\nfi\n\n# Post-installation validation.\necho \"Displaying conda info:\"\n\"$CONDA_EXEC\" info\necho \"Displaying conda config:\"\n\"$CONDA_EXEC\" config --show\necho \"Displaying conda env list:\"\n\"$CONDA_EXEC\" env list\necho \"Displaying conda list:\"\n\"$CONDA_EXEC\" list --name base\n\n__cleanup__\n",
                        "name": "install_miniforge",
                        "summary": "Install Miniforge."
                     },
                     "set_executable_paths": {
                        "body": "CONDA_EXEC=\"${CONDA_DIR}/bin/conda\"\nMAMBA_EXEC=\"${CONDA_DIR}/bin/mamba\"\nif [ \"${1:-}\" != \"verify\" ]; then\n    return\nfi\nif [[ ! -f \"$CONDA_EXEC\" ]]; then\n    if command -v conda >/dev/null 2>&1; then\n        CONDA_DIR=\"$(conda info --base)\"\n        CONDA_EXEC=\"${CONDA_DIR}/bin/conda\"\n    else\n        echo \"\u26d4 Conda executable not found at '$CONDA_EXEC'.\" >&2\n        exit 1\n    fi\nfi\nif [[ ! -f \"$MAMBA_EXEC\" ]]; then\n    if command -v mamba >/dev/null 2>&1; then\n        MAMBA_EXEC=\"$(mamba info --base | tail -n 2 | head -n 1)/bin/mamba\"\n    else\n        echo \"\u26d4 Mamba executable not found at '$MAMBA_EXEC'.\" >&2\n        exit 1\n    fi\nfi\nif [[ ! -f \"$CONDA_EXEC\" ]]; then\n    echo \"\u26d4 Conda executable not found.\" >&2\n    exit 1\nfi\nif [[ ! -f \"$MAMBA_EXEC\" ]]; then\n    echo \"\u26d4 Mamba executable not found.\" >&2\n    exit 1\nfi\necho \"\ud83c\udf9b Conda executable located at '$CONDA_EXEC'.\"\necho \"\ud83c\udf9b Mamba executable located at '$MAMBA_EXEC'.\"\n",
                        "description": "This function sets the following environment variables:\n- CONDA_EXE: Path to the conda executable.\n- MAMBA_EXE: Path to the mamba executable.\n",
                        "name": "set_executable_paths",
                        "parameter": {
                           "verify": {
                              "array_delimiter": " :: ",
                              "description": "This is useful before running the post-installation steps\n(especially when the installation steps were skipped)\nto ensure that the executables are available.\n",
                              "summary": "Verify the existence of the executables.",
                              "type": "boolean"
                           }
                        },
                        "summary": "Set executable paths for conda and mamba."
                     },
                     "set_installer_filename": {
                        "body": "local installer_platform=\"$(uname)-$(uname -m)\"\nif [[ \"$MINIFORGE_VERSION\" == \"latest\" ]]; then\n    INSTALLER_FILENAME=\"${MINIFORGE_NAME}-${installer_platform}.sh\"\nelse\n    INSTALLER_FILENAME=\"${MINIFORGE_NAME}-${MINIFORGE_VERSION}-${installer_platform}.sh\"\nfi\nINSTALLER=\"${INSTALLER_DIR}/${INSTALLER_FILENAME}\"\nCHECKSUM=\"${INSTALLER}.sha256\"\n",
                        "description": "This function sets the installer filename\nbased on the Miniforge variant and version.\nIt sets the following environment variables:\n- INSTALLER_FILENAME: Name of the installer file.\n- INSTALLER: Full path to the installer file.\n- CHECKSUM: Full path to the checksum file for the installer.\n",
                        "name": "set_installer_filename",
                        "summary": "Set the installer filename."
                     },
                     "set_permission": {
                        "body": "echo \"\ud83d\udd10 Setting permissions for conda directory.\"\ngetent group \"$GROUP\" >/dev/null || groupadd -r \"$GROUP\"\nid -nG \"$USER\" | grep -qw \"$GROUP\" || usermod -a -G \"$GROUP\" \"$USER\"\nchown -R \"$USER:$GROUP\" \"$CONDA_DIR\"\nchmod -R g+r+w \"$CONDA_DIR\"\nfind \"$CONDA_DIR\" -type d -print0 | xargs -n 1 -0 chmod g+s\n",
                        "name": "set_permission",
                        "references": [
                           {
                              "title": "Conda Devcontainer Feature",
                              "url": "https://github.com/devcontainers/features/blob/8895eb3d161d28ada3a8de761a83135e811cae3d/src/conda/install.sh#L81-L115"
                           }
                        ],
                        "summary": "Set permissions for the conda installation directory."
                     },
                     "setup_environment": {
                        "body": "umask 0002\nfor env_file in \"${ENV_FILES[@]}\"; do\n    echo \"\ud83d\udce6 Installing conda environment from '$env_file'.\"\n    \"$MAMBA_EXEC\" env update --file \"$env_file\"\ndone\n\nfor env_dir in \"${ENV_DIRS[@]}\"; do\n    find \"$env_dir\" -type f \\( -name \"*.yml\" -o -name \"*.yaml\" \\) | while IFS= read -r env_file; do\n        echo \"\ud83d\udce6 Installing conda environment from '$env_file'.\"\n        \"$MAMBA_EXEC\" env update --file \"$env_file\"\n    done\ndone\n\nif [[ \"$NO_CACHE_CLEAN\" == false ]]; then\n    echo \"\ud83e\uddf9 Cleaning up conda cache.\"\n    \"$MAMBA_EXEC\" clean --all -y\nfi\n",
                        "name": "setup_environment",
                        "summary": "Setup conda environments from the specified YAML files."
                     },
                     "uninstall_miniforge": {
                        "body": "echo \"\ud83d\uddd1 Uninstalling conda (Miniforge).\"\n\"$CONDA_EXEC\" init --reverse\nrm -rf \"$(\"$CONDA_EXEC\" info --base)\"\nrm -f \"$HOME/.condarc\"\nrm -rf \"$HOME/.conda\"\nuser_home=$(getent passwd \"$USER\" | cut -d: -f6)\nrm -rf \"$user_home/.condarc\"\nrm -rf \"$user_home/.conda\"\n",
                        "name": "uninstall_miniforge",
                        "references": [
                           {
                              "title": "Miniforge uninstallation documentation",
                              "url": "https://github.com/conda-forge/miniforge?tab=readme-ov-file#uninstall"
                           },
                           {
                              "title": "Anaconda uninstallation documentation",
                              "url": "https://www.anaconda.com/docs/getting-started/miniconda/uninstall#manual-uninstall"
                           }
                        ],
                        "summary": "Uninstall Miniforge."
                     },
                     "verify_miniforge": {
                        "body": "echo \"\ud83d\udce6 Verifying installer checksum\"\nif command -v sha256sum >/dev/null 2>&1; then\n    if (cd \"$INSTALLER_DIR\" && sha256sum --check --status \"$CHECKSUM\"); then\n        echo \"\u2705 Checksum verification passed\" >&2\n    else\n        echo \"\u274c Checksum verification failed\" >&2\n        exit 1\n    fi\nelif command -v shasum >/dev/null 2>&1; then\n    if (cd \"$INSTALLER_DIR\" && shasum --algorithm 256 --check --status \"$CHECKSUM\"); then\n        echo \"\u2705 Checksum verification passed\" >&2\n    else\n        echo \"\u274c Checksum verification failed\" >&2\n        exit 1\n    fi\nelse\n    echo \"\u26d4 Neither sha256sum nor shasum is available.\" >&2\n    exit 1\nfi\n",
                        "description": "This function verifies the checksum of the Miniforge installer\nusing the SHA256 checksum file.\n",
                        "name": "verify_miniforge",
                        "summary": "Verify the Miniforge installer checksum."
                     }
                  },
                  "import": [
                     "exit_if_not_root",
                     "get_script_dir"
                  ],
                  "interpreter": "usr/bin/env bash",
                  "parameter": {
                     "activates": {
                        "array_delimiter": " :: ",
                        "default": [],
                        "examples": [
                           "/etc/skel/.bashrc",
                           "/etc/bash.bashrc",
                           "/etc/zsh/zshrc",
                           "~/.bashrc",
                           "~/.zshrc"
                        ],
                        "summary": "Paths to shell configuration files to append conda initialization to.",
                        "type": "array"
                     },
                     "active_env": {
                        "array_delimiter": " :: ",
                        "default": "base",
                        "description": "This adds `conda activate <env>` to the shell configuration files\nspecified in the `activates` parameter,\nand thus only has an effect if the `activates` parameter is set.\n",
                        "summary": "Name of a conda environment to activate.",
                        "type": "string"
                     },
                     "conda_activation_script_path": {
                        "array_delimiter": " :: ",
                        "default": "etc/profile.d/conda.sh",
                        "description": "The path is relative to the conda installation directory.\nThis is a constant and does not need to be changed\nunless Miniforge changes this path in the future.\n",
                        "summary": "Relative path to the conda activation script.",
                        "type": "string"
                     },
                     "conda_dir": {
                        "array_delimiter": " :: ",
                        "default": "/opt/conda",
                        "description": "This is the directory where conda will be installed.\nIt corresponds to the `CONDA_DIR` environment variable.\n",
                        "summary": "Path to the conda installation directory.",
                        "type": "string"
                     },
                     "debug": {
                        "summary": "Enable debug output.",
                        "type": "boolean"
                     },
                     "download": {
                        "array_delimiter": " :: ",
                        "summary": "Download the Miniforge installer.",
                        "type": "boolean"
                     },
                     "env_dirs": {
                        "array_delimiter": " :: ",
                        "default": [],
                        "summary": "Paths to directories containing conda environment files to install.",
                        "type": "array",
                        "validation": {
                           "path_existence": {
                              "must_exist": true,
                              "type": "dir"
                           }
                        }
                     },
                     "env_files": {
                        "array_delimiter": " :: ",
                        "default": [],
                        "summary": "Paths to conda environment files to install.",
                        "type": "array",
                        "validation": {
                           "path_existence": {
                              "must_exist": true,
                              "type": "file"
                           }
                        }
                     },
                     "group": {
                        "array_delimiter": " :: ",
                        "default": "conda",
                        "summary": "Name of a user group to give access to conda.",
                        "type": "string"
                     },
                     "install": {
                        "array_delimiter": " :: ",
                        "description": "Raises an error if conda is already installed.\n",
                        "summary": "Install conda and mamba using the Miniforge installer.",
                        "type": "boolean"
                     },
                     "installer_dir": {
                        "array_delimiter": " :: ",
                        "default": "/tmp/miniforge-installer",
                        "description": "This is the directory where the Miniforge installer will be downloaded.\n",
                        "summary": "Path to a directory to download the installer to.",
                        "type": "string"
                     },
                     "interactive": {
                        "array_delimiter": " :: ",
                        "description": "This allows the installer to prompt the user.\nThe default is to run the installer in non-interactive mode.\n",
                        "summary": "Run the installer in interactive mode.",
                        "type": "boolean"
                     },
                     "logfile": {
                        "default": "",
                        "summary": "Log all output (stdout + stderr) to this file in addition to console.",
                        "type": "string"
                     },
                     "mamba_activation_script_path": {
                        "array_delimiter": " :: ",
                        "default": "etc/profile.d/mamba.sh",
                        "description": "The path is relative to the conda installation directory.\nThis is a constant and does not need to be changed\nunless Miniforge changes this path in the future.\n",
                        "summary": "Relative path to the mamba activation script.",
                        "type": "string"
                     },
                     "miniforge_name": {
                        "array_delimiter": " :: ",
                        "default": "Miniforge3",
                        "summary": "Name of the Miniforge variant to install.",
                        "type": "string"
                     },
                     "miniforge_version": {
                        "array_delimiter": " :: ",
                        "description": "If not specified, the latest version will be installed.\n",
                        "summary": "Version of the Miniforge variant to install.",
                        "type": "string"
                     },
                     "no_cache_clean": {
                        "array_delimiter": " :: ",
                        "description": "This skips 'conda clean' commands after installation.\nIt is useful for local installations.\n",
                        "summary": "Skip cleaning the conda cache.",
                        "type": "boolean"
                     },
                     "no_clean": {
                        "array_delimiter": " :: ",
                        "summary": "Skip removing installer artifacts after installation.",
                        "type": "boolean"
                     },
                     "reinstall": {
                        "array_delimiter": " :: ",
                        "description": "Same as 'install', but uninstall first if conda is already installed.\n",
                        "summary": "Reinstall conda and mamba using the Miniforge installer.",
                        "type": "boolean"
                     },
                     "set_permission": {
                        "array_delimiter": " :: ",
                        "description": "This is done by adding the '--user' to the conda '--group'\nand setting the group ownership of the conda directory.\".\n",
                        "summary": "Set permissions for the conda installation directory.",
                        "type": "boolean"
                     },
                     "update_base": {
                        "array_delimiter": " :: ",
                        "description": "This is done by running `conda update --all`.\nThis is not recommended for production environments.\n",
                        "summary": "Update the base conda environment.",
                        "type": "boolean"
                     },
                     "user": {
                        "array_delimiter": " :: ",
                        "default": "",
                        "description": "This user must already exist.\nIf not specified, it defaults to the real user running this script.\n",
                        "summary": "Name of a user to add to the conda group.",
                        "type": "string"
                     }
                  }
               },
               "content_setting": {
                  "prefix": "",
                  "separator": "\n",
                  "suffix": ""
               },
               "description": "Install Miniforge from the official GitHub repository.\n",
               "file_setting": {
                  "eof_newline": true,
                  "json": {
                     "end_of_file_newline": true,
                     "indent": 3,
                     "sort_keys": true
                  },
                  "md": {
                     "heading_number": false,
                     "target": "github"
                  },
                  "sort_keys": true,
                  "yaml": {
                     "block_string": true,
                     "end_of_file_newline": true,
                     "mapping_indent": 2,
                     "remove_top_level_indent": true,
                     "sequence_indent": 4,
                     "sequence_indent_offset": 2,
                     "sort_keys": true
                  }
               },
               "name": "Miniforge Installation Devcontainer Feature Installer",
               "path": ".devcontainer/feature/miniforge/install.sh",
               "references": [
                  {
                     "title": "Miniforge Docker image",
                     "url": "https://github.com/conda-forge/miniforge-images/blob/master/ubuntu/Dockerfile"
                  },
                  {
                     "title": "Miniforge repository README",
                     "url": "https://github.com/conda-forge/miniforge?tab=readme-ov-file#install"
                  },
                  {
                     "title": "Miniconda Devcontainer image",
                     "url": "https://github.com/devcontainers/images/tree/main/src/miniconda"
                  },
                  {
                     "title": "Miniforge Devcontainer Feature",
                     "url": "https://github.com/rocker-org/devcontainer-features/tree/main/src/miniforge"
                  },
                  {
                     "title": "Devcontainers conda feature",
                     "url": "https://github.com/devcontainers/features/tree/main/src/conda"
                  }
               ],
               "relpath": "install.sh",
               "status": "active",
               "summary": "Install Miniforge.",
               "type": "shell_exec",
               "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/feature/miniforge/install.sh"
            },
            "metadata": {
               "content": {
                  "description": "Install Miniforge in the development container.",
                  "id": "miniforge",
                  "name": "Miniforge Installation",
                  "options": {
                     "activates": {
                        "default": "",
                        "description": "Paths to shell configuration files to append conda initialization to.",
                        "type": "string"
                     },
                     "active_env": {
                        "default": "base",
                        "description": "Name of a conda environment to activate.\nThis adds `conda activate <env>` to the shell configuration files\nspecified in the `activates` parameter,\nand thus only has an effect if the `activates` parameter is set.\n",
                        "type": "string"
                     },
                     "conda_activation_script_path": {
                        "default": "etc/profile.d/conda.sh",
                        "description": "Relative path to the conda activation script.\nThe path is relative to the conda installation directory.\nThis is a constant and does not need to be changed\nunless Miniforge changes this path in the future.\n",
                        "type": "string"
                     },
                     "conda_dir": {
                        "default": "/opt/conda",
                        "description": "Path to the conda installation directory.\nThis is the directory where conda will be installed.\nIt corresponds to the `CONDA_DIR` environment variable.\n",
                        "type": "string"
                     },
                     "debug": {
                        "default": false,
                        "description": "Enable debug output.",
                        "type": "boolean"
                     },
                     "download": {
                        "default": false,
                        "description": "Download the Miniforge installer.",
                        "type": "boolean"
                     },
                     "env_dirs": {
                        "default": "",
                        "description": "Paths to directories containing conda environment files to install.",
                        "type": "string"
                     },
                     "env_files": {
                        "default": "",
                        "description": "Paths to conda environment files to install.",
                        "type": "string"
                     },
                     "group": {
                        "default": "conda",
                        "description": "Name of a user group to give access to conda.",
                        "type": "string"
                     },
                     "install": {
                        "default": false,
                        "description": "Install conda and mamba using the Miniforge installer.\nRaises an error if conda is already installed.\n",
                        "type": "boolean"
                     },
                     "installer_dir": {
                        "default": "/tmp/miniforge-installer",
                        "description": "Path to a directory to download the installer to.\nThis is the directory where the Miniforge installer will be downloaded.\n",
                        "type": "string"
                     },
                     "interactive": {
                        "default": false,
                        "description": "Run the installer in interactive mode.\nThis allows the installer to prompt the user.\nThe default is to run the installer in non-interactive mode.\n",
                        "type": "boolean"
                     },
                     "logfile": {
                        "default": "",
                        "description": "Log all output (stdout + stderr) to this file in addition to console.",
                        "type": "string"
                     },
                     "mamba_activation_script_path": {
                        "default": "etc/profile.d/mamba.sh",
                        "description": "Relative path to the mamba activation script.\nThe path is relative to the conda installation directory.\nThis is a constant and does not need to be changed\nunless Miniforge changes this path in the future.\n",
                        "type": "string"
                     },
                     "miniforge_name": {
                        "default": "Miniforge3",
                        "description": "Name of the Miniforge variant to install.",
                        "type": "string"
                     },
                     "miniforge_version": {
                        "default": "",
                        "description": "Version of the Miniforge variant to install.\nIf not specified, the latest version will be installed.\n",
                        "type": "string"
                     },
                     "no_cache_clean": {
                        "default": false,
                        "description": "Skip cleaning the conda cache.\nThis skips 'conda clean' commands after installation.\nIt is useful for local installations.\n",
                        "type": "boolean"
                     },
                     "no_clean": {
                        "default": false,
                        "description": "Skip removing installer artifacts after installation.",
                        "type": "boolean"
                     },
                     "reinstall": {
                        "default": false,
                        "description": "Reinstall conda and mamba using the Miniforge installer.\nSame as 'install', but uninstall first if conda is already installed.\n",
                        "type": "boolean"
                     },
                     "set_permission": {
                        "default": false,
                        "description": "Set permissions for the conda installation directory.\nThis is done by adding the '--user' to the conda '--group'\nand setting the group ownership of the conda directory.\".\n",
                        "type": "boolean"
                     },
                     "update_base": {
                        "default": false,
                        "description": "Update the base conda environment.\nThis is done by running `conda update --all`.\nThis is not recommended for production environments.\n",
                        "type": "boolean"
                     },
                     "user": {
                        "default": "",
                        "description": "Name of a user to add to the conda group.\nThis user must already exist.\nIf not specified, it defaults to the real user running this script.\n",
                        "type": "string"
                     }
                  },
                  "version": "0.1.0"
               },
               "content_setting": {
                  "prefix": "",
                  "separator": "\n",
                  "suffix": ""
               },
               "file_setting": {
                  "eof_newline": true,
                  "json": {
                     "end_of_file_newline": true,
                     "indent": 3,
                     "sort_keys": true
                  },
                  "md": {
                     "heading_number": false,
                     "target": "github"
                  },
                  "sort_keys": true,
                  "yaml": {
                     "block_string": true,
                     "end_of_file_newline": true,
                     "mapping_indent": 2,
                     "remove_top_level_indent": true,
                     "sequence_indent": 4,
                     "sequence_indent_offset": 2,
                     "sort_keys": true
                  }
               },
               "name": "Miniforge Installation Devcontainer Feature Metadata",
               "path": ".devcontainer/feature/miniforge/devcontainer-feature.json",
               "relpath": "devcontainer-feature.json",
               "status": "active",
               "summary": "`devcontainer-feature.json` file for the feature.",
               "type": "json",
               "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/feature/miniforge/devcontainer-feature.json"
            },
            "path": ".devcontainer/feature/miniforge",
            "relpath": "feature/miniforge"
         },
         "oh-my-zsh": {
            "install": {
               "content": {
                  "body": [
                     {
                        "content": "umask g-w,o-w",
                        "summary": "Set permissions."
                     },
                     {
                        "content": "# https://github.com/ohmyzsh/ohmyzsh/?tab=readme-ov-file#manual-installation\ngit_clone --url \"https://github.com/ohmyzsh/ohmyzsh\" --dir \"$INSTALL_DIR\"\n",
                        "summary": "Install Oh My Zsh."
                     },
                     {
                        "content": "mkdir -p \"$FONT_DIR\"\nBASE_URL=\"https://github.com/romkatv/powerlevel10k-media/raw/master\"\n# Font files to download\nFONT_FILES=\"\nMesloLGS%20NF%20Regular.ttf\nMesloLGS%20NF%20Bold.ttf\nMesloLGS%20NF%20Italic.ttf\nMesloLGS%20NF%20Bold%20Italic.ttf\n\"\necho \"Installing MesloLGS Nerd Fonts to $FONT_DIR...\"\nfor FONT in $FONT_FILES; do\n  # Decode filename for local file\n  LOCAL_NAME=$(printf '%b' \"${FONT//%/\\\\x}\")\n  echo \"Downloading $LOCAL_NAME...\"\n  curl -fsSL \"$BASE_URL/$FONT\" -o \"$FONT_DIR/$LOCAL_NAME\"\ndone\n# Set proper permissions\nchmod 644 \"$FONT_DIR\"/*.ttf\necho \"Fonts installed.\"\n",
                        "references": [
                           {
                              "title": "Powelevel10k docs",
                              "url": "https://github.com/romkatv/powerlevel10k?tab=readme-ov-file#meslo-nerd-font-patched-for-powerlevel10k"
                           },
                           {
                              "title": "Powelevel10k issue",
                              "url": "https://github.com/romkatv/powerlevel10k/issues/671"
                           },
                           {
                              "title": "Powerlevel10k README",
                              "url": "https://github.com/romkatv/powerlevel10k?tab=readme-ov-file#fonts"
                           }
                        ],
                        "summary": "Download fonts."
                     },
                     {
                        "content": "git_clone \\\n  --url \"https://github.com/romkatv/powerlevel10k\"\n  --dir \"$ZSH_CUSTOM_DIR/themes/powerlevel10k\"\n",
                        "references": [
                           {
                              "title": "Powerlevel10k theme",
                              "url": "https://github.com/romkatv/powerlevel10k"
                           }
                        ],
                        "summary": "Install Powerlevel10k theme."
                     },
                     {
                        "content": "git_clone \\\n  --url \"https://github.com/zsh-users/zsh-syntax-highlighting\"\n  --dir \"$ZSH_CUSTOM_DIR/plugins/zsh-syntax-highlighting\"\n",
                        "references": [
                           {
                              "title": "Syntax highlighting plugin installation docs",
                              "url": "https://github.com/zsh-users/zsh-syntax-highlighting/blob/master/INSTALL.md#oh-my-zsh"
                           }
                        ],
                        "summary": "Install syntax highlighting plugin."
                     }
                  ],
                  "flags": "-euo pipefail",
                  "import": [
                     "git_clone"
                  ],
                  "interpreter": "usr/bin/env bash",
                  "parameter": {
                     "debug": {
                        "summary": "Enable debug output.",
                        "type": "boolean"
                     },
                     "font_dir": {
                        "array_delimiter": " :: ",
                        "default": "/usr/share/fonts/MesloLGS",
                        "summary": "Path to the directory where fonts will be downloaded.",
                        "type": "string"
                     },
                     "install_dir": {
                        "array_delimiter": " :: ",
                        "default": "/usr/local/share/oh-my-zsh",
                        "description": "This is the directory where Oh My Zsh will be installed.\nIt corresponds to the [`ZSH`](https://github.com/ohmyzsh/ohmyzsh/wiki/Settings#zsh_custom)\nconfiguration variable in Oh My Zsh.\n",
                        "summary": "Path to the Oh My Zsh installation directory.",
                        "type": "string"
                     },
                     "logfile": {
                        "default": "",
                        "summary": "Log all output (stdout + stderr) to this file in addition to console.",
                        "type": "string"
                     },
                     "zsh_custom_dir": {
                        "array_delimiter": " :: ",
                        "default": "/usr/local/share/oh-my-zsh/custom",
                        "description": "This corresponds to the [`ZSH_CUSTOM`](https://github.com/ohmyzsh/ohmyzsh/wiki/Settings#zsh_custom)\nconfiguration variable in Oh My Zsh.\n",
                        "summary": "Path to the Oh My Zsh custom directory.",
                        "type": "string"
                     }
                  }
               },
               "content_setting": {
                  "prefix": "",
                  "separator": "\n",
                  "suffix": ""
               },
               "description": "Install [Oh My Zsh](https://github.com/ohmyzsh/ohmyzsh)\nfrom the official GitHub repository.\n[Zsh](https://www.zsh.org) must be installed on the system\n(cf [Oh My Zsh docs](https://github.com/ohmyzsh/ohmyzsh/wiki/Installing-ZSH)).\n",
               "file_setting": {
                  "eof_newline": true,
                  "json": {
                     "end_of_file_newline": true,
                     "indent": 3,
                     "sort_keys": true
                  },
                  "md": {
                     "heading_number": false,
                     "target": "github"
                  },
                  "sort_keys": true,
                  "yaml": {
                     "block_string": true,
                     "end_of_file_newline": true,
                     "mapping_indent": 2,
                     "remove_top_level_indent": true,
                     "sequence_indent": 4,
                     "sequence_indent_offset": 2,
                     "sort_keys": true
                  }
               },
               "name": "Oh My Zsh Installation Devcontainer Feature Installer",
               "path": ".devcontainer/feature/oh-my-zsh/install.sh",
               "references": [
                  {
                     "title": "Oh My Zsh installation guide",
                     "url": "https://github.com/ohmyzsh/ohmyzsh?tab=readme-ov-file#manual-installation"
                  },
                  {
                     "title": "Oh My Zsh installation script",
                     "url": "https://github.com/ohmyzsh/ohmyzsh/blob/master/tools/install.sh"
                  },
                  {
                     "title": "Powerlevel10k theme",
                     "url": "https://github.com/romkatv/powerlevel10k?tab=readme-ov-file#installation"
                  }
               ],
               "relpath": "install.sh",
               "status": "active",
               "summary": "Install Oh My Zsh.",
               "type": "shell_exec",
               "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/feature/oh-my-zsh/install.sh"
            },
            "metadata": {
               "content": {
                  "description": "Install Oh My Zsh in the development container.",
                  "id": "oh-my-zsh",
                  "name": "Oh My Zsh Installation",
                  "options": {
                     "debug": {
                        "default": false,
                        "description": "Enable debug output.",
                        "type": "boolean"
                     },
                     "font_dir": {
                        "default": "/usr/share/fonts/MesloLGS",
                        "description": "Path to the directory where fonts will be downloaded.",
                        "type": "string"
                     },
                     "install_dir": {
                        "default": "/usr/local/share/oh-my-zsh",
                        "description": "Path to the Oh My Zsh installation directory.\nThis is the directory where Oh My Zsh will be installed.\nIt corresponds to the [`ZSH`](https://github.com/ohmyzsh/ohmyzsh/wiki/Settings#zsh_custom)\nconfiguration variable in Oh My Zsh.\n",
                        "type": "string"
                     },
                     "logfile": {
                        "default": "",
                        "description": "Log all output (stdout + stderr) to this file in addition to console.",
                        "type": "string"
                     },
                     "zsh_custom_dir": {
                        "default": "/usr/local/share/oh-my-zsh/custom",
                        "description": "Path to the Oh My Zsh custom directory.\nThis corresponds to the [`ZSH_CUSTOM`](https://github.com/ohmyzsh/ohmyzsh/wiki/Settings#zsh_custom)\nconfiguration variable in Oh My Zsh.\n",
                        "type": "string"
                     }
                  },
                  "version": "0.1.0"
               },
               "content_setting": {
                  "prefix": "",
                  "separator": "\n",
                  "suffix": ""
               },
               "file_setting": {
                  "eof_newline": true,
                  "json": {
                     "end_of_file_newline": true,
                     "indent": 3,
                     "sort_keys": true
                  },
                  "md": {
                     "heading_number": false,
                     "target": "github"
                  },
                  "sort_keys": true,
                  "yaml": {
                     "block_string": true,
                     "end_of_file_newline": true,
                     "mapping_indent": 2,
                     "remove_top_level_indent": true,
                     "sequence_indent": 4,
                     "sequence_indent_offset": 2,
                     "sort_keys": true
                  }
               },
               "name": "Oh My Zsh Installation Devcontainer Feature Metadata",
               "path": ".devcontainer/feature/oh-my-zsh/devcontainer-feature.json",
               "relpath": "devcontainer-feature.json",
               "status": "active",
               "summary": "`devcontainer-feature.json` file for the feature.",
               "type": "json",
               "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/feature/oh-my-zsh/devcontainer-feature.json"
            },
            "path": ".devcontainer/feature/oh-my-zsh",
            "relpath": "feature/oh-my-zsh"
         },
         "pixi": {
            "install": {
               "content": {
                  "body": [
                     {
                        "content": "pixi_bin=\"${INSTALL_PATH}/pixi\"\ncurl \\\n  --compressed \\\n  -fsSLo \"$pixi_bin\" \\\n  \"https://github.com/prefix-dev/pixi/releases/download/v${VERSION}/pixi-$(uname -m)-unknown-linux-musl\"\nchmod +x \"$pixi_bin\"\npixi info\n"
                     }
                  ],
                  "flags": "-euo pipefail",
                  "interpreter": "usr/bin/env bash",
                  "parameter": {
                     "debug": {
                        "summary": "Enable debug output.",
                        "type": "boolean"
                     },
                     "install_path": {
                        "array_delimiter": " :: ",
                        "default": "/usr/local/bin",
                        "summary": "Path to a bin directory to install the Pixi binary.\n",
                        "type": "string"
                     },
                     "logfile": {
                        "default": "",
                        "summary": "Log all output (stdout + stderr) to this file in addition to console.",
                        "type": "string"
                     },
                     "version": {
                        "array_delimiter": " :: ",
                        "default": "0.46.0",
                        "summary": "Version of Pixi to install.",
                        "type": "string"
                     }
                  }
               },
               "content_setting": {
                  "prefix": "",
                  "separator": "\n",
                  "suffix": ""
               },
               "file_setting": {
                  "eof_newline": true,
                  "json": {
                     "end_of_file_newline": true,
                     "indent": 3,
                     "sort_keys": true
                  },
                  "md": {
                     "heading_number": false,
                     "target": "github"
                  },
                  "sort_keys": true,
                  "yaml": {
                     "block_string": true,
                     "end_of_file_newline": true,
                     "mapping_indent": 2,
                     "remove_top_level_indent": true,
                     "sequence_indent": 4,
                     "sequence_indent_offset": 2,
                     "sort_keys": true
                  }
               },
               "name": "Pixi Installation Devcontainer Feature Installer",
               "path": ".devcontainer/feature/pixi/install.sh",
               "references": [
                  {
                     "title": "Pixi docs",
                     "url": "https://pixi.sh/latest/integration/editor/vscode/#devcontainer-extension"
                  },
                  {
                     "title": "Pixi Docker image",
                     "url": "https://github.com/prefix-dev/pixi-docker"
                  }
               ],
               "relpath": "install.sh",
               "status": "active",
               "summary": "Installation script for the feature.",
               "type": "shell_exec",
               "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/feature/pixi/install.sh"
            },
            "metadata": {
               "content": {
                  "description": "Install Pixi in the development container and activate it.",
                  "id": "pixi",
                  "mounts": [
                     {
                        "source": "${localWorkspaceFolderBasename}-pixi",
                        "target": "${containerWorkspaceFolder}/.pixi",
                        "type": "volume"
                     }
                  ],
                  "name": "Pixi Installation",
                  "options": {
                     "debug": {
                        "default": false,
                        "description": "Enable debug output.",
                        "type": "boolean"
                     },
                     "install_path": {
                        "default": "/usr/local/bin",
                        "description": "Path to a bin directory to install the Pixi binary.\n",
                        "type": "string"
                     },
                     "logfile": {
                        "default": "",
                        "description": "Log all output (stdout + stderr) to this file in addition to console.",
                        "type": "string"
                     },
                     "version": {
                        "default": "0.46.0",
                        "description": "Version of Pixi to install.",
                        "type": "string"
                     }
                  },
                  "postCreateCommand": {
                     "pixi_chown": "sudo chown $(whoami) .pixi"
                  },
                  "version": "0.46.0"
               },
               "content_setting": {
                  "prefix": "",
                  "separator": "\n",
                  "suffix": ""
               },
               "file_setting": {
                  "eof_newline": true,
                  "json": {
                     "end_of_file_newline": true,
                     "indent": 3,
                     "sort_keys": true
                  },
                  "md": {
                     "heading_number": false,
                     "target": "github"
                  },
                  "sort_keys": true,
                  "yaml": {
                     "block_string": true,
                     "end_of_file_newline": true,
                     "mapping_indent": 2,
                     "remove_top_level_indent": true,
                     "sequence_indent": 4,
                     "sequence_indent_offset": 2,
                     "sort_keys": true
                  }
               },
               "name": "Pixi Installation Devcontainer Feature Metadata",
               "path": ".devcontainer/feature/pixi/devcontainer-feature.json",
               "relpath": "devcontainer-feature.json",
               "status": "active",
               "summary": "`devcontainer-feature.json` file for the feature.",
               "type": "json",
               "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/feature/pixi/devcontainer-feature.json"
            },
            "path": ".devcontainer/feature/pixi",
            "relpath": "feature/pixi"
         },
         "syspkg": {
            "install": {
               "content": {
                  "body": [
                     {
                        "content": "exit_if_not_root"
                     },
                     {
                        "content": "if [[ -z \"$APT\" && -z \"$APK\" && -z \"$DNF\" && -z \"$MICRODNF\" && -z \"$YUM\" ]]; then\n    echo \"\u26d4 No package list file provided.\" >&2\n    exit 1\nfi\n"
                     },
                     {
                        "content": "if type apt-get > /dev/null 2>&1; then\n    echo \"\ud83d\udee0\ufe0f  Using APT package manager.\"\n    PKG_FILE=\"$APT\"\n    PKG_MNGR=\"apt-get\"\n    UPDATE=($PKG_MNGR update -y)\n    INSTALL=($PKG_MNGR -y install --no-install-recommends)\n    CLEAN=(clean_apt)\nelif type apk > /dev/null 2>&1; then\n    echo \"\ud83d\udee0\ufe0f  Using APK package manager.\"\n    PKG_FILE=\"$APK\"\n    PKG_MNGR=\"apk\"\n    UPDATE=($PKG_MNGR update)\n    INSTALL=($PKG_MNGR add --no-cache)\n    CLEAN=(clean_apk)\nelif type microdnf > /dev/null 2>&1; then\n    echo \"\ud83d\udee0\ufe0f  Using MicroDNF package manager.\"\n    PKG_FILE=\"$MICRODNF\"\n    PKG_MNGR=microdnf\n    UPDATE=()\n    INSTALL=($PKG_MNGR -y install --refresh --best --nodes --noplugins --setopt=install_weak_deps=0)\n    CLEAN=(clean_microdnf)\nelif type dnf > /dev/null 2>&1; then\n    echo \"\ud83d\udee0\ufe0f  Using DNF package manager.\"\n    PKG_FILE=\"$DNF\"\n    PKG_MNGR=dnf\n    UPDATE=($PKG_MNGR check-update)\n    INSTALL=($PKG_MNGR -y install)\n    CLEAN=(clean_dnf)\nelif type yum > /dev/null 2>&1; then\n    echo \"\ud83d\udee0\ufe0f  Using YUM package manager.\"\n    PKG_FILE=\"$YUM\"\n    PKG_MNGR=yum\n    UPDATE=\"$PKG_MNGR check-update\"\n    INSTALL=($PKG_MNGR -y install)\n    CLEAN=(clean_yum)\nelse\n    echo \"(Error) Unable to find a supported package manager.\"\n    exit 1\nfi\n",
                        "summary": "Set package manager."
                     },
                     {
                        "content": "mapfile -t PACKAGES < <(grep -Ev '^\\s*(#|$)' \"$PKG_FILE\")\nif [[ ${#PACKAGES[@]} -eq 0 ]]; then\n    echo \"\u26d4 No packages found in file '$PKG_FILE'.\" >&2\n    exit 1\nfi\n",
                        "summary": "Read the package list file and filter out comments and empty lines."
                     },
                     {
                        "content": "if [[ \"$INTERACTIVE\" == false ]]; then\n    echo \"\ud83c\udd97 Setting APT to non-interactive mode.\"\n    export DEBIAN_FRONTEND=noninteractive\nfi\n",
                        "summary": "Set interactivity."
                     },
                     {
                        "content": "ADDED_REPOS=()\nif [[ -n \"$APT_REPOS\" ]]; then\n    if [[ ! -f \"$APT_REPOS\" ]]; then\n        echo \"\u26d4 Repo file '$APT_REPOS' does not exist.\" >&2\n        exit 1\n    fi\n    echo \"\ud83d\uddc3 Adding APT repositories from '$APT_REPOS'.\"\n    while IFS= read -r line; do\n        [[ -z \"${line:-}\" || \"${line}\" =~ ^[[:space:]]*# ]] && continue\n        echo \"\ud83d\udce6 Adding repository: $line\"\n        eval \"add-apt-repository --yes $line\"\n        ADDED_REPOS+=(\"$line\")\n    done < \"$APT_REPOS\"\nfi\n",
                        "summary": "Add APT repositories."
                     },
                     {
                        "content": "if [[ \"$NO_UPDATE\" == false ]]; then\n    echo \"\ud83d\udd04 Updating package lists.\"\n    \"${UPDATE[@]}\"\n    if [[ $? -ne 0 ]]; then\n        echo \"\u26a0\ufe0f  Failed to update package lists.\" >&2\n        exit 1\n    fi\nfi\n",
                        "summary": "Update package lists."
                     },
                     {
                        "content": "install \"${PACKAGES[@]}\"",
                        "summary": "Install packages."
                     },
                     {
                        "content": "if [[ -n \"$APT_REPOS\" && \"$KEEP_REPOS\" == false ]]; then\n    echo \"\ud83d\uddd1\ufe0f  Removing added repositories...\"\n    for repo_args in \"${ADDED_REPOS[@]}\"; do\n        echo \"\u274c Removing repository: $repo_args\"\n        eval \"add-apt-repository --yes --remove $repo_args\" || echo \"\u26a0\ufe0f  Failed to remove repo: $repo_args\" >&2\n    done\nfi\n",
                        "summary": "Clean up repositories."
                     },
                     {
                        "content": "if [[ \"$NO_CLEAN\" == false ]]; then\n    echo \"\ud83e\uddf9 Cleaning up.\"\n    \"${CLEAN[@]}\"\nfi\n",
                        "summary": "Clean up package manager cache."
                     },
                     {
                        "content": "echo \"\u2705 Package installation complete.\""
                     }
                  ],
                  "flags": "-euo pipefail",
                  "function": {
                     "clean_apk": {
                        "body": "rm -rf /var/cache/apk/*\n",
                        "description": "Remove the APK cache directory to free up space.\n",
                        "name": "clean_apk",
                        "summary": "Clean APK cache."
                     },
                     "clean_apt": {
                        "body": "if ! apt-get dist-clean; then\n    echo \"\u26a0\ufe0f  'apt-get dist-clean' failed \u2014 falling back to 'apt-get clean'.\"\n    apt-get clean\n    rm -rf /var/lib/apt/lists/*\nfi\n",
                        "description": "Starting from APT 2.7.8, the `apt-get` command accepts the `dist-clean` option,\nwhich removes list files automatically instead of \"rm -rf /var/lib/apt/lists/*\".\n",
                        "name": "clean_apt",
                        "references": [
                           {
                              "title": "APT 2.7.8 release notes",
                              "url": "https://tracker.debian.org/news/1492892/accepted-apt-278-source-into-unstable/"
                           },
                           {
                              "title": "Buildpack-deps PR",
                              "url": "https://github.com/docker-library/buildpack-deps/pull/157/files"
                           }
                        ],
                        "summary": "Clean APT cache."
                     },
                     "clean_dnf": {
                        "body": "dnf clean all\nrm -rf /var/cache/dnf/*\n",
                        "description": "Remove the DNF cache directory to free up space.\n",
                        "name": "clean_dnf",
                        "summary": "Clean DNF cache."
                     },
                     "clean_microdnf": {
                        "body": "microdnf clean all\nrm -rf /var/cache/dnf/*\n",
                        "description": "Remove the MicroDNF cache directory to free up space.\n",
                        "name": "clean_microdnf",
                        "summary": "Clean MicroDNF cache."
                     },
                     "clean_yum": {
                        "body": "yum clean all\nrm -rf /var/cache/yum/*\n",
                        "description": "Remove the YUM cache directory to free up space.\n",
                        "name": "clean_yum",
                        "summary": "Clean YUM cache."
                     },
                     "install": {
                        "body": "if [ ${PKG_MNGR} = \"apt-get\" ]; then\n    if dpkg -s \"$@\" > /dev/null 2>&1; then\n        echo \"Packages already installed: $@\"\n        return 0\n    fi\nelif [ ${INSTALL_CMD} = \"dnf\" ] || [ ${INSTALL_CMD} = \"yum\" ]; then\n    _num_pkgs=$(echo \"$@\" | tr ' ' \\\\012 | wc -l)\n    _num_installed=$(${INSTALL_CMD} -C list installed \"$@\" | sed '1,/^Installed/d' | wc -l)\n    if [ ${_num_pkgs} == ${_num_installed} ]; then\n        echo \"Packages already installed: $@\"\n        return 0\n    fi\nfi\necho \"\ud83d\udcf2 Installing packages:\"\nprintf '  - %s\\n' \"${PACKAGES[@]}\"\n\"${INSTALL[@]}\" \"$@\"\n",
                        "name": "install",
                        "references": [
                           {
                              "title": "Git Devcontainer Feature",
                              "url": "https://github.com/devcontainers/features/blob/6654579de4c31cd9f9f9e19e873521f502403929/src/git/install.sh"
                           }
                        ],
                        "summary": "Install packages using the appropriate package manager."
                     }
                  },
                  "import": [
                     "exit_if_not_root"
                  ],
                  "interpreter": "usr/bin/env bash",
                  "parameter": {
                     "apk": {
                        "array_delimiter": " :: ",
                        "default": "",
                        "description": "Path to a file containing newline-separated\npackage specifications for apk.\n",
                        "summary": "APK packages to install.",
                        "type": "string",
                        "validation": {
                           "path_existence": {
                              "must_exist": true,
                              "type": "file"
                           }
                        }
                     },
                     "apt": {
                        "array_delimiter": " :: ",
                        "default": "",
                        "description": "Path to a file containing newline-separated\npackage specifications for apt-get.\n",
                        "summary": "APT packages to install.",
                        "type": "string",
                        "validation": {
                           "path_existence": {
                              "must_exist": true,
                              "type": "file"
                           }
                        }
                     },
                     "apt_repos": {
                        "array_delimiter": " :: ",
                        "default": "",
                        "description": "Path to file containing newline-separated arguments\nto pass to 'add-apt-repository', one set per line.\n",
                        "summary": "APT repositories to add.",
                        "type": "string",
                        "validation": {
                           "path_existence": {
                              "must_exist": true,
                              "type": "file"
                           }
                        }
                     },
                     "debug": {
                        "summary": "Enable debug output.",
                        "type": "boolean"
                     },
                     "dnf": {
                        "array_delimiter": " :: ",
                        "default": "",
                        "description": "Path to a file containing newline-separated\npackage specifications for dnf.\n",
                        "summary": "DNF packages to install.",
                        "type": "string",
                        "validation": {
                           "path_existence": {
                              "must_exist": true,
                              "type": "file"
                           }
                        }
                     },
                     "interactive": {
                        "array_delimiter": " :: ",
                        "description": "By default, the installation is non-interactive.\nThis option forces an interactive installation.\n",
                        "summary": "Start an interactive installation.",
                        "type": "boolean"
                     },
                     "keep_repos": {
                        "array_delimiter": " :: ",
                        "description": "Keep adde repositories after script ends.\nBy default, they are removed automatically.\n",
                        "summary": "Keep APT repositories after installation.",
                        "type": "boolean"
                     },
                     "logfile": {
                        "default": "",
                        "summary": "Log all output (stdout + stderr) to this file in addition to console.",
                        "type": "string"
                     },
                     "microdnf": {
                        "array_delimiter": " :: ",
                        "default": "",
                        "description": "Path to a file containing newline-separated\npackage specifications for microdnf.\n",
                        "summary": "MicroDNF packages to install.",
                        "type": "string",
                        "validation": {
                           "path_existence": {
                              "must_exist": true,
                              "type": "file"
                           }
                        }
                     },
                     "no_clean": {
                        "array_delimiter": " :: ",
                        "description": "By default, the package manager's cache is cleaned up after installation.\nThis option skips that step.\n",
                        "summary": "Do not clean up after installation.",
                        "type": "boolean"
                     },
                     "no_update": {
                        "array_delimiter": " :: ",
                        "description": "By default, the package lists are updated before installation.\nThis option skips that step.\n",
                        "summary": "Do not update package lists.",
                        "type": "boolean"
                     },
                     "yum": {
                        "array_delimiter": " :: ",
                        "default": "",
                        "description": "Path to a file containing newline-separated\npackage specifications for yum.\n",
                        "summary": "YUM packages to install.",
                        "type": "string",
                        "validation": {
                           "path_existence": {
                              "must_exist": true,
                              "type": "file"
                           }
                        }
                     }
                  }
               },
               "content_setting": {
                  "prefix": "",
                  "separator": "\n",
                  "suffix": ""
               },
               "description": "Install system packages listed in a file\nusing the system's package manager.\n",
               "file_setting": {
                  "eof_newline": true,
                  "json": {
                     "end_of_file_newline": true,
                     "indent": 3,
                     "sort_keys": true
                  },
                  "md": {
                     "heading_number": false,
                     "target": "github"
                  },
                  "sort_keys": true,
                  "yaml": {
                     "block_string": true,
                     "end_of_file_newline": true,
                     "mapping_indent": 2,
                     "remove_top_level_indent": true,
                     "sequence_indent": 4,
                     "sequence_indent_offset": 2,
                     "sort_keys": true
                  }
               },
               "name": "System Package Installation",
               "path": ".devcontainer/feature/syspkg/install.sh",
               "relpath": "install.sh",
               "status": "active",
               "summary": "Install system packages.",
               "type": "shell_exec",
               "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/feature/syspkg/install.sh"
            },
            "metadata": {
               "content": {
                  "id": "syspkg",
                  "name": "System Package Installation",
                  "options": {
                     "apk": {
                        "default": "",
                        "description": "APK packages to install.\nPath to a file containing newline-separated\npackage specifications for apk.\n",
                        "type": "string"
                     },
                     "apt": {
                        "default": "",
                        "description": "APT packages to install.\nPath to a file containing newline-separated\npackage specifications for apt-get.\n",
                        "type": "string"
                     },
                     "apt_repos": {
                        "default": "",
                        "description": "APT repositories to add.\nPath to file containing newline-separated arguments\nto pass to 'add-apt-repository', one set per line.\n",
                        "type": "string"
                     },
                     "debug": {
                        "default": false,
                        "description": "Enable debug output.",
                        "type": "boolean"
                     },
                     "dnf": {
                        "default": "",
                        "description": "DNF packages to install.\nPath to a file containing newline-separated\npackage specifications for dnf.\n",
                        "type": "string"
                     },
                     "interactive": {
                        "default": false,
                        "description": "Start an interactive installation.\nBy default, the installation is non-interactive.\nThis option forces an interactive installation.\n",
                        "type": "boolean"
                     },
                     "keep_repos": {
                        "default": false,
                        "description": "Keep APT repositories after installation.\nKeep adde repositories after script ends.\nBy default, they are removed automatically.\n",
                        "type": "boolean"
                     },
                     "logfile": {
                        "default": "",
                        "description": "Log all output (stdout + stderr) to this file in addition to console.",
                        "type": "string"
                     },
                     "microdnf": {
                        "default": "",
                        "description": "MicroDNF packages to install.\nPath to a file containing newline-separated\npackage specifications for microdnf.\n",
                        "type": "string"
                     },
                     "no_clean": {
                        "default": false,
                        "description": "Do not clean up after installation.\nBy default, the package manager's cache is cleaned up after installation.\nThis option skips that step.\n",
                        "type": "boolean"
                     },
                     "no_update": {
                        "default": false,
                        "description": "Do not update package lists.\nBy default, the package lists are updated before installation.\nThis option skips that step.\n",
                        "type": "boolean"
                     },
                     "yum": {
                        "default": "",
                        "description": "YUM packages to install.\nPath to a file containing newline-separated\npackage specifications for yum.\n",
                        "type": "string"
                     }
                  },
                  "version": "0.1.0"
               },
               "content_setting": {
                  "prefix": "",
                  "separator": "\n",
                  "suffix": ""
               },
               "file_setting": {
                  "eof_newline": true,
                  "json": {
                     "end_of_file_newline": true,
                     "indent": 3,
                     "sort_keys": true
                  },
                  "md": {
                     "heading_number": false,
                     "target": "github"
                  },
                  "sort_keys": true,
                  "yaml": {
                     "block_string": true,
                     "end_of_file_newline": true,
                     "mapping_indent": 2,
                     "remove_top_level_indent": true,
                     "sequence_indent": 4,
                     "sequence_indent_offset": 2,
                     "sort_keys": true
                  }
               },
               "name": "System Package Installation Devcontainer Feature Metadata",
               "path": ".devcontainer/feature/syspkg/devcontainer-feature.json",
               "relpath": "devcontainer-feature.json",
               "status": "active",
               "summary": "`devcontainer-feature.json` file for the feature.",
               "type": "json",
               "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/feature/syspkg/devcontainer-feature.json"
            },
            "path": ".devcontainer/feature/syspkg",
            "relpath": "feature/syspkg"
         },
         "texlive": {
            "install": {
               "content": {
                  "body": [
                     {
                        "content": "exit_if_not_root"
                     },
                     {
                        "content": "if [[ \"$INSTALL\" == true || $\"REINSTALL\" == true ]]; then\n    mkdir -p \"$INSTALLER_DIR\"\n    install_requirements\n    if command -v tlmgr >/dev/null 2>&1; then\n        echo \"\u26a0\ufe0f LaTeX installation found.\"\n        if [[ \"$REINSTALL\" == true ]]; then\n            uninstall_texlive\n        else\n            echo \"\u26d4 LaTeX is already installed.\"\n            exit 1\n        fi\n    fi\n    if command -v apt-get >/dev/null 2>&1; then\n        install_dummy_apt_package\n    fi\n    download_texlive_installer\n    install_texlive\n    set_texdir\n    if [[ \"$NO_CLEAN\" == false ]]; then\n        echo \"\ud83d\uddd1 Removing installer artifacts.\"\n        rm -rf \"$INSTALLER_DIR\"\n    fi\n    set_sysbin\n    add_texlive_bin_to_path\n    apply_patches\nelif [[ \"$GENERATE_CACHES\" == true ]]; then\n    set_texdir\n    set_sysbin\nfi\n",
                        "summary": "Install TeX Live."
                     },
                     {
                        "content": "if [[ \"$GENERATE_CACHES\" == true ]]; then\n    generate_caches\nfi\n",
                        "summary": "Generate TeX Live caches."
                     },
                     {
                        "content": "if [[ \"$VERIFY_INSTALLATION\" == true ]]; then\n    verify_installation\nfi\n",
                        "summary": "Verify TeX Live installation."
                     },
                     {
                        "content": "echo \"\u2705 TeX Live installation complete.\""
                     }
                  ],
                  "flags": "-euo pipefail",
                  "function": {
                     "add_texlive_bin_to_path": {
                        "body": "local tlmgr=\"$(find \"$TEXDIR\" -name tlmgr)\"\nif [[ -n \"$tlmgr\" ]]; then\n    echo \"\ud83d\udce6 Located tlmgr at '$tlmgr'.\"\nelse\n    echo \"\u26d4 tlmgr not found in TEXDIR '$TEXDIR'.\" >&2\n    exit 1\nfi\necho \"\ud83d\udee4 Add TeX Live binaries to system PATH.\"\n\"$tlmgr\" path add\n",
                        "name": "add_texlive_bin_to_path",
                        "summary": "Add TeX Live bin directory to the PATH environment variable."
                     },
                     "apply_patches": {
                        "body": "echo \"Fixing ConTeXt path in mtxrun.lua\"\n(sed -i \\\n    '/package.loaded\\[\"data-ini\"\\]/a if os.selfpath then environment.ownbin=lfs.symlinktarget(os.selfpath..io.fileseparator..os.selfname);environment.ownpath=environment.ownbin:match(\"^.*\"..io.fileseparator) else environment.ownpath=kpse.new(\"luatex\"):var_value(\"SELFAUTOLOC\");environment.ownbin=environment.ownpath..io.fileseparator..(arg[-2] or arg[-1] or arg[0] or \"luatex\"):match(\"[^\"..io.fileseparator..\"]*$\") end' \\\n    \"$SYS_BIN/mtxrun.lua\" || true\n)\n",
                        "name": "apply_patches",
                        "references": [
                           {
                              "title": "Island of TeX Docker image",
                              "url": "https://gitlab.com/islandoftex/images/texlive/-/issues/30"
                           }
                        ],
                        "summary": "Apply patches to TeX Live installation."
                     },
                     "download_texlive_installer": {
                        "body": "echo \"\ud83d\udce5 Download TeX Live installer from '$MIRROR' to '$INSTALLER_DIR'.\"\nrsync -a --stats \"$MIRROR\" \"$INSTALLER_DIR\"\n",
                        "name": "download_texlive_installer",
                        "summary": "Download the TeX Live installer."
                     },
                     "generate_caches": {
                        "body": "echo \"\ud83d\udcbe Generate ConTeXt and font caches.\"\n(luaotfload-tool -u || true)\nmkdir -p /etc/fonts/conf.d\n(cp \"$(find \"$TEXDIR\" -name texlive-fontconfig.conf)\" /etc/fonts/conf.d/09-texlive-fonts.conf || true)\nfc-cache -fsv\nif [ -f \"$SYS_BIN/context\" ]; then\n    mtxrun --generate\n    texlua \"$SYS_BIN/mtxrun.lua\" --luatex --generate\n    context --make\n    context --luatex --make\nfi\n",
                        "name": "generate_caches",
                        "summary": "Generate ConTeXt and font caches."
                     },
                     "install_dummy_apt_package": {
                        "body": "local equivs_file=\"${INSTALLER_DIR}/${DEBIAN_EQUIVS_FILENAME}\"\nlocal dummy_version=\"9999.99999999-1\"\nif ! command -v curl >/dev/null 2>&1; then\n    echo \"\u26d4 curl is not available.\" >&2\n    exit 1\nfi\necho \"\ud83d\udce5 Downloading equivs TeX Live APT package data.\"\ncurl \"$DEBIAN_EQUIVS_URL\" --output \"$equivs_file\"\nread pkg_name pkg_version < <(\n    awk -F': ' '/^Package:/{pkg=$2} /^Version:/{ver=$2} END{print pkg, ver}' \"$equivs_file\"\n)\n# Substitute the version number with a large dummy version to avoid updates.\nsed -i \"s/${pkg_version}/${dummy_version}/\" \"$equivs_file\"\necho \"\ud83d\udce6 Installing equivs TeX Live APT package.\"\nequivs-build \"$equivs_file\"\ndpkg -i \"${pkg_name}_${dummy_version}_all.deb\"\napt-get install -qyf --no-install-recommends\nif [[ \"$NO_CACHE_CLEAN\" == false ]]; then\n    echo \"\ud83e\uddf9 Cleaning up APT cache.\"\n    apt-get dist-clean\n    rm -rf /var/cache/apt/\nfi\n",
                        "description": "This tells apt-get that all TeX Live packages are installed,\nso that it doesn't try to install them again later.\n",
                        "name": "install_dummy_apt_package",
                        "references": [
                           {
                              "title": "Island of TeX Docker image",
                              "url": "https://gitlab.com/islandoftex/images/texlive/-/blob/72240db12e00510972aeea19cd0a08edc22c4152/Dockerfile#L21-46"
                           }
                        ],
                        "summary": "Download and install dummy TeX Live APT package."
                     },
                     "install_requirements": {
                        "body": "if ! command -v \"$SYSPKG_INSTALL_SCRIPT\" >/dev/null 2>&1; then\n    echo \"\u26d4 Package installer script '$SYSPKG_INSTALL_SCRIPT' is not available.\" >&2\n    exit 1\nfi\necho \"\ud83d\udce6 Install requirements.\"\nlocal script_dir=\"$(dirname \"$(realpath \"${BASH_SOURCE[0]}\")\")\"\nlocal requirements_dir=\"$script_dir/requirements\"\n\"$SYSPKG_INSTALL_SCRIPT\" \\\n    --apt \"$requirements_dir/apt_pkgs.txt\" \\\n    --logfile \"$LOGFILE\" \\\n    --debug \\\n",
                        "name": "install_requirements",
                        "summary": "Install required packages for TeX Live installation."
                     },
                     "install_texlive": {
                        "body": "export TEXLIVE_INSTALL_NO_CONTEXT_CACHE=1\nexport NOPERLDOC=1\nif [[ -z \"$PROFILE\" ]]; then\n    echo \"\ud83d\udce6 Installing TeXLive in interactive mode without a profile.\"\n    \"$INSTALLER_DIR/install-tl\"\nelif [[ \"$INTERACTIVE\" == \"true\" ]]; then\n    echo \"\ud83d\udce6 Installing TeXLive in interactive mode with initial profile '$PROFILE'.\"\n    \"$INSTALLER_DIR/install-tl\" -init-from-profile \"$PROFILE\"\nelse\n    echo \"\ud83d\udce6 Installing TeXLive in non-interactive mode with profile '$PROFILE'.\"\n    \"$INSTALLER_DIR/install-tl\" -profile \"$PROFILE\"\nfi\n",
                        "name": "install_texlive",
                        "references": [
                           {
                              "title": "TeX Live installation docs",
                              "url": "https://www.tug.org/texlive/doc/install-tl.html"
                           }
                        ],
                        "summary": "Install TeX Live."
                     },
                     "set_sysbin": {
                        "body": "SYS_BIN=$(awk '$1==\"tlpdbopt_sys_bin\"{sub(/^[^[:space:]]+[[:space:]]+/, \"\"); print}' \"$PROFILE\")\nif [[ -z \"$SYS_BIN\" ]]; then\n    echo \"\ud83c\udf9b Set tlpdbopt_sys_bin to '$SYS_BIN' from profile file '$PROFILE'.\"\nelse\n    SYS_BIN=\"$DEFAULT_SYS_BIN\"\n    echo \"\ud83c\udf9b Set tlpdbopt_sys_bin to default value '$SYS_BIN'.\"\nfi\n",
                        "description": "This function sets the SYS_BIN environment.\nThis is needed for the finalization step.\n",
                        "name": "set_sysbin",
                        "summary": "Set the TeX Live sysbin directory."
                     },
                     "set_texdir": {
                        "body": "TEXDIR=$(awk '$1==\"TEXDIR\"{sub(/^[^[:space:]]+[[:space:]]+/, \"\"); print}' \"$PROFILE\")\nif [[ -n \"$TEXDIR\" ]]; then\n    echo \"\ud83c\udf9b TEXDIR set to '$TEXDIR' from profile file '$PROFILE'.\"\nelse\n    # Default is '/usr/local/texlive/YYYY' for release 'YYYY'\n    # Get LaTeX version (year, in format YYYY) from a file named LATEX_YYYY in the installer directory\n    local version=$(find \"$INSTALLER_DIR\" -maxdepth 1 -type f -regex '.*/LATEX_[0-9]\\{4\\}' -exec basename {} \\; | head -n1 | grep -oP '^LATEX_\\K[0-9]{4}')\n    if [[ -z \"$version\" ]]; then\n        echo \"\u26d4 No LATEX_YYYY file found in '$INSTALLER_DIR'.\" >&2\n        exit 1\n    fi\n    TEXDIR=\"${DEFAULT_TEXDIR_PREFIX}/${version}\"\n    echo \"\ud83c\udf9b TEXDIR set to default value '$TEXDIR'.\"\nfi\n",
                        "description": "This function sets the TEXDIR environment.\nThis is needed for the finalization step.\nThe installation directory may be specified in the profile file under the TEXDIR variable.\n",
                        "name": "set_texdir",
                        "summary": "Set the TeX Live installation directory."
                     },
                     "uninstall_texlive": {
                        "body": "echo \"\ud83d\uddd1 Uninstall TeX Live.\"\ntlmgr uninstall --all\nrm -rf \"$(kpsewhich -var-value=TEXMFVAR)\"\n",
                        "name": "uninstall_texlive",
                        "references": [
                           {
                              "title": "TeX Live docs",
                              "url": "https://www.tug.org/texlive/doc/texlive-en/texlive-en.html#x1-380003.6"
                           },
                           {
                              "title": "MacTeX docs",
                              "url": "https://www.tug.org/mactex/uninstalling.html"
                           }
                        ],
                        "summary": "Uninstall TeX Live."
                     },
                     "verify_installation": {
                        "body": "echo \"\u2611\ufe0f Verify TeX Live installation.\"\nlatex --version && printf '\\n'\nbiber --version && printf '\\n'\nxindy --version && printf '\\n'\narara --version && printf '\\n'\ncontext --version && printf '\\n'\ncontext --luatex --version && printf '\\n'\nasy --version && printf '\\n'\npython --version && printf '\\n'\npygmentize -V && printf '\\n'\n",
                        "name": "verify_installation",
                        "summary": "Verify the TeX Live installation."
                     }
                  },
                  "import": [
                     "exit_if_not_root"
                  ],
                  "interpreter": "usr/bin/env bash",
                  "parameter": {
                     "debian_equivs_filename": {
                        "array_delimiter": " :: ",
                        "default": "debian-equivs-2023-ex.txt",
                        "summary": "Name of the Debian equivs filename to download.",
                        "type": "string"
                     },
                     "debian_equivs_url": {
                        "array_delimiter": " :: ",
                        "default": "https://tug.org/texlive/files/{'type': 'string', 'summary': 'Name of the Debian equivs filename to download.', 'default': 'debian-equivs-2023-ex.txt', 'array_delimiter': ' :: '}",
                        "summary": "URL to download the Debian equivs file from.",
                        "type": "string"
                     },
                     "debug": {
                        "summary": "Enable debug output.",
                        "type": "boolean"
                     },
                     "default_sys_bin": {
                        "array_delimiter": " :: ",
                        "default": "/usr/local/bin",
                        "summary": "Default TeX Live sysbin directory.",
                        "type": "string"
                     },
                     "default_texdir_prefix": {
                        "array_delimiter": " :: ",
                        "default": "/usr/local/texlive",
                        "summary": "Default TeX Live TEXDIR prefix.",
                        "type": "string"
                     },
                     "generate_caches": {
                        "array_delimiter": " :: ",
                        "summary": "Generate ConTeXt and font caches.",
                        "type": "boolean"
                     },
                     "install": {
                        "array_delimiter": " :: ",
                        "summary": "Install TeX Live.",
                        "type": "boolean"
                     },
                     "installer_dir": {
                        "array_delimiter": " :: ",
                        "default": "/tmp/texlive-installer",
                        "summary": "Path to directory to download the installer to.",
                        "type": "string"
                     },
                     "interactive": {
                        "array_delimiter": " :: ",
                        "summary": "Start an interactive installation even when profile is provided.",
                        "type": "boolean"
                     },
                     "logfile": {
                        "default": "",
                        "summary": "Log all output (stdout + stderr) to this file in addition to console.",
                        "type": "string"
                     },
                     "mirror": {
                        "array_delimiter": " :: ",
                        "default": "rsync://rsync.dante.ctan.org/CTAN/systems/texlive/tlnet/",
                        "summary": "URI of the TeX Live mirror to use for installation.",
                        "type": "string"
                     },
                     "no_cache_clean": {
                        "array_delimiter": " :: ",
                        "summary": "Skip 'apt-get dist-clean' command after installation of dummy package.",
                        "type": "boolean"
                     },
                     "no_clean": {
                        "array_delimiter": " :: ",
                        "summary": "Do not remove the installer artifacts after installation.",
                        "type": "boolean"
                     },
                     "profile": {
                        "array_delimiter": " :: ",
                        "default": "",
                        "description": "If not provided, an interactive installation will be performed.\nYou can also set this to \"default\", to use the default profile.\n",
                        "summary": "Path to a TeX Live installation profile file.",
                        "type": "string"
                     },
                     "reinstall": {
                        "array_delimiter": " :: ",
                        "summary": "Same as '--install', but uninstall TeX first if already installed.",
                        "type": "boolean"
                     },
                     "syspkg_install_script": {
                        "array_delimiter": " :: ",
                        "summary": "Path to the system package installation script.",
                        "type": "string"
                     },
                     "verify_installation": {
                        "array_delimiter": " :: ",
                        "summary": "Verify the TeX Live installation.",
                        "type": "boolean"
                     }
                  }
               },
               "content_setting": {
                  "prefix": "",
                  "separator": "\n",
                  "suffix": ""
               },
               "description": "Install and/or set up TeX Live using the TeX Live installer.\n",
               "file_setting": {
                  "eof_newline": true,
                  "json": {
                     "end_of_file_newline": true,
                     "indent": 3,
                     "sort_keys": true
                  },
                  "md": {
                     "heading_number": false,
                     "target": "github"
                  },
                  "sort_keys": true,
                  "yaml": {
                     "block_string": true,
                     "end_of_file_newline": true,
                     "mapping_indent": 2,
                     "remove_top_level_indent": true,
                     "sequence_indent": 4,
                     "sequence_indent_offset": 2,
                     "sort_keys": true
                  }
               },
               "name": "TeX Live Installation Devcontainer Feature Installer",
               "path": ".devcontainer/feature/texlive/install.sh",
               "references": [
                  {
                     "title": "TeX Live installer documentation",
                     "url": "https://www.tug.org/texlive/doc/install-tl.html"
                  },
                  {
                     "title": "TeX Live Installation Guide",
                     "url": "https://www.tug.org/texlive/doc/texlive-en/texlive-en.html#x1-140003"
                  },
                  {
                     "title": "Island of TeX Docker image",
                     "url": "https://gitlab.com/islandoftex/images/texlive"
                  },
                  {
                     "title": "github.com/xu-cheng/latex-docker",
                     "url": "https://github.com/xu-cheng/latex-docker"
                  },
                  {
                     "title": "github.com/scottkosty/install-tl-ubuntu",
                     "url": "https://github.com/scottkosty/install-tl-ubuntu"
                  },
                  {
                     "title": "texlive-batch-installation",
                     "url": "https://github.com/maxnoe/texlive-batch-installation"
                  }
               ],
               "relpath": "install.sh",
               "status": "active",
               "summary": "Install TeX Live.",
               "type": "shell_exec",
               "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/feature/texlive/install.sh"
            },
            "install_profile": {
               "content": "TEXDIR /usr/local/texlive\nTEXMFCONFIG ~/texlive/texmf-config\nTEXMFHOME ~/texlive/texmf\nTEXMFLOCAL /usr/local/texlive/texmf\nTEXMFSYSCONFIG /usr/local/texlive/texmf-config\nTEXMFSYSVAR /usr/local/texlive/texmf-var\nTEXMFVAR ~/texlive/texmf-var\ninstopt_autobackup 0\ninstopt_backupdir tlpkg/backups\ninstopt_create_formats 1\ninstopt_desktop_integration 1\ninstopt_file_assocs 1\ninstopt_generate_updmap 0\ninstopt_install_docfiles 0\ninstopt_install_srcfiles 0\ninstopt_post_code 1\ninstopt_sys_bin /usr/local/bin\ninstopt_sys_info /usr/local/share/info\ninstopt_sys_man /usr/local/share/man\ninstopt_w32_multi_user 1\nselected_scheme scheme-full\ntlpdbopt_autobackup 0\ntlpdbopt_backupdir tlpkg/backups\ntlpdbopt_create_formats 1\ntlpdbopt_desktop_integration 1\ntlpdbopt_file_assocs 1\ntlpdbopt_generate_updmap 0\ntlpdbopt_install_docfiles 0\ntlpdbopt_install_srcfiles 0\ntlpdbopt_post_code 1\ntlpdbopt_sys_bin /usr/local/bin\ntlpdbopt_sys_info /usr/local/share/info\ntlpdbopt_sys_man /usr/local/share/man\ntlpdbopt_w32_multi_user 1",
               "content_setting": {
                  "prefix": "",
                  "separator": "\n",
                  "suffix": ""
               },
               "data": {
                  "instopt": {
                     "adjustpath": 0,
                     "adjustrepo": 1,
                     "letter": 0,
                     "portable": 0,
                     "write18_restricted": 1
                  },
                  "path": {
                     "system": {
                        "texdir": "/usr/local/texlive",
                        "texmflocal": "/usr/local/texlive/texmf",
                        "texmfsysconfig": "/usr/local/texlive/texmf-config",
                        "texmfsysvar": "/usr/local/texlive/texmf-var"
                     },
                     "user": {
                        "texmfconfig": "~/texlive/texmf-config",
                        "texmfhome": "~/texlive/texmf",
                        "texmfvar": "~/texlive/texmf-var"
                     }
                  },
                  "scheme": "scheme-full",
                  "tlpdbopt": {
                     "autobackup": 0,
                     "backupdir": "tlpkg/backups",
                     "create_formats": 1,
                     "desktop_integration": 1,
                     "file_assocs": 1,
                     "generate_updmap": 0,
                     "install_docfiles": 0,
                     "install_srcfiles": 0,
                     "post_code": 1,
                     "sys_bin": "/usr/local/bin",
                     "sys_info": "/usr/local/share/info",
                     "sys_man": "/usr/local/share/man",
                     "w32_multi_user": 1
                  }
               },
               "description": "Notes:\n- For a full list of collections included in each scheme,\n  see the corresponding `.tlpsrc` file with the same name as the scheme\n  at https://tug.org/svn/texlive/trunk/Master/tlpkg/tlpsrc/.\n  For example, for the `scheme-full` scheme, see\n  https://tug.org/svn/texlive/trunk/Master/tlpkg/tlpsrc/scheme-basic.tlpsrc?view=markup.\n  Similarly, for a full list of packages included in each collection,\n  see the corresponding `.tlpsrc` file at the same location.\n  For example, for the `collection-basic` collection, see\n  https://tug.org/svn/texlive/trunk/Master/tlpkg/tlpsrc/collection-basic.tlpsrc?view=markup.\nReferences:\n- [TeX Live installer documentation](https://www.tug.org/texlive/doc/install-tl.html#PROFILES)\nExamples:\n- [github.com/xu-cheng/latex-docker](https://github.com/xu-cheng/latex-docker/blob/master/texlive.profile)\n- [github.com/scottkosty/install-tl-ubuntu](https://github.com/scottkosty/install-tl-ubuntu/blob/master/example.profile)\n",
               "file_setting": {
                  "eof_newline": true,
                  "json": {
                     "end_of_file_newline": true,
                     "indent": 3,
                     "sort_keys": true
                  },
                  "md": {
                     "heading_number": false,
                     "target": "github"
                  },
                  "sort_keys": true,
                  "yaml": {
                     "block_string": true,
                     "end_of_file_newline": true,
                     "mapping_indent": 2,
                     "remove_top_level_indent": true,
                     "sequence_indent": 4,
                     "sequence_indent_offset": 2,
                     "sort_keys": true
                  }
               },
               "name": "TeX Live Installation Profile",
               "path": ".devcontainer/feature/texlive/install.profile",
               "relpath": "install.profile",
               "status": "active",
               "summary": "Profile for installing TeX Live.",
               "type": "txt",
               "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/feature/texlive/install.profile"
            },
            "metadata": {
               "content": {
                  "id": "texlive",
                  "name": "TeX Live Installation",
                  "options": {
                     "debian_equivs_filename": {
                        "default": "debian-equivs-2023-ex.txt",
                        "description": "Name of the Debian equivs filename to download.",
                        "type": "string"
                     },
                     "debian_equivs_url": {
                        "default": "https://tug.org/texlive/files/{'type': 'string', 'summary': 'Name of the Debian equivs filename to download.', 'default': 'debian-equivs-2023-ex.txt', 'array_delimiter': ' :: '}",
                        "description": "URL to download the Debian equivs file from.",
                        "type": "string"
                     },
                     "debug": {
                        "default": false,
                        "description": "Enable debug output.",
                        "type": "boolean"
                     },
                     "default_sys_bin": {
                        "default": "/usr/local/bin",
                        "description": "Default TeX Live sysbin directory.",
                        "type": "string"
                     },
                     "default_texdir_prefix": {
                        "default": "/usr/local/texlive",
                        "description": "Default TeX Live TEXDIR prefix.",
                        "type": "string"
                     },
                     "generate_caches": {
                        "default": false,
                        "description": "Generate ConTeXt and font caches.",
                        "type": "boolean"
                     },
                     "install": {
                        "default": false,
                        "description": "Install TeX Live.",
                        "type": "boolean"
                     },
                     "installer_dir": {
                        "default": "/tmp/texlive-installer",
                        "description": "Path to directory to download the installer to.",
                        "type": "string"
                     },
                     "interactive": {
                        "default": false,
                        "description": "Start an interactive installation even when profile is provided.",
                        "type": "boolean"
                     },
                     "logfile": {
                        "default": "",
                        "description": "Log all output (stdout + stderr) to this file in addition to console.",
                        "type": "string"
                     },
                     "mirror": {
                        "default": "rsync://rsync.dante.ctan.org/CTAN/systems/texlive/tlnet/",
                        "description": "URI of the TeX Live mirror to use for installation.",
                        "type": "string"
                     },
                     "no_cache_clean": {
                        "default": false,
                        "description": "Skip 'apt-get dist-clean' command after installation of dummy package.",
                        "type": "boolean"
                     },
                     "no_clean": {
                        "default": false,
                        "description": "Do not remove the installer artifacts after installation.",
                        "type": "boolean"
                     },
                     "profile": {
                        "default": "",
                        "description": "Path to a TeX Live installation profile file.\nIf not provided, an interactive installation will be performed.\nYou can also set this to \"default\", to use the default profile.\n",
                        "type": "string"
                     },
                     "reinstall": {
                        "default": false,
                        "description": "Same as '--install', but uninstall TeX first if already installed.",
                        "type": "boolean"
                     },
                     "syspkg_install_script": {
                        "default": "",
                        "description": "Path to the system package installation script.",
                        "type": "string"
                     },
                     "verify_installation": {
                        "default": false,
                        "description": "Verify the TeX Live installation.",
                        "type": "boolean"
                     }
                  },
                  "version": "0.1.0"
               },
               "content_setting": {
                  "prefix": "",
                  "separator": "\n",
                  "suffix": ""
               },
               "file_setting": {
                  "eof_newline": true,
                  "json": {
                     "end_of_file_newline": true,
                     "indent": 3,
                     "sort_keys": true
                  },
                  "md": {
                     "heading_number": false,
                     "target": "github"
                  },
                  "sort_keys": true,
                  "yaml": {
                     "block_string": true,
                     "end_of_file_newline": true,
                     "mapping_indent": 2,
                     "remove_top_level_indent": true,
                     "sequence_indent": 4,
                     "sequence_indent_offset": 2,
                     "sort_keys": true
                  }
               },
               "name": "TeX Live Installation Devcontainer Feature Metadata",
               "path": ".devcontainer/feature/texlive/devcontainer-feature.json",
               "relpath": "devcontainer-feature.json",
               "status": "active",
               "summary": "`devcontainer-feature.json` file for the feature.",
               "type": "json",
               "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/feature/texlive/devcontainer-feature.json"
            },
            "path": ".devcontainer/feature/texlive",
            "relpath": "feature/texlive"
         },
         "volume": {
            "install": {
               "content": {
                  "body": [
                     {
                        "content": "exit_if_not_root"
                     },
                     {
                        "content": "# Remove trailing slash from SOURCE_DIR if it exists\nSOURCE_DIR=\"${SOURCE_DIR%/}\"\n"
                     },
                     {
                        "content": "if [ -n \"$MANIFEST_FILE\" ] && [ -f \"$MANIFEST_FILE\" ]; then\n    process_manifest\nfi\n",
                        "summary": "Process manifest file."
                     },
                     {
                        "content": "echo \"\ud83d\udd0d Scanning source directory for remaining files\"\nfind \"$SOURCE_DIR\" -type f | while read -r filepath; do\n    relpath=\"${filepath#$SOURCE_DIR/}\"\n    printf \"%s\\n\" \"$HANDLED_PATHS\" | grep -qxF \"$relpath\" && continue\n    execute \"$DEFAULT_ACTION\" \"$relpath\"\ndone\n",
                        "description": "Apply default action to all remaining files in the source directory.\n",
                        "summary": "Process source directory."
                     },
                     {
                        "content": "echo \"\u2705 Volume setup complete.\""
                     }
                  ],
                  "flags": "-euo pipefail",
                  "function": {
                     "execute": {
                        "body": "abs_path=\"$(prepend_slash \"$path\")\"\nsrc_path=\"$SOURCE_DIR/$path\"\n\ncase \"$action\" in\n    write)\n        if [ \"${abs_path%/}\" != \"$abs_path\" ]; then\n            mkdir -p \"$abs_path\"\n            echo \"\ud83d\udcc1 Created directory: $abs_path\"\n        else\n            make_parent_dirs \"$abs_path\"\n            cp -fL \"$src_path\" \"$abs_path\"\n            echo \"\ud83d\udcc4 Wrote file to: $abs_path\"\n        fi\n        ;;\n    delete)\n        if [ -d \"$abs_path\" ]; then\n            rm -rf \"$abs_path\"\n            echo \"\ud83d\uddd1\ufe0f Removed directory: $abs_path\"\n        elif [ -e \"$abs_path\" ]; then\n            rm -f \"$abs_path\"\n            echo \"\ud83d\uddd1\ufe0f Removed file: $abs_path\"\n        else\n            echo \"Path does not exist for deletion: $abs_path\"\n        fi\n        return 0\n        ;;\n    append)\n        make_parent_dirs \"$abs_path\"\n        cat \"$src_path\" >> \"$abs_path\"\n        echo \"\u2795 Appended to: $abs_path\"\n        ;;\n    prepend)\n        make_parent_dirs \"$abs_path\"\n        tmpf=$(mktemp)\n        cat \"$src_path\" > \"$tmpf\"\n        [ -f \"$abs_path\" ] && cat \"$abs_path\" >> \"$tmpf\"\n        mv \"$tmpf\" \"$abs_path\"\n        echo \"\ud83d\udd3c Prepended to: $abs_path\"\n        ;;\n    *)\n        echo \"Unknown action: $action\"\n        exit 1\n        ;;\nesac\n\nif [ -n \"$chmod_mode\" ] && [ \"$action\" != \"delete\" ]; then\n    if echo \"$chmod_mode\" | grep -q '[[:space:]]'; then\n        echo \"\u26a0\ufe0f  Invalid chmod mode (contains spaces): '$chmod_mode'\"\n        exit 1\n    else\n        chmod \"$chmod_mode\" \"$abs_path\"\n        echo \"\ud83d\udd10 Set permissions '$chmod_mode' on: $abs_path\"\n    fi\nfi\n\nHANDLED_PATHS=\"${HANDLED_PATHS-}\\n$path\"\n",
                        "name": "execute",
                        "parameter": {
                           "action": {
                              "array_delimiter": " :: ",
                              "summary": "Action to take on the file.",
                              "type": "string"
                           },
                           "chmod_mode": {
                              "array_delimiter": " :: ",
                              "default": "",
                              "summary": "Chmod mode to apply to the file.",
                              "type": "string"
                           },
                           "path": {
                              "array_delimiter": " :: ",
                              "summary": "Path to the file.",
                              "type": "string"
                           }
                        },
                        "summary": "Execute the specified action on the file."
                     },
                     "process_manifest": {
                        "body": "echo \"\ud83d\udcdc Reading manifest: $MANIFEST_FILE\"\nwhile IFS= read -r line || [ -n \"$line\" ]; do\n    # Skip empty lines and comments\n    case \"$line\" in\n        ''|[[:space:]]*\\#*) continue ;;\n    esac\n\n    local chmod_mode=\"\"\n    if echo \"$line\" | grep -qE '[[:space:]]chmod=[^[:space:]]+$'; then\n        chmod_mode=$(echo \"$line\" | sed -nE 's/.*[[:space:]]chmod=([^[:space:]]+)$/\\1/p')\n        local line=$(echo \"$line\" | sed -E 's/[[:space:]]chmod=[^[:space:]]+$//')\n    fi\n\n    # Parse action and quoted path (handles spacing)\n    local action=$(echo \"$line\" | awk '{print $1}')\n    local path=$(echo \"$line\" | sed -nE 's/^[^[:space:]]+[[:space:]]+\"([^\"]+)\"[[:space:]]*$/\\1/p')\n\n    if [ -z \"$action\" ] || [ -z \"$path\" ]; then\n        echo \"Invalid manifest line '$line'.\"\n        exit 1\n    fi\n\n    execute \"$action\" \"$path\" \"$chmod_mode\"\ndone < \"$MANIFEST_FILE\"\n",
                        "name": "process_manifest",
                        "summary": "Process the manifest file enries and apply changes."
                     }
                  },
                  "import": [
                     "exit_if_not_root",
                     "make_parent_dirs",
                     "prepend_slash"
                  ],
                  "interpreter": "usr/bin/env bash",
                  "parameter": {
                     "debug": {
                        "summary": "Enable debug output.",
                        "type": "boolean"
                     },
                     "default_action": {
                        "array_delimiter": " :: ",
                        "default": "write",
                        "description": "This is the action to take if no action is specified in the manifest file.\nIt can be one of \"copy\", \"link\", or \"skip\".\n",
                        "summary": "Default action to take on files in source_dir.",
                        "type": "string",
                        "validation": {
                           "enum": [
                              "append",
                              "prepend",
                              "write"
                           ]
                        }
                     },
                     "logfile": {
                        "default": "",
                        "summary": "Log all output (stdout + stderr) to this file in addition to console.",
                        "type": "string"
                     },
                     "manifest_file": {
                        "array_delimiter": " :: ",
                        "description": "This is the file that contains the list of files and directories to be set up.\nIt is a plain text file containing additional instructions.\n",
                        "summary": "Path to the manifest file.",
                        "type": "string",
                        "validation": {
                           "path_existence": {
                              "must_exist": true,
                              "type": "file"
                           }
                        }
                     },
                     "source_dir": {
                        "array_delimiter": " :: ",
                        "description": "This is the directory where the files and directories to be set up are located.\n",
                        "summary": "Path to the source directory.",
                        "type": "string",
                        "validation": {
                           "path_existence": {
                              "must_exist": true,
                              "type": "dir"
                           }
                        }
                     }
                  }
               },
               "content_setting": {
                  "prefix": "",
                  "separator": "\n",
                  "suffix": ""
               },
               "file_setting": {
                  "eof_newline": true,
                  "json": {
                     "end_of_file_newline": true,
                     "indent": 3,
                     "sort_keys": true
                  },
                  "md": {
                     "heading_number": false,
                     "target": "github"
                  },
                  "sort_keys": true,
                  "yaml": {
                     "block_string": true,
                     "end_of_file_newline": true,
                     "mapping_indent": 2,
                     "remove_top_level_indent": true,
                     "sequence_indent": 4,
                     "sequence_indent_offset": 2,
                     "sort_keys": true
                  }
               },
               "name": "Volume Setup Devcontainer Feature Installer",
               "path": ".devcontainer/feature/volume/install.sh",
               "relpath": "install.sh",
               "status": "active",
               "summary": "Set up files and directories in the root of the system.",
               "type": "shell_exec",
               "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/feature/volume/install.sh"
            },
            "manifest": {
               "content": "write   /etc/bash.bashrc\nwrite   /etc/bash/bash_env\nwrite   /etc/bash/bash_theme\nwrite   /etc/global_shellrc\nwrite   /etc/profile\nwrite   /etc/project_tasks\nwrite   /etc/zsh/zprofile\nwrite   /etc/zsh/zshenv\nwrite   /etc/zsh/zshrc\ndelete  /home/pypackit-dev/.bashrc\ndelete  /home/pypackit-dev/.profile\ndelete  /root/.bashrc\ndelete  /root/.profile\nwrite   /usr/local/bin/code               chmod=+rx\nwrite   /usr/local/bin/devcontainer-info  chmod=+rx\nwrite   /usr/local/bin/systemctl          chmod=+rx",
               "content_setting": {
                  "prefix": "",
                  "separator": "\n",
                  "suffix": ""
               },
               "file_setting": {
                  "eof_newline": true,
                  "json": {
                     "end_of_file_newline": true,
                     "indent": 3,
                     "sort_keys": true
                  },
                  "md": {
                     "heading_number": false,
                     "target": "github"
                  },
                  "sort_keys": true,
                  "yaml": {
                     "block_string": true,
                     "end_of_file_newline": true,
                     "mapping_indent": 2,
                     "remove_top_level_indent": true,
                     "sequence_indent": 4,
                     "sequence_indent_offset": 2,
                     "sort_keys": true
                  }
               },
               "name": "Volume Manifest",
               "path": ".devcontainer/feature/volume/volume_manifest",
               "relpath": "volume_manifest",
               "status": "active",
               "summary": "Manifest file for volume setup.",
               "type": "txt",
               "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/feature/volume/volume_manifest"
            },
            "metadata": {
               "content": {
                  "id": "volume",
                  "name": "Volume Setup",
                  "options": {
                     "debug": {
                        "default": false,
                        "description": "Enable debug output.",
                        "type": "boolean"
                     },
                     "default_action": {
                        "default": "write",
                        "description": "Default action to take on files in source_dir.\nThis is the action to take if no action is specified in the manifest file.\nIt can be one of \"copy\", \"link\", or \"skip\".\n",
                        "enum": [
                           "append",
                           "prepend",
                           "write"
                        ],
                        "type": "string"
                     },
                     "logfile": {
                        "default": "",
                        "description": "Log all output (stdout + stderr) to this file in addition to console.",
                        "type": "string"
                     },
                     "manifest_file": {
                        "default": "",
                        "description": "Path to the manifest file.\nThis is the file that contains the list of files and directories to be set up.\nIt is a plain text file containing additional instructions.\n",
                        "type": "string"
                     },
                     "source_dir": {
                        "default": "",
                        "description": "Path to the source directory.\nThis is the directory where the files and directories to be set up are located.\n",
                        "type": "string"
                     }
                  },
                  "version": "0.1.0"
               },
               "content_setting": {
                  "prefix": "",
                  "separator": "\n",
                  "suffix": ""
               },
               "file_setting": {
                  "eof_newline": true,
                  "json": {
                     "end_of_file_newline": true,
                     "indent": 3,
                     "sort_keys": true
                  },
                  "md": {
                     "heading_number": false,
                     "target": "github"
                  },
                  "sort_keys": true,
                  "yaml": {
                     "block_string": true,
                     "end_of_file_newline": true,
                     "mapping_indent": 2,
                     "remove_top_level_indent": true,
                     "sequence_indent": 4,
                     "sequence_indent_offset": 2,
                     "sort_keys": true
                  }
               },
               "name": "Volume Setup Devcontainer Feature Metadata",
               "path": ".devcontainer/feature/volume/devcontainer-feature.json",
               "relpath": "devcontainer-feature.json",
               "status": "active",
               "summary": "`devcontainer-feature.json` file for the feature.",
               "type": "json",
               "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/feature/volume/devcontainer-feature.json"
            },
            "path": ".devcontainer/feature/volume",
            "relpath": "feature/volume"
         }
      },
      "function": {
         "exit_if_not_root": {
            "body": "if [ \"$(id -u)\" -ne 0 ]; then\n    echo '\u26d4 This script must be run as root. Use sudo, su, or add \"USER root\" to your Dockerfile before running this script.' >&2\n    exit 1\nfi\n",
            "description": "This function checks if the script is being run as the root user.\nIf not, it prints an error message and exits with status code 1.\nThis is useful as an early check for scripts\nthat require root privileges to run.\n",
            "name": "exit_if_not_root",
            "references": [
               {
                  "title": "Devcontainer Feature installation script",
                  "url": "https://github.com/devcontainers/features/blob/6654579de4c31cd9f9f9e19e873521f502403929/src/common-utils/main.sh#L331-L334"
               }
            ],
            "summary": "Exit with an error if not running as root user."
         },
         "extend_path": {
            "body": "# Prepend paths (in reverse order to maintain input order at front)\nfor (( idx=${#prepend[@]}-1; idx>=0; idx-- )); do\n  local dir=${prepend[idx]}\n  # Skip if not a directory\n  [ -d \"$dir\" ] || continue\n  case \":$PATH:\" in\n    *:\"$dir\":*) ;;\n    *) PATH=$dir:$PATH ;;\n  esac\ndone\n# Append paths\nfor dir in \"${append[@]}\"; do\n  [ -d \"$dir\" ] || continue\n  case \":$PATH:\" in\n    *:\"$dir\":*) ;;\n    *) PATH=$PATH:$dir ;;\n  esac\ndone\n",
            "description": "This function can both prepend and append new\npaths to the PATH environment variable,\nwhile avoiding duplicates.\n",
            "name": "extend_path",
            "parameter": {
               "append": {
                  "array_delimiter": " :: ",
                  "default": [],
                  "description": "Directories are appended in the same order as given.\nFor example, `--append a b c` results in `$PATH:a:b:c`.\n",
                  "summary": "List of directory paths to append to PATH.",
                  "type": "array"
               },
               "prepend": {
                  "array_delimiter": " :: ",
                  "default": [],
                  "description": "Directories are prepended in the same order as given.\nFor example, `--prepend a b c` results in `a:b:c:$PATH`.\n",
                  "summary": "List of directory paths to prepend to PATH.",
                  "type": "array"
               }
            },
            "summary": "Extend the PATH environment variable."
         },
         "get_matching_github_ref": {
            "body": "local api_url=\"https://api.github.com/repos/${owner}/${repo}/git/matching-refs/${ref}\"\nlocal refs=()\nmapfile -t all_refs < <(\n    curl -fsSL \"$api_url\" |\n    jq -r '.[] | .ref' |\n    while IFS= read -r full_ref; do\n        local clean_ref=\"${full_ref#refs/}\"\n        if [[ \"$clean_ref\" == \"$remove_prefix\"* ]]; then\n            clean_ref=\"${clean_ref#$remove_prefix}\"\n            printf '%s\\n' \"$clean_ref\"\n        fi\n    done\n)\necho \"\u2139\ufe0f Initial matched refs:\" >&2\nprintf '- %s\\n' \"${all_refs[@]}\" >&2\n\nif [[ -z \"$regex\" ]]; then\n    matched_refs=(\"${all_refs[@]}\")\nelse\n    # Add ^...$ anchors\n    regex=\"^${regex}\\$\"\n    for ref in \"${all_refs[@]}\"; do\n        if [[ \"$ref\" =~ $regex ]]; then\n            matched_refs+=(\"$ref\")\n        fi\n    done\n    echo \"\u2139\ufe0f Final matched refs:\" >&2\n    printf '- %s\\n' \"${matched_refs[@]}\" >&2\nfi\n\nif [[ ${#matched_refs[@]} -eq 0 ]]; then\n    echo \"\u26d4 No matching refs found.\" >&2\n    exit 1\nfi\n\n# Output most recent match (last element)\nref=\"${matched_refs[-1]}\"\n",
            "name": "get_matching_github_ref",
            "parameter": {
               "owner": {
                  "array_delimiter": " :: ",
                  "examples": [
                     "repodynamics"
                  ],
                  "summary": "Owner of the GitHub repository.",
                  "type": "string"
               },
               "ref": {
                  "array_delimiter": " :: ",
                  "description": "All references starting with this string will match.\n",
                  "examples": [
                     "heads/",
                     "heads/<branch-name>",
                     "tags/",
                     "tags/v",
                     "tags/v1."
                  ],
                  "summary": "Reference to match against.",
                  "type": "string"
               },
               "regex": {
                  "array_delimiter": " :: ",
                  "default": "",
                  "description": "This is used to further filter the references,\nafter removing the prefix. The leading \"^\" and\ntrailing \"$\" are automatically added to this regex.\n",
                  "examples": [
                     "^[0-9]+\\.[0-9]+\\.[0-9]+$"
                  ],
                  "summary": "Regular expression to match against the reference names.",
                  "type": "string"
               },
               "remove_prefix": {
                  "array_delimiter": " :: ",
                  "default": "",
                  "description": "This is used to clean up the reference names.\nFor example, if the ref is \"tags/v1.2.3\",\nand the prefix is \"tags/v\",\nthe result will be \"1.2.3\".\n",
                  "examples": [
                     "heads/",
                     "tags/",
                     "tags/v"
                  ],
                  "summary": "Prefix to remove from the matching references.",
                  "type": "string"
               },
               "repo": {
                  "array_delimiter": " :: ",
                  "examples": [
                     "pypackit"
                  ],
                  "summary": "Name of the GitHub repository.",
                  "type": "string"
               }
            },
            "references": [
               {
                  "title": "Python Devcontainer Feature",
                  "url": "https://github.com/devcontainers/features/blob/6654579de4c31cd9f9f9e19e873521f502403929/src/python/install.sh#L263-L294"
               },
               {
                  "title": "Git Devcontainer Feature",
                  "url": "https://github.com/devcontainers/features/blob/6654579de4c31cd9f9f9e19e873521f502403929/src/git/install.sh#L282-L297"
               }
            ],
            "return": [
               {
                  "description": "The most recent reference that\nmatches the specified criteria.\n",
                  "name": "ref",
                  "summary": "Latest matching reference.",
                  "type": "string",
                  "variable": "ref"
               }
            ],
            "summary": "Get the latest matching reference from a GitHub repository."
         },
         "get_next_in_path": {
            "body": "local cmd next\ncmd=$(basename \"$0\")\nnext=$(which -a \"$cmd\" | grep -A1 \"^$0\\$\" | grep -v \"^$0\\$\" || true)\n",
            "description": "This function is useful in shim scripts that want to modify the behavior of an existing command.\nThe shim script must be placed in a top priority PATH.\nIt can then call this function to get the path to the actual executable it is shadowing.\n",
            "name": "get_next_in_path",
            "references": [
               {
                  "title": "common-utils Devcontainer Feature",
                  "url": "https://github.com/devcontainers/features/blob/6654579de4c31cd9f9f9e19e873521f502403929/src/common-utils/bin/code#L3-L5"
               }
            ],
            "return": [
               {
                  "name": "next_exec_filepath",
                  "summary": "Full path to the next executable in PATH.",
                  "type": "string",
                  "variable": "next"
               }
            ],
            "summary": "Get the full path to the next executable in PATH with the same name as current script."
         },
         "get_script_dir": {
            "body": "local script_dir=\"$(dirname \"$(realpath \"${BASH_SOURCE[0]}\")\")\"\n",
            "description": "This function returns the directory of the script\nthat is currently being executed.\nIt uses the `realpath` command to resolve any symbolic links\nand returns the absolute path to the script's directory.\nThis is useful for scripts that need to reference files\nrelative to their own location.\n",
            "name": "get_script_dir",
            "return": [
               {
                  "name": "script_dir",
                  "summary": "Absolute directory path of the current running script.",
                  "type": "string",
                  "variable": "script_dir"
               }
            ],
            "summary": "Get the directory of the current running script."
         },
         "git_clone": {
            "body": "mkdir -p \"$dir\"\ngit clone --depth=1 \\\n    -c core.eol=lf \\\n    -c core.autocrlf=false \\\n    -c fsck.zeroPaddedFilemode=ignore \\\n    -c fetch.fsck.zeroPaddedFilemode=ignore \\\n    -c receive.fsck.zeroPaddedFilemode=ignore \\\n    \"$url\" \\\n    \"$dir\" 2>&1\n(cd \"$dir\" && git repack -a -d -f --depth=1 --window=1)\n",
            "description": "Clone a Git repository from a specified URL\ninto a specified directory.\n",
            "name": "git_clone",
            "parameter": {
               "dir": {
                  "array_delimiter": " :: ",
                  "summary": "Path to the directory to clone the repository into.",
                  "type": "string",
                  "validation": {
                     "path_existence": {
                        "must_exist": false,
                        "type": "dir"
                     }
                  }
               },
               "url": {
                  "array_delimiter": " :: ",
                  "summary": "URL of the Git repository to clone.",
                  "type": "string"
               }
            },
            "references": [
               {
                  "title": "Git clone documentation",
                  "url": "https://git-scm.com/docs/git-clone"
               }
            ],
            "summary": "Clone a Git repository."
         },
         "make_parent_dirs": {
            "body": "local dir_path=$(dirname \"$filepath\")\nif [ ! -d \"$dir_path\" ]; then\n    mkdir -p \"$dir_path\"\n    echo \"Created parent directory: $dir_path\"\nfi\n",
            "name": "make_parent_dirs",
            "parameter": {
               "filepath": {
                  "array_delimiter": " :: ",
                  "description": "This is the path to the file for which\nthe parent directories should be created.\n",
                  "summary": "Path to the file.",
                  "type": "string"
               }
            },
            "summary": "Create missing parent directories for a given filepath."
         },
         "prepend_slash": {
            "body": "local modified_path=\"$path\"\nif [[ \"$modified_path\" != /* ]]; then\n    modified_path=\"/$modified_path\"\nfi\n",
            "name": "prepend_slash",
            "parameter": {
               "path": {
                  "array_delimiter": " :: ",
                  "description": "This is the path to modify.\nIt will be prepended with a slash if it doesn't already start with one.\n",
                  "summary": "Path to modify.",
                  "type": "string"
               }
            },
            "return": [
               {
                  "name": "modified_path",
                  "summary": "Modified path.",
                  "type": "string",
                  "variable": "modified_path"
               }
            ],
            "summary": "Prepend a slash to a path if it doesn't already start with one."
         }
      }
   },
   "devcontainer_main": {
      "apt": {
         "apt-utils": {
            "description": "Provides internal APT tools used by frontends like apt-get and\naptitude. It enables progress reporting and other features.\nRecommended for interactive or scripted environments.\n",
            "group": "required",
            "name": "apt-utils",
            "notes": "Included in the [`common-utils`](https://github.com/devcontainers/features/blob/main/src/common-utils/main.sh) devcontainer feature.\n",
            "spec": {
               "full": "apt-utils",
               "name": "apt-utils"
            },
            "summary": "APT utilities for package management.",
            "url": {
               "docs": "https://manpages.ubuntu.com/manpages/noble/en/man8/apt-get.8.html",
               "package": "https://packages.ubuntu.com/noble/apt-utils",
               "source": "https://salsa.debian.org/apt-team/apt"
            }
         },
         "autoconf": {
            "description": "Autoconf is a tool for producing shell scripts that automatically\nconfigure software source code packages to adapt to many kinds of\nUnix-like systems. It is essential for building software from\nsource that uses the GNU build system.\n",
            "group": "recommended",
            "name": "autoconf",
            "spec": {
               "full": "autoconf",
               "name": "autoconf"
            },
            "summary": "Tool for generating configure scripts for building software.",
            "url": {
               "docs": "https://www.gnu.org/software/autoconf/manual/autoconf.html",
               "package": "https://packages.debian.org/autoconf",
               "source": "https://git.savannah.gnu.org/git/autoconf.git"
            }
         },
         "automake": {
            "description": "Automake is a tool for automatically generating Makefile.in files\ncompliant with the GNU Coding Standards. It is used in conjunction\nwith Autoconf to create portable and configurable build systems.\n",
            "group": "recommended",
            "name": "automake",
            "spec": {
               "full": "automake",
               "name": "automake"
            },
            "summary": "Tool for automatically generating Makefile.in files.",
            "url": {
               "docs": "https://www.gnu.org/software/automake/manual/automake.html",
               "package": "https://packages.debian.org/automake",
               "source": "https://git.savannah.gnu.org/git/automake.git"
            }
         },
         "bash-completion": {
            "description": "Adds intelligent tab-completion for Bash commands and arguments.\nUseful for interactive shell users.\n",
            "group": "recommended",
            "name": "bash-completion",
            "notes": "Included in the [`common-utils`](https://github.com/devcontainers/features/blob/main/src/common-utils/main.sh) devcontainer feature.\n",
            "spec": {
               "full": "bash-completion",
               "name": "bash-completion"
            },
            "summary": "Programmable completion for the Bash shell.",
            "url": {
               "docs": "https://github.com/scop/bash-completion",
               "package": "https://packages.ubuntu.com/noble/bash-completion",
               "source": "https://salsa.debian.org/debian/bash-completion"
            }
         },
         "build-essential": {
            "dependents": [
               "git"
            ],
            "description": "The 'build-essential' package is a meta-package that installs a\ncollection of packages necessary for compiling software on Ubuntu.\nIt includes the GNU Compiler Collection (gcc and g++), make, and\nother tools required for building Debian packages and compiling\nsoftware from source. This package simplifies the setup of a\ndevelopment environment by ensuring all essential compilation tools\nare installed.\n",
            "group": "required",
            "name": "build-essential",
            "spec": {
               "full": "build-essential",
               "name": "build-essential"
            },
            "summary": "Meta-package for essential compilation tools on Ubuntu.",
            "url": {
               "docs": "https://itsfoss.com/build-essential-ubuntu/",
               "package": "https://packages.debian.org/build-essential"
            }
         },
         "bzip2": {
            "description": "bzip2 is a freely available, patent-free, high-quality data\ncompressor. It compresses files using the Burrows-Wheeler block\nsorting text compression algorithm and Huffman coding.\n",
            "group": "required",
            "name": "bzip2",
            "spec": {
               "full": "bzip2",
               "name": "bzip2"
            },
            "summary": "High-quality data compressor.",
            "url": {
               "docs": "https://manpages.ubuntu.com/manpages/noble/en/man1/bzip2.1.html",
               "package": "https://packages.debian.org/bzip2",
               "source": "https://sourceware.org/git/bzip2.git"
            }
         },
         "ca-certificates": {
            "description": "This package installs a set of trusted Certificate Authority (CA)\ncertificates used by SSL/TLS applications to verify the authenticity\nof remote servers. It is essential for secure HTTPS communication,\nensuring that tools like curl and wget can establish trusted\nconnections. Without it, many secure operations would fail due to\nuntrusted certificates.\n",
            "group": "required",
            "name": "ca-certificates",
            "spec": {
               "full": "ca-certificates",
               "name": "ca-certificates"
            },
            "summary": "Common CA certificates for HTTPS and TLS validation.",
            "url": {
               "docs": "https://manpages.ubuntu.com/manpages/noble/man8/update-ca-certificates.8.html",
               "package": "https://packages.debian.org/ca-certificates"
            }
         },
         "clang": {
            "description": "Clang is a compiler for C, C++, and Objective-C languages,\noffering fast compilation and expressive diagnostics. It is part\nof the LLVM project and is designed to be highly compatible with\nGCC. Clang is essential for developers who require a modern,\nstandards-compliant compiler with excellent tooling support.\n",
            "group": "essential",
            "name": "clang",
            "spec": {
               "full": "clang",
               "name": "clang"
            },
            "summary": "C, C++, and Objective-C compiler based on LLVM.",
            "url": {
               "docs": "https://clang.llvm.org/docs/",
               "package": "https://packages.ubuntu.com/noble/clang",
               "source": "https://github.com/llvm/llvm-project"
            }
         },
         "cmake": {
            "description": "CMake is a tool that manages the build process in an operating\nsystem and compiler-independent manner. It uses configuration\nfiles to generate native build environments, such as Makefiles\nor Visual Studio project files. CMake is essential for building\ncomplex software projects, especially those that are cross-platform.\n",
            "group": "essential",
            "name": "cmake",
            "spec": {
               "full": "cmake",
               "name": "cmake"
            },
            "summary": "Cross-platform build system generator.",
            "url": {
               "docs": "https://cmake.org/documentation/",
               "package": "https://packages.ubuntu.com/noble/cmake",
               "source": "https://gitlab.kitware.com/cmake/cmake"
            }
         },
         "cppcheck": {
            "description": "Cppcheck is a static analysis tool that detects bugs and\nstylistic issues in C/C++ code. It focuses on finding undefined\nbehavior and dangerous coding constructs. Cppcheck is recommended\nfor developers aiming to improve code quality and maintainability.\n",
            "group": "recommended",
            "name": "cppcheck",
            "spec": {
               "full": "cppcheck",
               "name": "cppcheck"
            },
            "summary": "Static analysis tool for C/C++ code.",
            "url": {
               "docs": "https://cppcheck.sourceforge.io/manual.pdf",
               "package": "https://packages.ubuntu.com/noble/cppcheck",
               "source": "https://github.com/danmar/cppcheck"
            }
         },
         "curl": {
            "description": "curl is a versatile tool for transferring data from or to a server,\nsupporting various protocols including HTTP, HTTPS, FTP, and more.\nIt's widely used in scripts and applications for downloading files,\ninteracting with APIs, and testing endpoints. In a development\nenvironment, it's indispensable for tasks like fetching dependencies\nor testing web services.\n",
            "group": "required",
            "name": "curl",
            "spec": {
               "full": "curl",
               "name": "curl"
            },
            "summary": "Command-line tool for transferring data with URL syntax.",
            "url": {
               "docs": "https://curl.se/docs/",
               "package": "https://packages.debian.org/curl",
               "source": "https://github.com/curl/curl"
            }
         },
         "default-jre": {
            "dependents": [
               "tex"
            ],
            "description": "This package serves as a metapackage that depends on the\nrecommended Java Runtime Environment for Ubuntu, which is\nOpenJDK 21 in Noble. It's useful for running Java applications\nand is commonly required for Java-based development tools.\n",
            "group": "essential",
            "name": "default-jre",
            "spec": {
               "full": "default-jre",
               "name": "default-jre"
            },
            "summary": "Standard Java Runtime Environment (OpenJDK 21).",
            "url": {
               "docs": "https://ubuntu.com/tutorials/install-jre",
               "package": "https://packages.debian.org/default-jre"
            }
         },
         "default-libmysqlclient-dev": {
            "description": "This package provides the development files for the MySQL client\nlibrary. It is used for compiling software that interacts with\nMySQL databases.\n",
            "group": "recommended",
            "name": "default-libmysqlclient-dev",
            "spec": {
               "full": "default-libmysqlclient-dev",
               "name": "default-libmysqlclient-dev"
            },
            "summary": "MySQL database development files.",
            "url": {
               "docs": "https://dev.mysql.com/doc/",
               "package": "https://packages.debian.org/default-libmysqlclient-dev",
               "source": "https://salsa.debian.org/mariadb-team/mysql-defaults"
            }
         },
         "dialog": {
            "description": "The 'dialog' package allows shell scripts to present\ninteractive dialog boxes, such as menus, input boxes, and\nmessage boxes, in a terminal interface. It is useful for\ncreating user-friendly command-line interfaces. While not\nessential, it is recommended for scripts that require user\ninteraction.\n",
            "group": "recommended",
            "name": "dialog",
            "notes": "Included in the [`common-utils`](https://github.com/devcontainers/features/blob/main/src/common-utils/main.sh) devcontainer feature.\n",
            "spec": {
               "full": "dialog",
               "name": "dialog"
            },
            "summary": "Display user-friendly dialog boxes from shell scripts.",
            "url": {
               "docs": "https://invisible-island.net/dialog/dialog.html",
               "package": "https://packages.ubuntu.com/noble/dialog",
               "source": "https://salsa.debian.org/debian/dialog"
            }
         },
         "dirmngr": {
            "description": "Handles network operations for GnuPG, such as retrieving\ncertificates and CRLs. Required for managing keys and verifying\nsignatures from keyservers.\n",
            "group": "essential",
            "name": "dirmngr",
            "notes": "Included in the [`common-utils`](https://github.com/devcontainers/features/blob/main/src/common-utils/main.sh) devcontainer feature.\n",
            "spec": {
               "full": "dirmngr",
               "name": "dirmngr"
            },
            "summary": "Network certificate management service for GnuPG.",
            "url": {
               "docs": "https://gnupg.org/documentation/manuals/gnupg/",
               "package": "https://packages.ubuntu.com/noble/dirmngr",
               "source": "https://dev.gnupg.org/source/dirmngr/"
            }
         },
         "dpkg-dev": {
            "description": "The dpkg-dev package contains the tools necessary to unpack,\nbuild, and upload Debian source packages. It includes programs\nlike dpkg-source and dpkg-buildpackage.\n",
            "group": "essential",
            "name": "dpkg-dev",
            "spec": {
               "full": "dpkg-dev",
               "name": "dpkg-dev"
            },
            "summary": "Debian package development tools.",
            "url": {
               "docs": "https://manpages.ubuntu.com/manpages/noble/en/man1/dpkg-buildpackage.1.html",
               "package": "https://packages.debian.org/dpkg-dev",
               "source": "https://salsa.debian.org/dpkg-team/dpkg"
            }
         },
         "equivs": {
            "dependents": [
               "tex"
            ],
            "description": "The 'equivs' package provides utilities to create minimal Debian\npackages, often containing only dependency information. This is\nparticularly useful for creating metapackages that declare\ndependencies on other packages, facilitating the installation of\ncustom package sets. It can also be employed to satisfy\ndependencies for packages not available in the repositories or\nto override existing package dependencies.\n",
            "group": "required",
            "name": "equivs",
            "notes": "This is required for the TeX Live installation in the Dockerfile.\n",
            "spec": {
               "full": "equivs",
               "name": "equivs"
            },
            "summary": "Tool for creating custom Debian packages to manage dependencies.",
            "url": {
               "docs": "https://manpages.ubuntu.com/manpages/noble/en/man1/equivs-build.1.html",
               "package": "https://packages.ubuntu.com/noble/equivs",
               "source": "https://salsa.debian.org/perl-team/modules/packages/equivs.git"
            }
         },
         "file": {
            "description": "The file command tests each argument in an attempt to classify it.\nIt uses a magic number database to identify file types.\n",
            "group": "essential",
            "name": "file",
            "spec": {
               "full": "file",
               "name": "file"
            },
            "summary": "Determines file type using magic numbers.",
            "url": {
               "docs": "https://manpages.ubuntu.com/manpages/noble/en/man1/file.1.html",
               "package": "https://packages.debian.org/file",
               "source": "https://github.com/file/file"
            }
         },
         "fish": {
            "description": "Fish (Friendly Interactive SHell) is a modern command-line shell\nfocused on user experience and interactivity. It offers features\nlike autosuggestions, syntax highlighting, and advanced tab\ncompletion out of the box. Unlike traditional shells, fish is not\nPOSIX-compliant, which may affect compatibility with some scripts.\nIt is optional and primarily used by users seeking an enhanced\ninteractive shell experience.\n",
            "group": "optional",
            "name": "fish",
            "post_install": "# Setup Fish\n# - https://github.com/devcontainers/images/blob/0f13a9b8a31b9c81be78abfc404cc00748e946bb/src/universal/.devcontainer/Dockerfile#L85-L88\nFISH_PROMPT=\"function fish_prompt\\n    set_color green\\n    echo -n (whoami)\\n    set_color normal\\n    echo -n \\\":\\\"\\n    set_color blue\\n    echo -n (pwd)\\n    set_color normal\\n    echo -n \\\"> \\\"\\nend\\n\";\nprintf \"$FISH_PROMPT\" >> /etc/fish/functions/fish_prompt.fish;\nprintf \"if type code-insiders > /dev/null 2>&1; and not type code > /dev/null 2>&1\\n  alias code=code-insiders\\nend\" >> /etc/fish/conf.d/code_alias.fish;\n",
            "spec": {
               "full": "fish",
               "name": "fish"
            },
            "summary": "User-friendly interactive Unix shell.",
            "url": {
               "docs": "https://fishshell.com/docs/current/",
               "package": "https://packages.debian.org/fish",
               "source": "https://github.com/fish-shell/fish-shell"
            }
         },
         "fontconfig": {
            "dependents": [
               "tex"
            ],
            "description": "Fontconfig is a library designed to provide system-wide font\nconfiguration, customization, and application access. It is\nessential for applications that require font discovery and\nconfiguration, especially in graphical environments.\n",
            "group": "essential",
            "name": "fontconfig",
            "spec": {
               "full": "fontconfig",
               "name": "fontconfig"
            },
            "summary": "Font configuration and customization library.",
            "url": {
               "docs": "https://manpages.ubuntu.com/manpages/noble/en/man5/fonts-conf.5.html",
               "package": "https://packages.debian.org/fontconfig"
            }
         },
         "fonts-freefont-otf": {
            "description": "The 'fonts-freefont-otf' package provides the GNU FreeFont\ncollection, which includes FreeSerif, FreeSans, and FreeMono\nOpenType fonts. These fonts offer extensive coverage of the\nUnicode character set, supporting various scripts and symbols.\nWhile valuable for applications requiring broad Unicode support,\nthis package is optional and primarily used in contexts where\ncomprehensive font coverage is necessary.\n",
            "group": "optional",
            "name": "fonts-freefont-otf",
            "notes": "Included in the [Sphinx Docker image](https://github.com/sphinx-doc/sphinx-docker-images/blob/master/latexpdf/Dockerfile).\n",
            "spec": {
               "full": "fonts-freefont-otf",
               "name": "fonts-freefont-otf"
            },
            "summary": "Free high-quality OpenType fonts covering the UCS character set.",
            "url": {
               "docs": "https://www.gnu.org/software/freefont/",
               "package": "https://packages.ubuntu.com/noble/fonts-freefont-otf",
               "source": "https://savannah.gnu.org/projects/freefont/"
            }
         },
         "g++": {
            "description": "g++ is the GNU C++ compiler, part of the GNU Compiler Collection\n(GCC). It is used to compile C++ programs.\n",
            "group": "required",
            "name": "g++",
            "spec": {
               "full": "g++",
               "name": "g++"
            },
            "summary": "GNU C++ compiler.",
            "url": {
               "docs": "https://gcc.gnu.org/onlinedocs/gcc/",
               "package": "https://packages.debian.org/g++",
               "source": "https://gcc.gnu.org/git.html"
            }
         },
         "gcc": {
            "description": "gcc is the GNU C compiler, part of the GNU Compiler Collection\n(GCC). It is used to compile C programs.\n",
            "group": "required",
            "name": "gcc",
            "spec": {
               "full": "gcc",
               "name": "gcc"
            },
            "summary": "GNU C compiler.",
            "url": {
               "docs": "https://gcc.gnu.org/onlinedocs/gcc/",
               "package": "https://packages.debian.org/gcc",
               "source": "https://gcc.gnu.org/git.html"
            }
         },
         "gdb": {
            "description": "GDB is the GNU Project debugger, allowing developers to see what\nis happening inside a program while it executes or what it was\ndoing at the moment it crashed. It supports various programming\nlanguages, including C, C++, and Fortran. GDB is essential for\ndebugging applications and analyzing program behavior.\n",
            "group": "essential",
            "name": "gdb",
            "spec": {
               "full": "gdb",
               "name": "gdb"
            },
            "summary": "GNU Debugger for debugging applications.",
            "url": {
               "docs": "https://sourceware.org/gdb/documentation/",
               "package": "https://packages.ubuntu.com/noble/gdb",
               "source": "https://sourceware.org/git/binutils-gdb.git"
            }
         },
         "gettext": {
            "dependents": [
               "git"
            ],
            "description": "gettext provides a set of tools and libraries for internationalizing\nand localizing software. It enables programs to be translated into\ndifferent languages, facilitating global software distribution.\nThis package is essential for developing applications that support\nmultiple languages and locales.\n",
            "group": "essential",
            "name": "gettext",
            "spec": {
               "full": "gettext",
               "name": "gettext"
            },
            "summary": "GNU Internationalization utilities.",
            "url": {
               "docs": "https://www.gnu.org/software/gettext/manual/",
               "package": "https://packages.ubuntu.com/noble/gettext",
               "source": "https://git.savannah.gnu.org/git/gettext.git"
            }
         },
         "ghostscript": {
            "dependents": [
               "tex"
            ],
            "description": "Ghostscript is a versatile processor for PostScript and PDF files,\nenabling rendering, conversion, and printing tasks. It serves as a\nbackend for applications like ghostview and is capable of displaying\ndocuments in X11 environments. Additionally, it can render files for\nprinting on non-PostScript printers, supporting various printer models.\nWhile not essential for all development environments, it's recommended\nfor projects involving document processing or printing functionalities.\n",
            "group": "recommended",
            "name": "ghostscript",
            "notes": "Required for eps conversion (see [Island of Tex Dockerfile](https://gitlab.com/islandoftex/images/texlive/-/blob/72240db12e00510972aeea19cd0a08edc22c4152/Dockerfile.base#L26)).\n",
            "spec": {
               "full": "ghostscript",
               "name": "ghostscript"
            },
            "summary": "Interpreter for PostScript and PDF formats.",
            "url": {
               "docs": "https://www.ghostscript.com/doc/current/",
               "package": "https://packages.ubuntu.com/noble/ghostscript",
               "source": "https://github.com/ArtifexSoftware/ghostpdl"
            }
         },
         "gnupg": {
            "description": "GnuPG is a complete and free implementation of the OpenPGP standard,\nallowing for encryption and signing of data and communications.\nIt's crucial for verifying the integrity of downloaded packages\nand repositories, especially when adding third-party sources\nor installing software from external sources.\n",
            "group": "required",
            "name": "gnupg",
            "spec": {
               "full": "gnupg",
               "name": "gnupg"
            },
            "summary": "GNU Privacy Guard - encryption and signing tool.",
            "url": {
               "docs": "https://gnupg.org/documentation/index.html",
               "package": "https://packages.debian.org/gnupg"
            }
         },
         "gnuplot-nox": {
            "dependents": [
               "tex"
            ],
            "description": "gnuplot-nox is a terminal-based variant of the gnuplot utility,\ndesigned for environments without an X server. It enables the\ncreation of 2D and 3D plots, supporting various output formats\nsuch as PostScript, PDF, PNG, and SVG. This version excludes\ngraphical interfaces like X11 or Qt, making it suitable for\nheadless systems or automated workflows. It's particularly\nbeneficial in development environments where graphical output\nisn't required, and plotting needs to be integrated into scripts\nor pipelines.\n",
            "group": "recommended",
            "name": "gnuplot-nox",
            "notes": "Required for 'gnuplot' backend of 'pgfplots' in TeX (see [Island of Tex Dockerfile](https://gitlab.com/islandoftex/images/texlive/-/blob/72240db12e00510972aeea19cd0a08edc22c4152/Dockerfile.base#L32)).\n",
            "spec": {
               "full": "gnuplot-nox",
               "name": "gnuplot-nox"
            },
            "summary": "Command-line driven interactive plotting program.",
            "url": {
               "docs": "https://gnuplot.info/documentation.html",
               "package": "https://packages.ubuntu.com/noble/gnuplot-nox",
               "source": "https://launchpad.net/ubuntu/noble/+source/gnuplot"
            }
         },
         "gpg": {
            "dependents": [
               "tex"
            ],
            "description": "GnuPG (GPG) is a complete and free implementation of the OpenPGP\nstandard, providing encryption and signing services for data and\ncommunications. It features comprehensive key management and\nsupports modern encryption algorithms. GPG is essential for secure\ncommunications, verifying software signatures, and managing\ncryptographic keys in development environments.\n",
            "group": "required",
            "name": "gpg",
            "spec": {
               "full": "gpg",
               "name": "gpg"
            },
            "summary": "OpenPGP encryption and signing tool.",
            "url": {
               "docs": "https://manpages.ubuntu.com/manpages/noble/en/man1/gpg.1.html",
               "package": "https://packages.debian.org/gpg",
               "source": "https://github.com/gpg/gnupg"
            }
         },
         "gpg-agent": {
            "dependents": [
               "tex"
            ],
            "description": "gpg-agent is a background process that manages private keys and\ncaches passphrases for GnuPG. It operates independently of any\nprotocol and is used as a backend for gpg and other utilities. The\nagent is automatically started on demand by GnuPG components,\neliminating the need for manual initiation. It also supports SSH\nauthentication, allowing it to act as an SSH agent.\n",
            "group": "required",
            "name": "gpg-agent",
            "spec": {
               "full": "gpg-agent",
               "name": "gpg-agent"
            },
            "summary": "Daemon for managing private keys and passphrase caching.",
            "url": {
               "docs": "https://manpages.ubuntu.com/manpages/noble/en/man1/gpg-agent.1.html",
               "package": "https://packages.debian.org/gpg-agent",
               "source": "https://github.com/gpg/gnupg"
            }
         },
         "graphviz": {
            "description": "Graphviz is a powerful tool for creating visual\nrepresentations of abstract graphs and networks. It\nautomatically generates diagrams from textual descriptions\nusing the DOT language. This is particularly useful for\ndevelopers and researchers who need to visualize data\nstructures, workflows, or relationships. While not essential\nfor all development environments, it is recommended for\nthose requiring graphical representations of complex\nsystems.\n",
            "group": "recommended",
            "name": "graphviz",
            "notes": "Included in the [Sphinx Docker image](https://github.com/sphinx-doc/sphinx-docker-images/blob/master/latexpdf/Dockerfile).\n",
            "spec": {
               "full": "graphviz",
               "name": "graphviz"
            },
            "summary": "Graph visualization software.",
            "url": {
               "docs": "https://graphviz.org/documentation/",
               "package": "https://packages.ubuntu.com/noble/graphviz",
               "source": "https://gitlab.com/graphviz/graphviz"
            }
         },
         "htop": {
            "description": "htop is an interactive process viewer that provides a\nreal-time, colorized display of system processes. It\nallows users to scroll through the process list\nvertically and horizontally, and to perform actions\nsuch as killing or renicing processes without entering\ntheir PIDs. While not essential, it is recommended for\nusers who require a more user-friendly alternative to\nthe traditional 'top' command.\n",
            "group": "recommended",
            "name": "htop",
            "notes": "Included in the [`common-utils`](https://github.com/devcontainers/features/blob/main/src/common-utils/main.sh) devcontainer feature.\n",
            "spec": {
               "full": "htop",
               "name": "htop"
            },
            "summary": "Interactive process viewer for Unix systems.",
            "url": {
               "docs": "https://htop.dev/",
               "package": "https://packages.ubuntu.com/noble/htop",
               "source": "https://github.com/htop-dev/htop"
            }
         },
         "imagemagick": {
            "description": "ImageMagick is a software suite to create, edit, compose, or\nconvert bitmap images. It can read and write images in a variety\nof formats.\n",
            "group": "recommended",
            "name": "imagemagick",
            "notes": "Included in the [Sphinx Docker image](https://github.com/sphinx-doc/sphinx-docker-images/blob/master/latexpdf/Dockerfile).\n",
            "spec": {
               "full": "imagemagick",
               "name": "imagemagick"
            },
            "summary": "Image manipulation tools.",
            "url": {
               "docs": "https://imagemagick.org/script/resources.php",
               "package": "https://packages.ubuntu.com/noble/imagemagick",
               "source": "https://github.com/ImageMagick/ImageMagick"
            }
         },
         "init-system-helpers": {
            "description": "Provides key scripts (`service`, `invoke-rc.d`, etc.) used by\nDebian-based systems to manage services and maintain\ncompatibility across different init systems (systemd, SysV,\netc.). Essential for correct package installation and service\nhandling during boot and runtime.\n",
            "group": "essential",
            "name": "init-system-helpers",
            "notes": "Included in the [`common-utils`](https://github.com/devcontainers/features/blob/main/src/common-utils/main.sh) devcontainer feature.\n",
            "spec": {
               "full": "init-system-helpers",
               "name": "init-system-helpers"
            },
            "summary": "Tools for managing compatibility across init systems.",
            "url": {
               "docs": "https://manpages.ubuntu.com/manpages/noble/en/man8/service.8.html",
               "package": "https://packages.ubuntu.com/noble/init-system-helpers",
               "source": "https://salsa.debian.org/debian/init-system-helpers"
            }
         },
         "inotify-tools": {
            "description": "inotify-tools provides command-line programs for using inotify,\na Linux kernel subsystem that monitors file system events. Tools\nlike inotifywait and inotifywatch allow scripts and applications\nto respond to file changes in real-time. This package is recommended\nfor automating tasks that depend on file system events.\n",
            "group": "recommended",
            "name": "inotify-tools",
            "spec": {
               "full": "inotify-tools",
               "name": "inotify-tools"
            },
            "summary": "Command-line utilities for inotify.",
            "url": {
               "docs": "https://github.com/inotify-tools/inotify-tools",
               "package": "https://packages.ubuntu.com/noble/inotify-tools",
               "source": "https://github.com/inotify-tools/inotify-tools"
            }
         },
         "iproute2": {
            "description": "Provides tools like 'ip' and 'tc' for configuring network\ninterfaces and managing routing. Essential for network setup and\ndiagnostics.\n",
            "group": "required",
            "name": "iproute2",
            "notes": "Included in the [`common-utils`](https://github.com/devcontainers/features/blob/main/src/common-utils/main.sh) devcontainer feature.\n",
            "spec": {
               "full": "iproute2",
               "name": "iproute2"
            },
            "summary": "Networking and traffic control utilities.",
            "url": {
               "docs": "https://man7.org/linux/man-pages/man8/ip.8.html",
               "package": "https://packages.ubuntu.com/noble/iproute2",
               "source": "https://git.kernel.org/pub/scm/network/iproute2/iproute2.git"
            }
         },
         "jq": {
            "description": "jq is a lightweight and flexible command-line tool for processing\nJSON data. It allows for parsing, filtering, mapping, and\ntransforming structured JSON input, making it invaluable for\ndevelopers and system administrators working with APIs, logs, or\nconfiguration files. jq's powerful query language enables complex\ndata manipulations directly from the command line. It is essential\nin environments where JSON data handling is a routine task.\n",
            "group": "required",
            "name": "jq",
            "spec": {
               "full": "jq",
               "name": "jq"
            },
            "summary": "Command-line JSON processor.",
            "url": {
               "docs": "https://stedolan.github.io/jq/manual/",
               "package": "https://packages.ubuntu.com/noble/jq",
               "source": "https://github.com/stedolan/jq"
            }
         },
         "less": {
            "description": "The 'less' command is a terminal pager that allows users to\nview the contents of text files one screen at a time. Unlike\ntraditional text editors, 'less' does not load the entire file\ninto memory, making it efficient for viewing large files. It\nsupports both forward and backward navigation, search\nfunctionality, and various display options. 'less' is commonly\nused in conjunction with other commands to paginate output,\nmaking it an essential tool for command-line environments.\n",
            "group": "essential",
            "name": "less",
            "notes": "Included in the [`common-utils`](https://github.com/devcontainers/features/blob/main/src/common-utils/main.sh) devcontainer feature.\n",
            "spec": {
               "full": "less",
               "name": "less"
            },
            "summary": "Terminal pager for viewing text one screen at a time.",
            "url": {
               "docs": "https://man7.org/linux/man-pages/man1/less.1.html",
               "package": "https://packages.ubuntu.com/noble/less",
               "source": "https://github.com/gwsw/less"
            }
         },
         "libatk-bridge2.0-0": {
            "description": "libatk-bridge2.0-0 provides a bridge between ATK (Accessibility Toolkit)\nand the Assistive Technology Service Provider Interface (AT-SPI).\nIt enables accessibility tools to interact with applications using the ATK framework.\nThis package is required for accessibility support in GTK applications.\n",
            "group": "recommended",
            "name": "libatk-bridge2.0-0",
            "spec": {
               "full": "libatk-bridge2.0-0",
               "name": "libatk-bridge2.0-0"
            },
            "summary": "AT-SPI 2 toolkit bridge.",
            "url": {
               "docs": "https://wiki.gnome.org/Accessibility",
               "package": "https://packages.ubuntu.com/noble/libatk-bridge2.0-0",
               "source": "https://gitlab.gnome.org/GNOME/at-spi2-atk"
            }
         },
         "libatk1.0-0": {
            "description": "libatk1.0-0 provides the ATK (Accessibility Toolkit) library,\nwhich offers a set of interfaces for accessibility.\nIt allows assistive technologies to interact with applications.\nThis package is required for applications that support accessibility features.\n",
            "group": "recommended",
            "name": "libatk1.0-0",
            "spec": {
               "full": "libatk1.0-0",
               "name": "libatk1.0-0"
            },
            "summary": "ATK accessibility toolkit.",
            "url": {
               "docs": "https://developer.gnome.org/atk/",
               "package": "https://packages.ubuntu.com/noble/libatk1.0-0",
               "source": "https://gitlab.gnome.org/GNOME/atk"
            }
         },
         "libbz2-dev": {
            "description": "This package provides the headers and static libraries for the\nbzip2 compression library, which implements the Burrows-Wheeler\nblock-sorting text compression algorithm. It's essential for\ncompiling software that uses bzip2 compression, commonly found in\nsource archives and data processing tools.\n",
            "group": "essential",
            "name": "libbz2-dev",
            "spec": {
               "full": "libbz2-dev",
               "name": "libbz2-dev"
            },
            "summary": "Development files for the bzip2 compression library.",
            "url": {
               "docs": "https://manpages.ubuntu.com/manpages/noble/en/man3/bzlib.3.html",
               "package": "https://packages.ubuntu.com/noble/libbz2-dev",
               "source": "https://sourceware.org/git/bzip2.git"
            }
         },
         "libc6": {
            "description": "The 'libc6' package provides the standard C library, a core\ncomponent of the GNU system and the GNU/Linux systems. It defines\nthe system calls and other basic functions necessary for building\nand running C programs. This package is fundamental to the\noperation of the system and is required for the execution of\nvirtually all programs.\n",
            "group": "required",
            "name": "libc6",
            "spec": {
               "full": "libc6",
               "name": "libc6"
            },
            "summary": "GNU C Library Shared libraries.",
            "url": {
               "docs": "https://www.gnu.org/software/libc/manual/",
               "package": "https://packages.debian.org/libc6",
               "source": "https://sourceware.org/git/glibc.git"
            }
         },
         "libc6-dev": {
            "description": "This package contains the headers and object files necessary for\ncompiling and linking programs that use the standard C library.\nIt's a fundamental component for building C programs and is\nrequired for most development environments.\n",
            "group": "required",
            "name": "libc6-dev",
            "spec": {
               "full": "libc6-dev",
               "name": "libc6-dev"
            },
            "summary": "Development files for the GNU C Library.",
            "url": {
               "docs": "https://www.gnu.org/software/libc/manual/",
               "package": "https://packages.debian.org/libc6-dev",
               "source": "https://sourceware.org/git/glibc.git"
            }
         },
         "libcups2": {
            "description": "libcups2 provides the core printing functionality for Unix-like\nsystems, enabling applications to print documents via the CUPS\nprinting system. While not essential for most development\nenvironments, it is recommended for applications that require\nprinting capabilities.\n",
            "group": "recommended",
            "name": "libcups2",
            "spec": {
               "full": "libcups2",
               "name": "libcups2"
            },
            "summary": "Common UNIX Printing System library.",
            "url": {
               "docs": "https://www.cups.org/doc/",
               "package": "https://packages.ubuntu.com/noble/libcups2",
               "source": "https://github.com/OpenPrinting/cups"
            }
         },
         "libcurl4-openssl-dev": {
            "dependents": [
               "git"
            ],
            "description": "This package provides the development files for libcurl compiled\nwith OpenSSL support. libcurl is a client-side URL transfer\nlibrary supporting various protocols, including HTTP, HTTPS, FTP,\nand more. It's widely used in applications that require data\ntransfer capabilities.\n",
            "group": "essential",
            "name": "libcurl4-openssl-dev",
            "spec": {
               "full": "libcurl4-openssl-dev",
               "name": "libcurl4-openssl-dev"
            },
            "summary": "Development files for libcurl with OpenSSL support.",
            "url": {
               "docs": "https://curl.se/libcurl/",
               "package": "https://packages.ubuntu.com/noble/libcurl4-openssl-dev",
               "source": "https://github.com/curl/curl"
            }
         },
         "libcurl4t64": {
            "dependents": [
               "tex"
            ],
            "description": "libcurl4t64 is the OpenSSL-flavored variant of libcurl provided in\nUbuntu 24.04 (Noble). It supports a wide array of protocols,\nincluding HTTP, HTTPS, FTP, FTPS, SCP, SFTP, LDAP, and more. This\npackage is part of the transition to the t64 ABI, ensuring\ncompatibility with 64-bit time_t, which is crucial for applications\nthat handle dates beyond 2038. It replaces the older libcurl4\npackage and is essential for network-enabled applications,\ndevelopment tools, and build processes that rely on libcurl for\ndata transfer capabilities.\n",
            "group": "required",
            "name": "libcurl4t64",
            "spec": {
               "full": "libcurl4t64",
               "name": "libcurl4t64"
            },
            "summary": "OpenSSL-based client-side URL transfer library for Ubuntu Noble.",
            "url": {
               "docs": "https://curl.se/libcurl/",
               "package": "https://packages.debian.org/libcurl4t64",
               "source": "https://github.com/curl/curl"
            }
         },
         "libdb-dev": {
            "description": "This package provides the headers and static libraries for the\nBerkeley DB library, a high-performance embedded database library.\nIt's used in applications that require a lightweight database\nengine. Its inclusion depends on specific project requirements.\n",
            "group": "optional",
            "name": "libdb-dev",
            "spec": {
               "full": "libdb-dev",
               "name": "libdb-dev"
            },
            "summary": "Development files for the Berkeley DB library.",
            "url": {
               "docs": "https://www.oracle.com/database/technologies/related/berkeleydb.html",
               "package": "https://packages.debian.org/libdb-dev",
               "source": "https://github.com/berkeleydb/libdb"
            }
         },
         "libdigest-perl-md5-perl": {
            "dependents": [
               "tex"
            ],
            "description": "This package provides a Perl-only implementation of the MD5\nhashing algorithm. It serves as a fallback when the faster\nDigest::MD5 module, which relies on compiled C code, is\nunavailable. It's primarily useful in environments lacking a\nC compiler or where installing compiled modules is not feasible.\n",
            "group": "recommended",
            "name": "libdigest-perl-md5-perl",
            "spec": {
               "full": "libdigest-perl-md5-perl",
               "name": "libdigest-perl-md5-perl"
            },
            "summary": "Pure Perl implementation of the MD5 algorithm.",
            "url": {
               "docs": "https://metacpan.org/pod/Digest::Perl::MD5",
               "package": "https://packages.ubuntu.com/noble/libdigest-perl-md5-perl",
               "source": "https://github.com/mschilli/digest-perl-md5"
            }
         },
         "libevent-dev": {
            "description": "This package provides the headers and static libraries for\nlibevent, an asynchronous event notification library.\nIt's useful for developing networked applications\nthat require high performance and scalability.\n",
            "group": "recommended",
            "name": "libevent-dev",
            "spec": {
               "full": "libevent-dev",
               "name": "libevent-dev"
            },
            "summary": "Development files for the libevent library.",
            "url": {
               "docs": "https://libevent.org/",
               "package": "https://packages.debian.org/libevent-dev",
               "source": "https://github.com/libevent/libevent"
            }
         },
         "libexpat1-dev": {
            "dependents": [
               "git"
            ],
            "description": "The 'libexpat1-dev' package provides the header files and\ndevelopment libraries for Expat, a fast, stream-oriented XML\nparser written in C. It enables developers to build\napplications that parse XML documents efficiently by\nregistering handlers that are called when the parser\nencounters specific structures in the XML. This package is\nessential for compiling software that depends on Expat for\nXML parsing functionality.\n",
            "group": "required",
            "name": "libexpat1-dev",
            "spec": {
               "full": "libexpat1-dev",
               "name": "libexpat1-dev"
            },
            "summary": "Development files for the Expat XML parser library.",
            "url": {
               "docs": "https://libexpat.github.io/",
               "package": "https://packages.ubuntu.com/noble/libexpat1-dev",
               "source": "https://launchpad.net/ubuntu/noble/+source/expat"
            }
         },
         "libffi-dev": {
            "description": "This package provides the headers and static libraries for libffi,\nwhich allows code written in one language to call code written in\nanother language. It's commonly used in dynamic language\ninterpreters and is essential for building such environments.\n",
            "group": "essential",
            "name": "libffi-dev",
            "spec": {
               "full": "libffi-dev",
               "name": "libffi-dev"
            },
            "summary": "Development files for the Foreign Function Interface library.",
            "url": {
               "docs": "https://sourceware.org/libffi/",
               "package": "https://packages.debian.org/libffi-dev",
               "source": "https://github.com/libffi/libffi"
            }
         },
         "libfile-homedir-perl": {
            "dependents": [
               "tex"
            ],
            "description": "This package provides the File::HomeDir Perl module, which offers\na cross-platform method to locate user directories such as home,\ndesktop, and documents. It's useful for Perl applications that\nneed to interact with user-specific directories in a\nplatform-independent manner.\n",
            "group": "essential",
            "name": "libfile-homedir-perl",
            "notes": "Required for `latexindent` (see [Island of Tex Dockerfile](https://gitlab.com/islandoftex/images/texlive/-/blob/72240db12e00510972aeea19cd0a08edc22c4152/Dockerfile.base#L24))\n",
            "spec": {
               "full": "libfile-homedir-perl",
               "name": "libfile-homedir-perl"
            },
            "summary": "Perl module for locating user directories across platforms.",
            "url": {
               "docs": "https://metacpan.org/pod/File::HomeDir",
               "package": "https://packages.debian.org/libfile-homedir-perl",
               "source": "https://salsa.debian.org/perl-team/modules/packages/libfile-homedir-perl.git"
            }
         },
         "libgbm1": {
            "description": "libgbm1 provides an abstraction for graphics buffer management,\nfacilitating efficient rendering operations. It is recommended\nfor applications that perform off-screen rendering or require\ndirect rendering capabilities.\n",
            "group": "recommended",
            "name": "libgbm1",
            "spec": {
               "full": "libgbm1",
               "name": "libgbm1"
            },
            "summary": "Generic Buffer Management API.",
            "url": {
               "docs": "https://docs.mesa3d.org/gbm.html",
               "package": "https://packages.ubuntu.com/noble/libgbm1",
               "source": "https://gitlab.freedesktop.org/mesa/mesa"
            }
         },
         "libgcc1": {
            "description": "The 'libgcc1' package contains GCC's internal support library,\nwhich provides low-level routines used by the compiler. These\nroutines are necessary for the proper functioning of programs\ncompiled with GCC, especially for exception handling and other\nruntime support. This package is essential for the execution of\nprograms compiled with GCC.\n",
            "group": "required",
            "name": "libgcc1",
            "spec": {
               "full": "libgcc1",
               "name": "libgcc1"
            },
            "summary": "GCC support library.",
            "url": {
               "docs": "https://gcc.gnu.org/onlinedocs/",
               "package": "https://packages.debian.org/libgcc1",
               "source": "https://gcc.gnu.org/git/gcc.git"
            }
         },
         "libgdbm-dev": {
            "description": "This package provides the headers and static libraries for the GNU\ndbm (gdbm) database library, which offers a simple database engine\nusing extendible hashing. It's used in applications that require\nsimple key-value storage.\n",
            "group": "optional",
            "name": "libgdbm-dev",
            "spec": {
               "full": "libgdbm-dev",
               "name": "libgdbm-dev"
            },
            "summary": "Development files for the GNU dbm database library.",
            "url": {
               "docs": "https://www.gnu.org/software/gdbm/",
               "package": "https://packages.debian.org/libgdbm-dev",
               "source": "https://git.savannah.gnu.org/git/gdbm.git"
            }
         },
         "libgdbm6t64": {
            "description": "The 'libgdbm6t64' package provides the GNU dbm (GDBM) database\nlibrary, compiled with 64-bit time_t support to accommodate the\ntime_t transition in Ubuntu 24.04 (Noble Numbat). This library\noffers a simple database engine for storing key-value pairs,\ncommonly used by various applications and programming languages\nfor persistent storage. The 't64' variant ensures compatibility\nwith systems and applications that utilize 64-bit time\nrepresentations, making it a required component in the Ubuntu\nNoble environment.\n",
            "group": "required",
            "name": "libgdbm6t64",
            "notes": "Recommended by `zsh` and included in the [`common-utils`](https://github.com/devcontainers/features/blob/main/src/common-utils/main.sh) devcontainer feature.\n",
            "spec": {
               "full": "libgdbm6t64",
               "name": "libgdbm6t64"
            },
            "summary": "GNU dbm database library with 64-bit time_t support.",
            "url": {
               "docs": "https://www.gnu.org.ua/software/gdbm/manual/",
               "package": "https://packages.ubuntu.com/noble/libgdbm6t64",
               "source": "https://git.savannah.gnu.org/git/gdbm.git"
            }
         },
         "libgdiplus": {
            "description": "libgdiplus is a Mono library that provides a GDI+-compatible API on\nnon-Windows operating systems. It enables applications developed\nwith .NET's System.Drawing namespace to function on Unix-like\nsystems by leveraging the Cairo graphics library for rendering.\nThis package is particularly useful for cross-platform .NET\napplications that require graphical capabilities. While not\nessential for all development environments, it is recommended for\nprojects involving Mono or cross-platform graphical applications.\n",
            "group": "recommended",
            "name": "libgdiplus",
            "notes": "Included in the dev container [universal image](https://github.com/devcontainers/images/blob/main/src/universal/.devcontainer/Dockerfile).\n",
            "spec": {
               "full": "libgdiplus",
               "name": "libgdiplus"
            },
            "summary": "Open-source implementation of the GDI+ API for Unix-like systems.",
            "url": {
               "docs": "https://www.mono-project.com/docs/gui/libgdiplus/",
               "package": "https://packages.debian.org/libgdiplus",
               "source": "https://github.com/mono/libgdiplus"
            }
         },
         "libgetopt-long-descriptive-perl": {
            "dependents": [
               "tex"
            ],
            "description": "This Perl module provides a wrapper for Getopt::Long, allowing\nfor easy definition of options and automatic generation of usage\nmessages. It's useful for Perl scripts that require complex\ncommand-line option parsing with descriptive help text.\n",
            "group": "essential",
            "name": "libgetopt-long-descriptive-perl",
            "spec": {
               "full": "libgetopt-long-descriptive-perl",
               "name": "libgetopt-long-descriptive-perl"
            },
            "summary": "Perl module for command-line option parsing with usage text.",
            "url": {
               "docs": "https://metacpan.org/pod/Getopt::Long::Descriptive",
               "package": "https://packages.debian.org/libgetopt-long-descriptive-perl",
               "source": "https://github.com/deepin-community/libgetopt-long-descriptive-perl"
            }
         },
         "libglib2.0-dev": {
            "description": "This package provides the headers and static libraries for GLib,\na low-level core library that forms the basis for projects such\nas GTK+ and GNOME. It provides data structure handling, portability\nwrappers, and interfaces for such runtime functionality as an event\nloop, threads, dynamic loading, and an object system.\n",
            "group": "essential",
            "name": "libglib2.0-dev",
            "spec": {
               "full": "libglib2.0-dev",
               "name": "libglib2.0-dev"
            },
            "summary": "Development files for the GLib library.",
            "url": {
               "docs": "https://developer.gnome.org/glib/",
               "package": "https://packages.debian.org/libglib2.0-dev",
               "source": "https://gitlab.gnome.org/GNOME/glib"
            }
         },
         "libglut3.12": {
            "dependents": [
               "tex"
            ],
            "description": "libglut3.12 provides the OpenGL Utility Toolkit (GLUT) library,\nfacilitating the development of OpenGL applications by handling\nwindowing, input, and other tasks. In Ubuntu 24.04 (Noble), this\npackage replaces the older freeglut3, offering version 3.4.0.\nNotably, it installs shared libraries like libglut.so.3.12 and\nlibglut.so.3.12.0, but omits the legacy symlink libglut.so.3,\nwhich some applications may expect. To address this, users can\nmanually create the symlink or install the libglut-dev package,\nwhich provides the necessary development files and symlinks.\n",
            "group": "recommended",
            "name": "libglut3.12",
            "notes": "Required for `asymptote` in TeX (see [Island of Tex Dockerfile](https://gitlab.com/islandoftex/images/texlive/-/blob/72240db12e00510972aeea19cd0a08edc22c4152/Dockerfile.base#L34)).\nThe post processing creates a symlink to `libglut.so.3`,\nwhich other packages may expect. This is a workaround for the\nmissing symlink in the libglut3.12 package (cf.\n[Island of Tex Dockerfile](https://gitlab.com/islandoftex/images/texlive/-/blob/72240db12e00510972aeea19cd0a08edc22c4152/Dockerfile.base#L39-42)\nand [ask-ubuntu](https://askubuntu.com/questions/1526992/is-there-a-reason-24-04-lts-noble-numbat-does-not-provide-libglut-so-3)\n).\n",
            "post_install": "LIBDIR=\"$(find /usr/lib -maxdepth 1 -type d -name '*-linux-*' | grep -v '/config-' | head -n1)\";\nln -sf \"${LIBDIR}/libglut.so.3.12\" \"${LIBDIR}/libglut.so.3\";\n",
            "spec": {
               "full": "libglut3.12",
               "name": "libglut3.12"
            },
            "summary": "OpenGL Utility Toolkit for rendering graphical interfaces.",
            "url": {
               "docs": "https://freeglut.sourceforge.net",
               "package": "https://packages.debian.org/libglut3.12"
            }
         },
         "libgmp-dev": {
            "description": "This package provides the headers and static libraries for GMP,\na library for arbitrary-precision arithmetic, operating on signed\nintegers, rational numbers, and floating-point numbers. It's used\nin applications that require high-precision arithmetic operations.\n",
            "group": "recommended",
            "name": "libgmp-dev",
            "spec": {
               "full": "libgmp-dev",
               "name": "libgmp-dev"
            },
            "summary": "Development files for the GNU Multiple Precision Arithmetic Library.",
            "url": {
               "docs": "https://gmplib.org/manual/",
               "package": "https://packages.debian.org/libgmp-dev",
               "source": "https://gmplib.org/repo/gmp/"
            }
         },
         "libgssapi-krb5-2": {
            "description": "The 'libgssapi-krb5-2' package provides the GSSAPI (Generic\nSecurity Services Application Program Interface) support library\nfor the MIT Kerberos implementation. It is used by applications\nthat require Kerberos authentication, such as SSH and other secure\ncommunication tools. This package is essential for environments\nthat utilize Kerberos for authentication.\n",
            "group": "essential",
            "name": "libgssapi-krb5-2",
            "notes": "Included in the [`common-utils`](https://github.com/devcontainers/features/blob/main/src/common-utils/main.sh) devcontainer feature.\n",
            "spec": {
               "full": "libgssapi-krb5-2",
               "name": "libgssapi-krb5-2"
            },
            "summary": "MIT Kerberos runtime libraries - GSSAPI support.",
            "url": {
               "docs": "https://web.mit.edu/kerberos/krb5-1.20/doc/",
               "package": "https://packages.debian.org/libgssapi-krb5-2",
               "source": "https://github.com/krb5/krb5"
            }
         },
         "libgtk-3-0": {
            "description": "libgtk-3-0 is the GTK+ 3 GUI toolkit used for creating graphical\nuser interfaces. It is recommended for applications that require\na graphical interface but is not essential for headless or\ncommand-line environments.\n",
            "group": "recommended",
            "name": "libgtk-3-0",
            "spec": {
               "full": "libgtk-3-0",
               "name": "libgtk-3-0"
            },
            "summary": "GTK+ graphical user interface library.",
            "url": {
               "docs": "https://docs.gtk.org/gtk3/",
               "package": "https://packages.ubuntu.com/noble/libgtk-3-0",
               "source": "https://gitlab.gnome.org/GNOME/gtk"
            }
         },
         "libicu": {
            "description": "The 'libicu72' package provides the International Components\nfor Unicode (ICU) libraries, which offer robust and full-featured\nUnicode services. These services include character set conversions,\ncollation, date/time formatting, and more. It is essential for\napplications that require comprehensive Unicode support, such as\ninternationalized software and platforms like .NET and R.\n",
            "group": "required",
            "name": "libicu",
            "notes": "Included in the [`common-utils`](https://github.com/devcontainers/features/blob/main/src/common-utils/main.sh) devcontainer feature.\n",
            "spec": {
               "full": "libicu[0-9][0-9]",
               "name": "libicu[0-9][0-9]"
            },
            "summary": "International Components for Unicode library.",
            "url": {
               "docs": "https://icu.unicode.org/",
               "package": "https://packages.ubuntu.com/noble/libicu72",
               "source": "https://github.com/unicode-org/icu"
            }
         },
         "libjpeg-dev": {
            "description": "This package provides the headers and static libraries for the\nJPEG image compression library. It's essential for developing\napplications that handle JPEG image encoding and decoding.\n",
            "group": "essential",
            "name": "libjpeg-dev",
            "spec": {
               "full": "libjpeg-dev",
               "name": "libjpeg-dev"
            },
            "summary": "Development files for the JPEG image compression library.",
            "url": {
               "docs": "https://libjpeg.sourceforge.io/",
               "package": "https://packages.debian.org/libjpeg-dev",
               "source": "https://github.com/libjpeg-turbo/libjpeg-turbo"
            }
         },
         "libkrb5-3": {
            "description": "The 'libkrb5-3' package provides the core runtime libraries for\nthe MIT Kerberos 5 authentication system. It is essential for\napplications and services that require secure authentication\nmechanisms, such as SSH, NFS, and various enterprise-level\nservices. In Ubuntu Noble, it ensures compatibility with the\n64-bit time_t transition, making it a required component for\nsystems and applications that depend on Kerberos functionality.\n",
            "group": "required",
            "name": "libkrb5-3",
            "notes": "Included in the [`common-utils`](https://github.com/devcontainers/features/blob/main/src/common-utils/main.sh) devcontainer feature.\n",
            "spec": {
               "full": "libkrb5-3",
               "name": "libkrb5-3"
            },
            "summary": "MIT Kerberos runtime libraries.",
            "url": {
               "docs": "https://web.mit.edu/kerberos/krb5-1.20/",
               "package": "https://packages.ubuntu.com/noble/libkrb5-3",
               "source": "https://gitlab.com/ubuntu/krb5"
            }
         },
         "libkrb5-dev": {
            "description": "This package provides the headers and static libraries for the MIT\nimplementation of Kerberos, a network authentication protocol. It's\nrecommended for developing applications that require secure\nauthentication mechanisms.\n",
            "group": "recommended",
            "name": "libkrb5-dev",
            "spec": {
               "full": "libkrb5-dev",
               "name": "libkrb5-dev"
            },
            "summary": "Development files for MIT Kerberos authentication system.",
            "url": {
               "docs": "https://web.mit.edu/kerberos/krb5-1.20/",
               "package": "https://packages.debian.org/libkrb5-dev",
               "source": "https://github.com/krb5/krb5"
            }
         },
         "liblttng-ust": {
            "description": "The 'liblttng-ust1' package provides the LTTng Userspace Tracer\nlibrary, enabling low-overhead tracing of user-space applications.\nIt allows developers to instrument applications for performance\nanalysis and debugging by emitting tracepoints. While not essential\nfor all development environments, it is recommended for those\nrequiring detailed tracing capabilities.\n",
            "group": "optional",
            "name": "liblttng-ust",
            "notes": "Included in the [`common-utils`](https://github.com/devcontainers/features/blob/main/src/common-utils/main.sh) devcontainer feature.\n",
            "spec": {
               "full": "liblttng-ust[0-9]",
               "name": "liblttng-ust[0-9]"
            },
            "summary": "LTTng Userspace Tracer library.",
            "url": {
               "docs": "https://manpages.ubuntu.com/manpages/noble/en/man3/lttng-ust.3.html",
               "package": "https://packages.ubuntu.com/noble/liblttng-ust1",
               "source": "https://git.lttng.org/?p=lttng-ust.git"
            }
         },
         "liblzma-dev": {
            "description": "This package provides the headers and static libraries for the\nLZMA compression library, used for high-ratio data compression.\nIt's essential for developing applications that handle .xz\ncompressed files.\n",
            "group": "essential",
            "name": "liblzma-dev",
            "spec": {
               "full": "liblzma-dev",
               "name": "liblzma-dev"
            },
            "summary": "Development files for the LZMA compression library.",
            "url": {
               "docs": "https://tukaani.org/xz/",
               "package": "https://packages.debian.org/liblzma-dev"
            }
         },
         "libmagickcore-dev": {
            "description": "This package provides the headers and static libraries for\nImageMagick's core functionalities, such as image processing and\nmanipulation. It's recommended for developing applications that\nrequire direct access to ImageMagick's core features.\n",
            "group": "recommended",
            "name": "libmagickcore-dev",
            "spec": {
               "full": "libmagickcore-dev",
               "name": "libmagickcore-dev"
            },
            "summary": "Development files for ImageMagick's core libraries.",
            "url": {
               "docs": "https://imagemagick.org/script/resources.php",
               "package": "https://packages.debian.org/libmagickcore-dev",
               "source": "https://github.com/ImageMagick/ImageMagick"
            }
         },
         "libmagickwand-dev": {
            "description": "This package provides the headers and static libraries for\nImageMagick's MagickWand API, a C API for image processing. It's\nrecommended for developing applications that utilize ImageMagick's\nfunctionalities through the MagickWand interface.\n",
            "group": "recommended",
            "name": "libmagickwand-dev",
            "spec": {
               "full": "libmagickwand-dev",
               "name": "libmagickwand-dev"
            },
            "summary": "Development files for ImageMagick's MagickWand API.",
            "url": {
               "docs": "https://imagemagick.org/script/magick-wand.php",
               "package": "https://packages.debian.org/libmagickwand-dev",
               "source": "https://github.com/ImageMagick/ImageMagick"
            }
         },
         "libmaxminddb-dev": {
            "description": "This package provides the headers and static libraries for the\nMaxMind DB library, used for IP geolocation. It's optional and\nprimarily used in applications that require geolocation features.\n",
            "group": "optional",
            "name": "libmaxminddb-dev",
            "spec": {
               "full": "libmaxminddb-dev",
               "name": "libmaxminddb-dev"
            },
            "summary": "Development files for the MaxMind DB library.",
            "url": {
               "docs": "https://dev.maxmind.com/geoip/docs/",
               "package": "https://packages.debian.org/libmaxminddb-dev",
               "source": "https://github.com/maxmind/libmaxminddb"
            }
         },
         "libncurses5-dev": {
            "description": "This package provides the headers and static libraries for the\nncurses library version 5, used for text-based user interfaces in\na terminal. It's essential for developing terminal-based\napplications.\n",
            "group": "essential",
            "name": "libncurses5-dev",
            "spec": {
               "full": "libncurses5-dev",
               "name": "libncurses5-dev"
            },
            "summary": "Development files for the ncurses library (version 5).",
            "url": {
               "docs": "https://invisible-island.net/ncurses/",
               "package": "https://packages.debian.org/libncurses5-dev",
               "source": "https://invisible-island.net/datafiles/release/ncurses.tar.gz"
            }
         },
         "libncurses6": {
            "dependents": [
               "tex"
            ],
            "description": "This package contains the shared libraries necessary for programs\nthat use the ncurses library to manage terminal interfaces. It\nprovides a terminal-independent method of updating character\nscreens with reasonable optimization. It's essential for running\napplications that rely on terminal-based user interfaces.\n",
            "group": "essential",
            "name": "libncurses6",
            "spec": {
               "full": "libncurses6",
               "name": "libncurses6"
            },
            "summary": "Shared libraries for terminal handling.",
            "url": {
               "docs": "https://invisible-island.net/ncurses/",
               "package": "https://packages.debian.org/libncurses6",
               "source": "https://invisible-island.net/datafiles/release/ncurses.tar.gz"
            }
         },
         "libncursesw5-dev": {
            "description": "This package provides the headers and static libraries for the\nwide-character version of the ncurses library, supporting\ninternationalization. It's essential for developing terminal-based\napplications that require wide-character support.\n",
            "group": "essential",
            "name": "libncursesw5-dev",
            "spec": {
               "full": "libncursesw5-dev",
               "name": "libncursesw5-dev"
            },
            "summary": "Development files for the wide-character ncurses library.",
            "url": {
               "docs": "https://invisible-island.net/ncurses/",
               "package": "https://packages.debian.org/libncursesw5-dev",
               "source": "https://invisible-island.net/datafiles/release/ncurses.tar.gz"
            }
         },
         "libncursesw6": {
            "description": "The 'libncursesw6' package provides the ncurses library\nroutines, offering a terminal-independent method of updating\ncharacter screens with reasonable optimization. This version\nincludes support for wide characters, enabling applications to\nhandle internationalized text and Unicode characters. It is\nessential for programs that require advanced terminal handling\ncapabilities, such as text editors, interface tools, and\nconsole-based applications.\n",
            "group": "required",
            "name": "libncursesw6",
            "notes": "Recommended by `zsh` and included in the [`common-utils`](https://github.com/devcontainers/features/blob/main/src/common-utils/main.sh) devcontainer feature.\n",
            "spec": {
               "full": "libncursesw6",
               "name": "libncursesw6"
            },
            "summary": "Terminal handling library with wide character support.",
            "url": {
               "docs": "https://invisible-island.net/ncurses/man/ncurses.3x.html",
               "package": "https://packages.ubuntu.com/noble/libncursesw6",
               "source": "https://invisible-island.net/ncurses/"
            }
         },
         "libnspr4": {
            "description": "libnspr4 provides a platform-neutral API\nfor system-level and libc-like functions.\nIt is used by the Network Security Services (NSS) libraries\nand other applications.\nThis package is required for applications that depend on NSPR for portability.\n",
            "group": "recommended",
            "name": "libnspr4",
            "spec": {
               "full": "libnspr4",
               "name": "libnspr4"
            },
            "summary": "Netscape Portable Runtime library.",
            "url": {
               "docs": "https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSPR",
               "package": "https://packages.ubuntu.com/noble/libnspr4",
               "source": "https://hg.mozilla.org/projects/nspr"
            }
         },
         "libnss3": {
            "description": "libnss3 provides a set of libraries designed\nto support cross-platform development\nof security-enabled client and server applications.\nIt supports SSL, TLS, and other security standards.\nThis package is required for applications that perform secure network communications.\n",
            "group": "recommended",
            "name": "libnss3",
            "spec": {
               "full": "libnss3",
               "name": "libnss3"
            },
            "summary": "Network Security Services library.",
            "url": {
               "docs": "https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS",
               "package": "https://packages.ubuntu.com/noble/libnss3",
               "source": "https://hg.mozilla.org/projects/nss"
            }
         },
         "libpango-1.0-0": {
            "description": "libpango-1.0-0 provides facilities for layout and rendering of\ntext, with an emphasis on internationalization. It is recommended\nfor applications that need to display text in multiple languages\nand scripts.\n",
            "group": "recommended",
            "name": "libpango-1.0-0",
            "spec": {
               "full": "libpango-1.0-0",
               "name": "libpango-1.0-0"
            },
            "summary": "Layout and rendering of internationalized text.",
            "url": {
               "docs": "https://developer.gnome.org/pango/",
               "package": "https://packages.ubuntu.com/noble/libpango-1.0-0",
               "source": "https://gitlab.gnome.org/GNOME/pango"
            }
         },
         "libpangocairo-1.0-0": {
            "description": "libpangocairo-1.0-0 provides the Pango library with a Cairo backend,\nenabling high-quality text rendering.\nIt is used for laying out and rendering text in various scripts and languages.\nThis package is required for applications that need advanced text layout and rendering.\n",
            "group": "recommended",
            "name": "libpangocairo-1.0-0",
            "spec": {
               "full": "libpangocairo-1.0-0",
               "name": "libpangocairo-1.0-0"
            },
            "summary": "Pango library with Cairo backend.",
            "url": {
               "docs": "https://developer.gnome.org/pango/",
               "package": "https://packages.ubuntu.com/noble/libpangocairo-1.0-0",
               "source": "https://gitlab.gnome.org/GNOME/pango"
            }
         },
         "libpcre2-8-0": {
            "description": "The 'libpcre2-8-0' package provides the 8-bit runtime library\nfor PCRE2 (Perl Compatible Regular Expressions, version 2),\nwhich offers functions to support regular expressions with\nsyntax and semantics similar to Perl 5. This library is\nessential for applications that require pattern matching\ncapabilities, such as text processing tools and programming\nlanguages. In Ubuntu Noble (24.04), 'libpcre2-8-0' is the\npreferred library over the older 'pcre3' library.\n",
            "group": "required",
            "name": "libpcre2-8-0",
            "notes": "Recommended by `zsh` and included in the [`common-utils`](https://github.com/devcontainers/features/blob/main/src/common-utils/main.sh) devcontainer feature.\n",
            "spec": {
               "full": "libpcre2-8-0",
               "name": "libpcre2-8-0"
            },
            "summary": "PCRE2 regular expression library (8-bit)",
            "url": {
               "docs": "https://pcre.org/current/doc/html/",
               "package": "https://packages.ubuntu.com/noble/libpcre2-8-0",
               "source": "https://launchpad.net/ubuntu/+source/pcre2"
            }
         },
         "libpcre2-dev": {
            "dependents": [
               "git"
            ],
            "description": "The 'libpcre2-dev' package provides the development files for\nPCRE2 (Perl Compatible Regular Expressions, version 2), a\nlibrary of functions that implement regular expression pattern\nmatching using the same syntax and semantics as Perl 5. This\npackage includes header files, static libraries, and\ndocumentation necessary for compiling applications that use\nPCRE2. It is essential for developers who need to build\nsoftware with advanced regular expression capabilities.\n",
            "group": "required",
            "name": "libpcre2-dev",
            "spec": {
               "full": "libpcre2-dev",
               "name": "libpcre2-dev"
            },
            "summary": "Development files for PCRE2 \u2013 Perl-compatible regular expressions.",
            "url": {
               "docs": "https://pcre.org/current/doc/html/",
               "package": "https://packages.ubuntu.com/noble/libpcre2-dev",
               "source": "https://launchpad.net/ubuntu/noble/+source/pcre2"
            }
         },
         "libpcre2-posix3": {
            "dependents": [
               "git"
            ],
            "description": "The 'libpcre2-posix3' package provides a POSIX-compatible API\nfor the PCRE2 (Perl Compatible Regular Expressions) library.\nIt allows applications to utilize regular expressions with\nsyntax and semantics similar to Perl 5, through a POSIX-style\ninterface. This package is particularly useful for software\nthat relies on POSIX regex functions but benefits from the\nenhanced capabilities of PCRE2. It is recommended for\napplications requiring POSIX-compatible regular expression\nsupport.\n",
            "group": "essential",
            "name": "libpcre2-posix3",
            "notes": "Included in the [`git`](https://github.com/devcontainers/features/blob/8895eb3d161d28ada3a8de761a83135e811cae3d/src/git/install.sh#L257C24-L257C39) feature.\n",
            "spec": {
               "full": "libpcre2-posix3",
               "name": "libpcre2-posix3"
            },
            "summary": "PCRE2 POSIX-compatible regular expression runtime library.",
            "url": {
               "docs": "https://pcre.org/current/doc/html/",
               "package": "https://packages.ubuntu.com/noble/libpcre2-posix3",
               "source": "https://github.com/PhilipHazel/pcre2"
            }
         },
         "libpng-dev": {
            "description": "This package provides the headers and static libraries for the\nlibpng library, used for handling PNG image files. It's essential\nfor developing applications that read or write PNG images.\n",
            "group": "essential",
            "name": "libpng-dev",
            "spec": {
               "full": "libpng-dev",
               "name": "libpng-dev"
            },
            "summary": "Development files for the PNG image format library.",
            "url": {
               "docs": "http://www.libpng.org/pub/png/libpng.html",
               "package": "https://packages.debian.org/libpng-dev",
               "source": "https://github.com/glennrp/libpng"
            }
         },
         "libpq-dev": {
            "description": "This package provides the headers and static libraries for the\nPostgreSQL client library, used for connecting to PostgreSQL\ndatabases. It's essential for developing applications that\ninteract with PostgreSQL.\n",
            "group": "essential",
            "name": "libpq-dev",
            "spec": {
               "full": "libpq-dev",
               "name": "libpq-dev"
            },
            "summary": "Development files for PostgreSQL client library.",
            "url": {
               "docs": "https://www.postgresql.org/docs/current/libpq.html",
               "package": "https://packages.debian.org/libpq-dev",
               "source": "https://git.postgresql.org/gitweb/?p=postgresql.git"
            }
         },
         "libreadline-dev": {
            "description": "This package provides the headers and static libraries for the GNU\nreadline and history libraries, which facilitate command-line editing\nand history capabilities. It's essential for developing interactive\ncommand-line applications that require consistent user interfaces.\n",
            "group": "essential",
            "name": "libreadline-dev",
            "spec": {
               "full": "libreadline-dev",
               "name": "libreadline-dev"
            },
            "summary": "Development files for the GNU readline and history libraries.",
            "url": {
               "docs": "https://tiswww.case.edu/php/chet/readline/readline.html",
               "package": "https://packages.debian.org/libreadline-dev",
               "source": "https://git.savannah.gnu.org/git/readline.git"
            }
         },
         "libsecret-1-dev": {
            "description": "This package provides headers and development files for libsecret,\nwhich implements the Secret Service API for storing and retrieving\nsensitive data like passwords. It's commonly used in applications\nthat integrate with GNOME Keyring or other compatible key storage.\nEssential for building secure apps that handle credentials.\n",
            "group": "essential",
            "name": "libsecret-1-dev",
            "spec": {
               "full": "libsecret-1-dev",
               "name": "libsecret-1-dev"
            },
            "summary": "Development files for libsecret, GNOME's secret storage library.",
            "url": {
               "docs": "https://developer.gnome.org/libsecret/",
               "package": "https://packages.ubuntu.com/noble/libsecret-1-dev",
               "source": "https://gitlab.gnome.org/GNOME/libsecret"
            }
         },
         "libsm6": {
            "dependents": [
               "tex"
            ],
            "description": "libsm6 provides the main interface to the X11 Session Management\nlibrary, enabling applications to manage sessions and interact\nwith session managers to save and restore their state. It is\nessential for GUI applications that require session management\ncapabilities, particularly in X11 environments. Additionally,\nit is a common dependency for graphical libraries such as OpenCV,\nmaking it important in development environments involving GUI\napplications or image processing.\n",
            "group": "essential",
            "name": "libsm6",
            "notes": "Required for `metafont` (see [Island of Tex Dockerfile](https://gitlab.com/islandoftex/images/texlive/-/blob/72240db12e00510972aeea19cd0a08edc22c4152/Dockerfile.base#L28)).\n",
            "spec": {
               "full": "libsm6",
               "name": "libsm6"
            },
            "summary": "X11 Session Management library.",
            "url": {
               "docs": "https://manpages.ubuntu.com/manpages/noble/en/man3/SM.3.html",
               "package": "https://packages.ubuntu.com/noble/libsm6",
               "source": "https://gitlab.freedesktop.org/xorg/lib/libsm"
            }
         },
         "libsqlite3-dev": {
            "description": "This package provides the headers and static libraries for SQLite 3,\na lightweight, disk-based database engine. It's essential for\ndeveloping applications that require embedded database functionality\nwithout the overhead of a separate server process.\n",
            "group": "essential",
            "name": "libsqlite3-dev",
            "spec": {
               "full": "libsqlite3-dev",
               "name": "libsqlite3-dev"
            },
            "summary": "Development files for the SQLite 3 database engine.",
            "url": {
               "docs": "https://www.sqlite.org/docs.html",
               "package": "https://packages.debian.org/libsqlite3-dev",
               "source": "https://www.sqlite.org/src"
            }
         },
         "libssl-dev": {
            "dependents": [
               "git"
            ],
            "description": "This package provides the headers and static libraries for OpenSSL,\nimplementing the SSL and TLS protocols. It's essential for developing\napplications that require secure communication over networks.\n",
            "group": "essential",
            "name": "libssl-dev",
            "spec": {
               "full": "libssl-dev",
               "name": "libssl-dev"
            },
            "summary": "Development files for the OpenSSL library.",
            "url": {
               "docs": "https://www.openssl.org/docs/",
               "package": "https://packages.debian.org/libssl-dev",
               "source": "https://github.com/openssl/openssl"
            }
         },
         "libssl3t64": {
            "description": "The 'libssl3t64' package provides the shared libraries for OpenSSL 3.0,\ncompiled with 64-bit time_t support. This ensures compatibility with\nsystems and applications that use 64-bit time representations, aligning\nwith the time_t transition in Ubuntu Noble (24.04). It is essential for\napplications that require secure communication over the Internet using\nSSL and TLS protocols, and that are built against the 64-bit time_t ABI.\n",
            "group": "required",
            "name": "libssl3t64",
            "notes": "Included in the [`common-utils`](https://github.com/devcontainers/features/blob/main/src/common-utils/main.sh) devcontainer feature.\n",
            "spec": {
               "full": "libssl3t64",
               "name": "libssl3t64"
            },
            "summary": "OpenSSL 3.0 shared libraries with 64-bit time_t support.",
            "url": {
               "docs": "https://www.openssl.org/docs/",
               "package": "https://packages.ubuntu.com/noble/libssl3t64",
               "source": "https://launchpad.net/ubuntu/+source/openssl"
            }
         },
         "libstdc++6": {
            "description": "The 'libstdc++6' package provides the standard C++ library, which\nincludes the runtime components required to run C++ applications\ncompiled with GCC. This package is fundamental for the execution\nof C++ programs and is required in any environment that runs such\napplications.\n",
            "group": "required",
            "name": "libstdc++6",
            "notes": "Included in the [`common-utils`](https://github.com/devcontainers/features/blob/main/src/common-utils/main.sh) devcontainer feature.\n",
            "spec": {
               "full": "libstdc++6",
               "name": "libstdc++6"
            },
            "summary": "GNU Standard C++ Library v3.",
            "url": {
               "docs": "https://gcc.gnu.org/onlinedocs/libstdc++/",
               "package": "https://packages.debian.org/libstdc++6",
               "source": "https://gcc.gnu.org/git/gcc.git"
            }
         },
         "libtirpc3t64": {
            "description": "The 'libtirpc3t64' package provides the Transport Independent\nRemote Procedure Call (TI-RPC) library, which is a replacement\nfor the traditional SunRPC library. It offers support for both\nIPv4 and IPv6 and is essential for applications that rely on\nRPC mechanisms, such as NFS and certain network services. The\n't64' variant ensures compatibility with the 64-bit time_t\ntransition in Ubuntu Noble, making it a required component for\nsystems and applications that depend on RPC functionality.\n",
            "group": "required",
            "name": "libtirpc3t64",
            "spec": {
               "full": "libtirpc3t64",
               "name": "libtirpc3t64"
            },
            "summary": "Transport Independent RPC library (t64 variant).",
            "url": {
               "docs": "https://man7.org/linux/man-pages/man3/tirpc.3.html",
               "package": "https://packages.ubuntu.com/noble/libtirpc3t64",
               "source": "https://github.com/libtirpc/libtirpc"
            }
         },
         "libtool": {
            "description": "Libtool is a generic library support script that abstracts the\ncomplexity of using shared libraries across different platforms.\nIt's essential for developing portable software that builds shared\nlibraries.\n",
            "group": "essential",
            "name": "libtool",
            "spec": {
               "full": "libtool",
               "name": "libtool"
            },
            "summary": "Generic library support script.",
            "url": {
               "docs": "https://www.gnu.org/software/libtool/manual/",
               "package": "https://packages.debian.org/libtool",
               "source": "https://git.savannah.gnu.org/git/libtool.git"
            }
         },
         "libunicode-linebreak-perl": {
            "dependents": [
               "tex"
            ],
            "description": "This package provides the Unicode::LineBreak Perl module, which\nimplements the Unicode Line Breaking Algorithm as described in\nUAX #14. It's used in text processing applications that require\nproper line breaking of Unicode text.\n",
            "group": "recommended",
            "name": "libunicode-linebreak-perl",
            "notes": "Required for `latexindent` (see [Island of Tex Dockerfile](https://gitlab.com/islandoftex/images/texlive/-/blob/72240db12e00510972aeea19cd0a08edc22c4152/Dockerfile.base#L24))\n",
            "spec": {
               "full": "libunicode-linebreak-perl",
               "name": "libunicode-linebreak-perl"
            },
            "summary": "Perl module implementing the Unicode Line Breaking Algorithm.",
            "url": {
               "docs": "https://metacpan.org/pod/Unicode::LineBreak",
               "package": "https://packages.ubuntu.com/noble/libunicode-linebreak-perl",
               "source": "https://salsa.debian.org/perl-team/modules/packages/libunicode-linebreak-perl.git"
            }
         },
         "libunwind8": {
            "description": "The 'libunwind8' package provides a portable and efficient C\nprogramming interface to determine the call-chain of a program.\nIt is used for stack unwinding, which is essential for exception\nhandling, debugging, and profiling. This package is essential for\napplications that require backtrace capabilities.\n",
            "group": "essential",
            "name": "libunwind8",
            "spec": {
               "full": "libunwind8",
               "name": "libunwind8"
            },
            "summary": "Library for stack unwinding.",
            "url": {
               "docs": "https://www.nongnu.org/libunwind/",
               "package": "https://packages.ubuntu.com/noble/libunwind8",
               "source": "https://github.com/libunwind/libunwind"
            }
         },
         "libuuid1": {
            "description": "The 'libuuid1' package provides a library for generating and\nparsing UUIDs (Universally Unique Identifiers). It is used by\nvarious applications and libraries to uniquely identify\ninformation without significant central coordination. This package\nis essential for systems and applications that require UUID\ngeneration and handling.\n",
            "group": "essential",
            "name": "libuuid1",
            "spec": {
               "full": "libuuid1",
               "name": "libuuid1"
            },
            "summary": "Universally Unique Identifier library.",
            "url": {
               "docs": "https://man7.org/linux/man-pages/man3/uuid.3.html",
               "package": "https://packages.ubuntu.com/noble/libuuid1",
               "source": "https://github.com/util-linux/util-linux"
            }
         },
         "libwebp-dev": {
            "description": "This package provides the headers and static libraries for libwebp,\na library for encoding and decoding images in the WebP format. It's\nrecommended for developing applications that handle modern image\nformats with efficient compression.\n",
            "group": "recommended",
            "name": "libwebp-dev",
            "spec": {
               "full": "libwebp-dev",
               "name": "libwebp-dev"
            },
            "summary": "Development files for the WebP image format library.",
            "url": {
               "docs": "https://developers.google.com/speed/webp/docs/",
               "package": "https://packages.ubuntu.com/noble/libwebp-dev",
               "source": "https://chromium.googlesource.com/webm/libwebp"
            }
         },
         "libx11-6": {
            "description": "libx11-6 provides the X11 client-side library,\nwhich allows applications to communicate with the X Window System.\nIt is a fundamental component for graphical applications on Unix-like systems.\nThis package is required for any application that uses the X11 windowing system.\n",
            "group": "recommended",
            "name": "libx11-6",
            "spec": {
               "full": "libx11-6",
               "name": "libx11-6"
            },
            "summary": "X11 client-side library.",
            "url": {
               "docs": "https://www.x.org/releases/X11R7.7/doc/libX11/libX11/libX11.html",
               "package": "https://packages.ubuntu.com/noble/libx11-6",
               "source": "https://gitlab.freedesktop.org/xorg/lib/libx11"
            }
         },
         "libx11-xcb1": {
            "description": "libx11-xcb1 allows applications to use both Xlib and XCB\ninterfaces, facilitating better performance and integration.\nIt is recommended for applications that interact with the X\nWindow System but is not essential for all environments.\n",
            "group": "recommended",
            "name": "libx11-xcb1",
            "spec": {
               "full": "libx11-xcb1",
               "name": "libx11-xcb1"
            },
            "summary": "Xlib/XCB interface library.",
            "url": {
               "docs": "https://www.x.org/releases/X11R7.7/doc/libX11/libX11/libX11.html",
               "package": "https://packages.ubuntu.com/noble/libx11-xcb1",
               "source": "https://gitlab.freedesktop.org/xorg/lib/libX11"
            }
         },
         "libxcomposite1": {
            "description": "libxcomposite1 provides support for the X11 Composite extension,\nallowing for advanced graphical effects like transparency and\noff-screen rendering. It is optional and primarily used by\ncompositing window managers and applications requiring such\neffects.\n",
            "group": "optional",
            "name": "libxcomposite1",
            "spec": {
               "full": "libxcomposite1",
               "name": "libxcomposite1"
            },
            "summary": "X11 Composite extension library.",
            "url": {
               "docs": "https://www.x.org/releases/X11R7.7/doc/libXcomposite/libXcomposite.txt",
               "package": "https://packages.ubuntu.com/noble/libxcomposite1",
               "source": "https://gitlab.freedesktop.org/xorg/lib/libXcomposite"
            }
         },
         "libxdamage1": {
            "description": "libxdamage1 provides support for the X11 Damage extension,\nwhich allows applications to track changes to drawable areas.\nIt is optional and mainly used by compositing window managers\nand applications that need to monitor screen updates.\n",
            "group": "optional",
            "name": "libxdamage1",
            "spec": {
               "full": "libxdamage1",
               "name": "libxdamage1"
            },
            "summary": "X11 Damage extension library.",
            "url": {
               "docs": "https://www.x.org/releases/X11R7.7/doc/libXdamage/libXdamage.txt",
               "package": "https://packages.ubuntu.com/noble/libxdamage1",
               "source": "https://gitlab.freedesktop.org/xorg/lib/libXdamage"
            }
         },
         "libxfixes3": {
            "description": "libxfixes3 provides support for the X11 Fixes extension,\noffering enhancements and bug fixes to the core X11 protocol.\nIt is optional and used by applications that require these\nspecific extensions for improved functionality.\n",
            "group": "optional",
            "name": "libxfixes3",
            "spec": {
               "full": "libxfixes3",
               "name": "libxfixes3"
            },
            "summary": "X11 Fixes extension library.",
            "url": {
               "docs": "https://www.x.org/releases/X11R7.7/doc/libXfixes/libXfixes.txt",
               "package": "https://packages.ubuntu.com/noble/libxfixes3",
               "source": "https://gitlab.freedesktop.org/xorg/lib/libXfixes"
            }
         },
         "libxml2-dev": {
            "description": "This package provides the headers and static libraries for libxml2,\nthe GNOME XML library. It's essential for developing applications\nthat parse and manipulate XML documents.\n",
            "group": "essential",
            "name": "libxml2-dev",
            "spec": {
               "full": "libxml2-dev",
               "name": "libxml2-dev"
            },
            "summary": "Development files for the GNOME XML library.",
            "url": {
               "docs": "http://xmlsoft.org/html/index.html",
               "package": "https://packages.debian.org/libxml2-dev",
               "source": "https://gitlab.gnome.org/GNOME/libxml2"
            }
         },
         "libxslt-dev": {
            "description": "This package provides the headers and static libraries for libxslt,\na library for transforming XML documents into other formats using\nXSLT. It's recommended for developing applications that require XML\ntransformations.\n",
            "group": "recommended",
            "name": "libxslt-dev",
            "spec": {
               "full": "libxslt-dev",
               "name": "libxslt-dev"
            },
            "summary": "Development files for the XSLT 1.0 processing library.",
            "url": {
               "docs": "http://xmlsoft.org/XSLT/",
               "package": "https://packages.ubuntu.com/noble/libxslt1-dev",
               "source": "https://gitlab.gnome.org/GNOME/libxslt"
            }
         },
         "libyaml-dev": {
            "description": "This package provides the headers and static libraries for libyaml,\na C library for parsing and emitting YAML. It's recommended for\ndeveloping applications that utilize YAML for configuration or data\nserialization.\n",
            "group": "recommended",
            "name": "libyaml-dev",
            "spec": {
               "full": "libyaml-dev",
               "name": "libyaml-dev"
            },
            "summary": "Development files for the YAML 1.1 parser and emitter library.",
            "url": {
               "docs": "https://pyyaml.org/wiki/LibYAML",
               "package": "https://packages.debian.org/libyaml-dev",
               "source": "https://github.com/yaml/libyaml"
            }
         },
         "libyaml-tiny-perl": {
            "description": "This package provides the YAML::Tiny Perl module, a lightweight\nYAML reader and writer implemented in pure Perl. It's suitable for\napplications that require basic YAML functionality without the\noverhead of heavier YAML parsers. It's particularly useful in\nenvironments where minimizing dependencies is important.\n",
            "group": "recommended",
            "name": "libyaml-tiny-perl",
            "notes": "Required for `latexindent` (see [Island of Tex Dockerfile](https://gitlab.com/islandoftex/images/texlive/-/blob/72240db12e00510972aeea19cd0a08edc22c4152/Dockerfile.base#L24))\n",
            "spec": {
               "full": "libyaml-tiny-perl",
               "name": "libyaml-tiny-perl"
            },
            "summary": "Perl module for reading and writing YAML files with minimal dependencies.",
            "url": {
               "docs": "https://metacpan.org/pod/YAML::Tiny",
               "package": "https://packages.ubuntu.com/noble/libyaml-tiny-perl",
               "source": "https://salsa.debian.org/perl-team/modules/packages/libyaml-tiny-perl.git"
            }
         },
         "lldb": {
            "description": "LLDB is a modern debugger that is part of the LLVM project. It is\ndesigned to be highly modular and supports debugging of C, C++, and\nObjective-C programs. LLDB is recommended for developers who use\nClang and LLVM toolchains.\n",
            "group": "recommended",
            "name": "lldb",
            "spec": {
               "full": "lldb",
               "name": "lldb"
            },
            "summary": "Next-generation debugger from the LLVM project.",
            "url": {
               "docs": "https://lldb.llvm.org/",
               "package": "https://packages.ubuntu.com/noble/lldb",
               "source": "https://github.com/llvm/llvm-project"
            }
         },
         "llvm": {
            "description": "LLVM is a collection of modular and reusable compiler and toolchain\ntechnologies. It is used to develop compiler front ends and back\nends. LLVM is essential for projects that require custom compiler\ndevelopment or advanced code analysis tools.\n",
            "group": "essential",
            "name": "llvm",
            "spec": {
               "full": "llvm",
               "name": "llvm"
            },
            "summary": "Collection of modular and reusable compiler and toolchain technologies.",
            "url": {
               "docs": "https://llvm.org/docs/",
               "package": "https://packages.ubuntu.com/noble/llvm",
               "source": "https://github.com/llvm/llvm-project"
            }
         },
         "locales": {
            "description": "The 'locales' package provides the infrastructure for\nmanaging language and regional settings on Ubuntu systems.\nIt includes utilities like 'locale' and 'locale-gen' to\ndisplay and generate locale data, respectively. These\nsettings influence various aspects of system behavior,\nsuch as language, character encoding, and formatting of\ndates and numbers. This package is essential for\nconfiguring and supporting internationalization in\napplications and the system environment.\n",
            "group": "essential",
            "name": "locales",
            "notes": "Included in the [`common-utils`](https://github.com/devcontainers/features/blob/main/src/common-utils/main.sh) devcontainer feature.\n",
            "post_install": "# Ensure at least the en_US.UTF-8 UTF-8 locale is available = common need for both applications and things like the agnoster ZSH theme.\n# - https://github.com/devcontainers/features/blob/8895eb3d161d28ada3a8de761a83135e811cae3d/src/common-utils/main.sh#L145C5-L150C7\nif ! grep -o -E '^\\s*en_US.UTF-8\\s+UTF-8' /etc/locale.gen > /dev/null; then\n    echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen;\n    locale-gen;\nfi\n",
            "spec": {
               "full": "locales",
               "name": "locales"
            },
            "summary": "GNU C Library locale data and generation tools.",
            "url": {
               "docs": "https://manpages.ubuntu.com/manpages/noble/en/man7/locale.7.html",
               "package": "https://packages.ubuntu.com/noble/locales",
               "source": "https://salsa.debian.org/glibc-team/glibc"
            }
         },
         "lsb-release": {
            "description": "The 'lsb-release' package provides the 'lsb_release' command,\nwhich outputs distribution-specific information. In Ubuntu\nNoble, it offers a minimal implementation that retrieves data\nfrom '/etc/os-release'. It is recommended for scripts and\ntools that need to identify the distribution.\n",
            "group": "essential",
            "name": "lsb-release",
            "notes": "Included in the [`common-utils`](https://github.com/devcontainers/features/blob/main/src/common-utils/main.sh) devcontainer feature.\n",
            "spec": {
               "full": "lsb-release",
               "name": "lsb-release"
            },
            "summary": "Linux Standard Base version reporting utility.",
            "url": {
               "docs": "https://manpages.ubuntu.com/manpages/noble/en/man1/lsb_release.1.html",
               "package": "https://packages.ubuntu.com/noble/lsb-release",
               "source": "https://launchpad.net/ubuntu/+source/lsb-release-minimal"
            }
         },
         "lsof": {
            "description": "Lists information about files opened by processes. Useful for\ndebugging and monitoring, but not essential for all environments.\n",
            "group": "recommended",
            "name": "lsof",
            "notes": "Included in the [`common-utils`](https://github.com/devcontainers/features/blob/main/src/common-utils/main.sh) devcontainer feature.\n",
            "spec": {
               "full": "lsof",
               "name": "lsof"
            },
            "summary": "List open files.",
            "url": {
               "docs": "https://man7.org/linux/man-pages/man8/lsof.8.html",
               "package": "https://packages.ubuntu.com/noble/lsof",
               "source": "https://github.com/lsof-org/lsof"
            }
         },
         "make": {
            "description": "Make is a build automation tool that automatically builds executable\nprograms and libraries from source code by reading files called\nMakefiles. It's required for compiling software from source.\n",
            "group": "required",
            "name": "make",
            "spec": {
               "full": "make",
               "name": "make"
            },
            "summary": "Utility for directing compilation.",
            "url": {
               "docs": "https://www.gnu.org/software/make/manual/",
               "package": "https://packages.debian.org/make",
               "source": "https://git.savannah.gnu.org/git/make.git"
            }
         },
         "man-db": {
            "description": "Installs and manages the manual page database and utilities\nsuch as `man`. It allows users to read documentation about\ninstalled commands, libraries, and APIs. It is essential for\naccessing reference material in CLI environments.\n",
            "group": "essential",
            "name": "man-db",
            "notes": "Included in the [`common-utils`](https://github.com/devcontainers/features/blob/main/src/common-utils/main.sh) devcontainer feature.\n",
            "spec": {
               "full": "man-db",
               "name": "man-db"
            },
            "summary": "On-disk database and utilities for Unix manual pages.",
            "url": {
               "docs": "https://man7.org/linux/man-pages/man1/man.1.html",
               "package": "https://packages.ubuntu.com/noble/man-db",
               "source": "https://salsa.debian.org/man-db-team/man-db"
            }
         },
         "manpages": {
            "description": "Provides a large collection of manual pages describing standard\nuser commands, file formats, and tools. Recommended for user and\ndeveloper reference, but not strictly necessary to run software.\n",
            "group": "recommended",
            "name": "manpages",
            "notes": "Included in the [`common-utils`](https://github.com/devcontainers/features/blob/main/src/common-utils/main.sh) devcontainer feature.\n",
            "spec": {
               "full": "manpages",
               "name": "manpages"
            },
            "summary": "Unix manual pages for user-level commands.",
            "url": {
               "docs": "https://man7.org/linux/man-pages/",
               "package": "https://packages.ubuntu.com/noble/manpages",
               "source": "https://salsa.debian.org/manpages-team/manpages"
            }
         },
         "manpages-dev": {
            "description": "Contains man pages for C library functions, system calls,\nheaders, and development tools. Recommended for programmers and\ndevelopers working on C/C++ or system-level code who want to\nlook up function definitions and usage.\n",
            "group": "recommended",
            "name": "manpages-dev",
            "notes": "Included in the [`common-utils`](https://github.com/devcontainers/features/blob/main/src/common-utils/main.sh) devcontainer feature.\n",
            "spec": {
               "full": "manpages-dev",
               "name": "manpages-dev"
            },
            "summary": "Developer-oriented manpages for C programming and system APIs.",
            "url": {
               "docs": "https://man7.org/linux/man-pages/",
               "package": "https://packages.ubuntu.com/noble/manpages-dev",
               "source": "https://salsa.debian.org/manpages-team/manpages-dev"
            }
         },
         "mercurial": {
            "description": "A distributed version control system like Git.\nMercurial is needed for building certain packages\nfrom source code.\n",
            "group": "required",
            "name": "mercurial",
            "spec": {
               "full": "mercurial",
               "name": "mercurial"
            },
            "summary": "Scalable distributed version control system.",
            "url": {
               "docs": "https://www.mercurial-scm.org/guide",
               "package": "https://packages.debian.org/mercurial"
            }
         },
         "moreutils": {
            "description": "The 'moreutils' package offers a suite of command-line utilities\nthat extend the functionality of standard Unix tools.\nIt is required for TypeScript, and includes\nprograms like 'chronic', 'combine', 'errno', 'ifdata', 'ifne',\n'isutf8', 'lckdo', 'mispipe', 'parallel', 'pee', 'sponge', 'ts',\n'vidir', 'vipe', and 'zrun'. These tools are designed to handle\nspecific tasks more efficiently or provide functionality not\navailable in the traditional core utilities. For instance, 'sponge'\nallows for safe in-place editing of files, and 'parallel' enables\nthe execution of jobs in parallel. While not essential for all\nenvironments, 'moreutils' is recommended for users seeking enhanced\ncommand-line capabilities.\n",
            "group": "recommended",
            "name": "moreutils",
            "spec": {
               "full": "moreutils",
               "name": "moreutils"
            },
            "summary": "Collection of additional Unix utilities complementing core tools.",
            "url": {
               "docs": "https://manpages.ubuntu.com/manpages/noble/en/man1/moreutils.1.html",
               "package": "https://packages.ubuntu.com/noble/moreutils",
               "source": "https://launchpad.net/ubuntu/noble/+source/moreutils"
            }
         },
         "nano": {
            "description": "GNU nano is a user-friendly, terminal-based text editor\ndesigned as a free replacement for Pico. It offers features\nlike syntax highlighting, undo/redo, line numbering, and\nsearch-and-replace with regex support. Its simplicity makes\nit ideal for editing configuration files and writing scripts,\nmaking it an essential tool for system administrators and\ndevelopers working in command-line environments.\n",
            "group": "essential",
            "name": "nano",
            "notes": "Included in the [`common-utils`](https://github.com/devcontainers/features/blob/main/src/common-utils/main.sh) devcontainer feature.\n",
            "spec": {
               "full": "nano",
               "name": "nano"
            },
            "summary": "Small, friendly text editor inspired by Pico.",
            "url": {
               "docs": "https://www.nano-editor.org/docs.php",
               "package": "https://packages.ubuntu.com/noble/nano",
               "source": "https://git.savannah.gnu.org/git/nano.git"
            }
         },
         "ncdu": {
            "description": "ncdu (NCurses Disk Usage) is a terminal-based disk usage\nanalyzer that provides a fast and user-friendly interface\nfor exploring directory sizes. It allows users to navigate\nthrough directories, sort by size, and delete files or\ndirectories directly from the interface. This tool is\nparticularly useful for identifying large files and\ndirectories that consume significant disk space. While not\nessential for all environments, it is recommended for users\nwho need an efficient way to manage disk usage.\n",
            "group": "recommended",
            "name": "ncdu",
            "notes": "Included in the [`common-utils`](https://github.com/devcontainers/features/blob/main/src/common-utils/main.sh) devcontainer feature.\n",
            "spec": {
               "full": "ncdu",
               "name": "ncdu"
            },
            "summary": "Interactive disk usage analyzer with ncurses interface.",
            "url": {
               "docs": "https://manpages.ubuntu.com/manpages/noble/en/man1/ncdu.1.html",
               "package": "https://packages.ubuntu.com/noble/ncdu",
               "source": "https://g.blicky.net/ncdu.git/"
            }
         },
         "netbase": {
            "description": "netbase provides essential networking configuration files such as\n/etc/services, /etc/protocols, and /etc/rpc. These files are\nfundamental for the proper operation of network services and are\nrequired by various networking tools and daemons to function\ncorrectly.\n",
            "group": "required",
            "name": "netbase",
            "spec": {
               "full": "netbase",
               "name": "netbase"
            },
            "summary": "Basic TCP/IP networking configuration.",
            "url": {
               "package": "https://packages.debian.org/netbase"
            }
         },
         "openssh-client": {
            "description": "The OpenSSH client provides secure encrypted communications\nbetween hosts over an insecure network.\nIt is commonly used for remote login and command execution.\nIn development containers, it facilitates secure access\nto remote servers, code repositories, and other network resources.\n",
            "group": "required",
            "name": "openssh-client",
            "spec": {
               "full": "openssh-client",
               "name": "openssh-client"
            },
            "summary": "Secure shell client for encrypted network connections.",
            "url": {
               "docs": "https://www.openssh.com/manual.html",
               "package": "https://packages.debian.org/openssh-client"
            }
         },
         "patch": {
            "description": "Patch is a utility that applies changes to files based on differences\ndescribed in a diff file. It's essential for applying updates or\nmodifications to source code during development.\n",
            "group": "essential",
            "name": "patch",
            "spec": {
               "full": "patch",
               "name": "patch"
            },
            "summary": "Apply a diff file to an original.",
            "url": {
               "docs": "https://www.gnu.org/software/diffutils/manual/",
               "package": "https://packages.debian.org/patch",
               "source": "https://savannah.gnu.org/git/?group=diffutils"
            }
         },
         "perl": {
            "dependents": [
               "tex"
            ],
            "description": "Perl is a versatile programming language known for its text\nprocessing capabilities. It supports multiple programming\nparadigms and is widely used for system administration, web\ndevelopment, and more. It's essential for many scripts and\ntools in Unix-like environments.\n",
            "group": "essential",
            "name": "perl",
            "spec": {
               "full": "perl",
               "name": "perl"
            },
            "summary": "Highly capable, feature-rich programming language.",
            "url": {
               "docs": "https://manpages.ubuntu.com/manpages/noble/en/man1/perl.1.html",
               "package": "https://packages.debian.org/perl"
            }
         },
         "procps": {
            "description": "The procps package includes command-line utilities such as ps,\ntop, vmstat, and others for monitoring and managing system\nprocesses. These tools are vital for observing system performance,\ndiagnosing issues, and managing processes within development\nenvironments.\n",
            "group": "essential",
            "name": "procps",
            "notes": "Included in the [`common-utils`](https://github.com/devcontainers/features/blob/main/src/common-utils/main.sh) devcontainer feature.\n",
            "spec": {
               "full": "procps",
               "name": "procps"
            },
            "summary": "Utilities for monitoring and managing system processes.",
            "url": {
               "package": "https://packages.debian.org/procps",
               "source": "https://gitlab.com/procps-ng/procps"
            }
         },
         "psmisc": {
            "description": "The 'psmisc' package provides a set of utilities for\nmanaging processes, including 'killall', 'fuser',\n'pstree', and 'peekfd'. These tools assist in\nidentifying and controlling processes and their\nresource usage. It is recommended for users who need\nadditional tools beyond the basic process management\ncommands.\n",
            "group": "recommended",
            "name": "psmisc",
            "notes": "Included in the [`common-utils`](https://github.com/devcontainers/features/blob/main/src/common-utils/main.sh) devcontainer feature.\n",
            "spec": {
               "full": "psmisc",
               "name": "psmisc"
            },
            "summary": "Utilities for managing processes on Unix systems.",
            "url": {
               "docs": "https://man7.org/linux/man-pages/man1/killall.1.html",
               "package": "https://packages.ubuntu.com/noble/psmisc",
               "source": "https://gitlab.com/psmisc/psmisc"
            }
         },
         "python-is-python3": {
            "dependents": [
               "tex"
            ],
            "description": "This package creates a symbolic link from /usr/bin/python to the\ndefault Python 3 interpreter. It ensures compatibility with scripts\nand tools that invoke 'python' expecting Python 3, aligning with\nmodern conventions and reducing ambiguity in environments where\nboth Python 2 and Python 3 may be present.\n",
            "group": "required",
            "name": "python-is-python3",
            "spec": {
               "full": "python-is-python3",
               "name": "python-is-python3"
            },
            "summary": "Symlink /usr/bin/python to Python 3 interpreter.",
            "url": {
               "package": "https://packages.debian.org/python-is-python3"
            }
         },
         "python3": {
            "dependents": [
               "tex"
            ],
            "description": "This package provides the default Python 3 interpreter for Ubuntu\n24.04 LTS (Noble Numbat), currently Python 3.12. It includes the\nstandard interpreter and essential components, serving as the\nfoundation for Python 3 development and execution in the system.\n",
            "group": "required",
            "name": "python3",
            "spec": {
               "full": "python3",
               "name": "python3"
            },
            "summary": "Default Python 3 interpreter package for Ubuntu Noble.",
            "url": {
               "docs": "https://docs.python.org/3/",
               "package": "https://packages.debian.org/python3"
            }
         },
         "python3-dev": {
            "description": "The 'python3-dev' package provides the header files and static\nlibraries necessary for building Python 3 modules and extensions.\nIt is essential for developing Python C extensions and embedding\nPython in C applications.\n",
            "group": "essential",
            "name": "python3-dev",
            "spec": {
               "full": "python3-dev",
               "name": "python3-dev"
            },
            "summary": "Header files and static libraries for Python 3 development.",
            "url": {
               "docs": "https://docs.python.org/3/extending/",
               "package": "https://packages.ubuntu.com/noble/python3-dev",
               "source": "https://github.com/python/cpython"
            }
         },
         "python3-pip": {
            "description": "python3-pip is the standard package manager for Python 3,\nenabling the installation and management of Python packages\nfrom the Python Package Index (PyPI) and other indexes. It\nprovides the 'pip3' command-line tool, which allows users to\ninstall, upgrade, and remove Python packages. This package is\nessential for Python development environments, facilitating\nthe integration of third-party libraries and tools necessary\nfor various projects.\n",
            "group": "essential",
            "name": "python3-pip",
            "spec": {
               "full": "python3-pip",
               "name": "python3-pip"
            },
            "summary": "Python package installer for Python 3.",
            "url": {
               "docs": "https://pip.pypa.io/en/stable/",
               "package": "https://packages.ubuntu.com/noble/python3-pip",
               "source": "https://github.com/pypa/pip"
            }
         },
         "python3-pip-whl": {
            "description": "The 'python-pip-whl' package provides the pip installer for Python\nin the form of a wheel (.whl) archive. This package is used during\nthe bootstrapping process of pip in Python environments, allowing\nfor the installation of pip without requiring an existing pip\ninstallation. It is essential for setting up Python package\nmanagement in environments where pip is not yet available.\n",
            "group": "required",
            "name": "python3-pip-whl",
            "spec": {
               "full": "python3-pip-whl",
               "name": "python3-pip-whl"
            },
            "summary": "Wheel archive of the pip installer for Python.",
            "url": {
               "docs": "https://pip.pypa.io/en/stable/",
               "package": "https://packages.ubuntu.com/noble/python-pip-whl",
               "source": "https://github.com/pypa/pip"
            }
         },
         "python3-pygments": {
            "dependents": [
               "tex"
            ],
            "description": "Pygments is a generic syntax highlighter suitable for use in code\nhosting, documentation, and other applications requiring code\nformatting. This package provides the Python 3 version of Pygments,\nsupporting a wide range of programming languages and markup formats.\n",
            "group": "recommended",
            "name": "python3-pygments",
            "spec": {
               "full": "python3-pygments",
               "name": "python3-pygments"
            },
            "summary": "Syntax highlighting package written in Python 3.",
            "url": {
               "docs": "https://pygments.org/docs/",
               "package": "https://packages.ubuntu.com/noble/python3-pygments",
               "source": "https://github.com/pygments/pygments"
            }
         },
         "rsync": {
            "dependents": [
               "tex"
            ],
            "description": "rsync is a powerful utility for efficiently transferring and\nsynchronizing files across local and remote systems. It employs a\ndelta-transfer algorithm that minimizes data transfer by only\nsending differences between source and destination files.\nrsync supports various features, including compression, recursion,\nsymbolic link preservation, and SSH-based encrypted transfers.\nIt is widely used for backups, mirroring, and as an enhanced\nalternative to traditional copy commands. Given its capabilities\nand common usage in development and deployment workflows,\nrsync is considered essential in many environments.\n",
            "group": "required",
            "name": "rsync",
            "spec": {
               "full": "rsync",
               "name": "rsync"
            },
            "summary": "Fast, versatile tool for local and remote file synchronization.",
            "url": {
               "docs": "https://rsync.samba.org/documentation.html",
               "package": "https://packages.debian.org/rsync",
               "source": "https://github.com/WayneD/rsync"
            }
         },
         "software-properties-common": {
            "description": "The 'software-properties-common' package provides an abstraction\nof the used apt repositories. It allows you to easily manage your\ndistribution and independent software vendor software sources. It\nincludes the 'add-apt-repository' command-line tool. This package\nis essential for adding and managing PPAs and other software\nsources.\n",
            "group": "required",
            "name": "software-properties-common",
            "post_install": "add-apt-repository universe;\n",
            "spec": {
               "full": "software-properties-common",
               "name": "software-properties-common"
            },
            "summary": "Manage software repositories and PPAs.",
            "url": {
               "docs": "https://manpages.ubuntu.com/manpages/noble/en/man1/add-apt-repository.1.html",
               "package": "https://packages.ubuntu.com/noble/software-properties-common",
               "source": "https://git.launchpad.net/software-properties"
            }
         },
         "sq": {
            "description": "A command-line tool for secure messaging and encryption,\nproviding functionalities for key management and encrypted\ncommunication.\n",
            "group": "required",
            "name": "sq",
            "spec": {
               "full": "sq",
               "name": "sq"
            },
            "summary": "Secure messaging and encryption tool.",
            "url": {
               "package": "https://packages.debian.org/sq",
               "source": "https://github.com/sqproject/sq"
            }
         },
         "sqlite3": {
            "description": "The 'sqlite3' package provides a command-line interface for\ninteracting with SQLite 3 databases. It allows users to create,\nmodify, and query SQLite databases directly from the terminal.\nThis package is essential for developers and administrators who\nneed to manage SQLite databases.\n",
            "group": "essential",
            "name": "sqlite3",
            "spec": {
               "full": "sqlite3",
               "name": "sqlite3"
            },
            "summary": "Command-line interface for SQLite 3.",
            "url": {
               "docs": "https://www.sqlite.org/docs.html",
               "package": "https://packages.ubuntu.com/noble/sqlite3",
               "source": "https://www.sqlite.org/src"
            }
         },
         "strace": {
            "description": "strace is used to monitor and debug interactions between programs\nand the Linux kernel by tracing system calls and signals. It's a\nvital tool for diagnosing runtime issues, especially in debugging,\nsecurity auditing, and reverse engineering. Recommended for\ndevelopers and sysadmins.\n",
            "group": "recommended",
            "name": "strace",
            "notes": "Included in the [`common-utils`](https://github.com/devcontainers/features/blob/main/src/common-utils/main.sh) devcontainer feature.\n",
            "spec": {
               "full": "strace",
               "name": "strace"
            },
            "summary": "Diagnostic tool for tracing system calls.",
            "url": {
               "docs": "https://man7.org/linux/man-pages/man1/strace.1.html",
               "package": "https://packages.ubuntu.com/noble/strace",
               "source": "https://github.com/strace/strace"
            }
         },
         "sudo": {
            "description": "The 'sudo' package provides the 'sudo' command, allowing\nauthorized users to execute commands with the security\nprivileges of another user, typically the superuser. It is\nessential for performing administrative tasks without logging\nin as the root user, thereby enhancing system security and\nauditability. In Ubuntu, the root account is disabled by\ndefault, making 'sudo' indispensable for system management.\n",
            "group": "required",
            "name": "sudo",
            "spec": {
               "full": "sudo",
               "name": "sudo"
            },
            "summary": "Execute commands with elevated privileges.",
            "url": {
               "docs": "https://man7.org/linux/man-pages/man8/sudo.8.html",
               "package": "https://packages.ubuntu.com/noble/sudo",
               "source": "https://launchpad.net/ubuntu/+source/sudo"
            }
         },
         "swig": {
            "description": "SWIG (Simplified Wrapper and Interface Generator) is a tool that\nconnects programs written in C and C++ with various high-level\nprogramming languages, including Python, Perl, Ruby, and others.\nIt automates the generation of the necessary wrapper code,\nfacilitating the integration of C/C++ code into scripting languages.\nIn Ubuntu 24.04 (Noble), the 'swig' package provides version 4.0,\nwhich includes improved features and broader language support\ncompared to previous versions. This package is required for\ninstalling projects that require interfacing C/C++ code with scripting languages.\n",
            "group": "required",
            "name": "swig",
            "spec": {
               "full": "swig",
               "name": "swig"
            },
            "summary": "Tool for generating scripting language interfaces to C/C++ code.",
            "url": {
               "docs": "https://www.swig.org/Doc4.0/",
               "package": "https://packages.ubuntu.com/noble/swig",
               "source": "https://github.com/swig/swig"
            }
         },
         "tar": {
            "dependents": [
               "git"
            ],
            "description": "GNU tar is a standard Unix utility used to create, maintain, modify, and extract files from archives. It supports various compression methods, including gzip, bzip2, and xz, facilitating efficient storage and distribution of files. Commonly used for backups and software packaging, tar is an essential tool in Unix-like environments.\n",
            "group": "essential",
            "name": "tar",
            "spec": {
               "full": "tar",
               "name": "tar"
            },
            "summary": "GNU tar \u2013 archiving utility for combining multiple files into a single archive.",
            "url": {
               "docs": "https://man7.org/linux/man-pages/man1/tar.1.html",
               "package": "https://packages.ubuntu.com/noble/tar",
               "source": "https://launchpad.net/ubuntu/+source/tar"
            }
         },
         "tk-dev": {
            "description": "tk-dev provides the header files and libraries necessary for\ndeveloping applications using the Tk GUI toolkit, which is often\nused with the Tcl scripting language. It is essential for building\ngraphical applications that utilize Tk for their user interface.\n",
            "group": "essential",
            "name": "tk-dev",
            "spec": {
               "full": "tk-dev",
               "name": "tk-dev"
            },
            "summary": "Development files for the Tk GUI toolkit.",
            "url": {
               "docs": "https://www.tcl.tk/doc/",
               "package": "https://packages.ubuntu.com/noble/tk-dev",
               "source": "https://core.tcl-lang.org/tk"
            }
         },
         "tree": {
            "description": "The 'tree' command provides a recursive, depth-indented listing\nof files and directories, visualizing the structure in a\ntree-like format. It is particularly useful for understanding\ncomplex directory hierarchies and for documentation purposes.\nWhile not essential for all environments, it is recommended for\nusers who need to visualize directory structures effectively.\n",
            "group": "recommended",
            "name": "tree",
            "notes": "Included in the [`common-utils`](https://github.com/devcontainers/features/blob/main/src/common-utils/main.sh) devcontainer feature.\n",
            "spec": {
               "full": "tree",
               "name": "tree"
            },
            "summary": "Display directories and files in a tree-like format.",
            "url": {
               "docs": "https://man7.org/linux/man-pages/man1/tree.1.html",
               "package": "https://packages.ubuntu.com/noble/tree",
               "source": "https://gitlab.com/OldManProgrammer/unix-tree"
            }
         },
         "tzdata": {
            "description": "tzdata provides the time zone and daylight-saving time data used by\nthe system to correctly handle time conversions and representations.\nIt's essential for applications that rely on accurate timekeeping,\nensuring consistency across different regions and systems.\n",
            "group": "required",
            "name": "tzdata",
            "spec": {
               "full": "tzdata",
               "name": "tzdata"
            },
            "summary": "Time zone and daylight-saving time data.",
            "url": {
               "package": "https://packages.debian.org/tzdata"
            }
         },
         "unixodbc-dev": {
            "description": "Provides the headers and static libraries\nnecessary for developing applications that utilize the unixODBC\ndriver manager. It is required for Microsoft SQL Server,\nand includes files like 'sql.h' and 'sqlext.h',\nenabling compilation of programs that interface with various\ndatabases through the ODBC API. This package is essential for\nbuilding software that requires database connectivity via ODBC,\nensuring compatibility across different database systems.\n",
            "group": "essential",
            "name": "unixodbc-dev",
            "spec": {
               "full": "unixodbc-dev",
               "name": "unixodbc-dev"
            },
            "summary": "Development files for the unixODBC ODBC driver manager.",
            "url": {
               "docs": "https://www.unixodbc.org/doc/",
               "package": "https://packages.ubuntu.com/noble/unixodbc-dev",
               "source": "https://github.com/lurcher/unixODBC"
            }
         },
         "unzip": {
            "description": "Unzip is a utility for extracting files from .zip archives. It's\nessential for handling compressed files, especially when dealing with\nsource code or resources distributed in .zip format.\n",
            "group": "required",
            "name": "unzip",
            "spec": {
               "full": "unzip",
               "name": "unzip"
            },
            "summary": "De-archiver for .zip files.",
            "url": {
               "docs": "https://infozip.sourceforge.net/UnZip.html",
               "package": "https://packages.ubuntu.com/noble/unzip",
               "source": "https://github.com/Info-ZIP/UnZip"
            }
         },
         "uuid-dev": {
            "description": "uuid-dev provides the headers and static libraries for developing\napplications that generate and manipulate Universally Unique\nIdentifiers (UUIDs). It is essential for building software that\nrequires unique identifiers, such as database keys or session tokens.\n",
            "group": "essential",
            "name": "uuid-dev",
            "spec": {
               "full": "uuid-dev",
               "name": "uuid-dev"
            },
            "summary": "Development files for UUID generation library.",
            "url": {
               "docs": "https://man7.org/linux/man-pages/man3/uuid.3.html",
               "package": "https://packages.ubuntu.com/noble/uuid-dev",
               "source": "https://github.com/util-linux/util-linux"
            }
         },
         "valgrind": {
            "description": "Valgrind is a programming tool for memory debugging, memory leak\ndetection, and profiling. It helps to detect memory management and\nthreading bugs, making it recommended for developers who need to\nensure the correctness and performance of their applications.\n",
            "group": "recommended",
            "name": "valgrind",
            "spec": {
               "full": "valgrind",
               "name": "valgrind"
            },
            "summary": "Instrumentation framework for building dynamic analysis tools.",
            "url": {
               "docs": "https://valgrind.org/docs/manual/manual.html",
               "package": "https://packages.ubuntu.com/noble/valgrind",
               "source": "https://sourceware.org/git/valgrind.git"
            }
         },
         "vim": {
            "description": "Vim is a highly configurable text editor built to make creating\nand changing any kind of text very efficient. It is an improved\nversion of the Unix editor vi and is widely used by developers for\nediting source code. It is essential in CLI-based development\nenvironments.\n",
            "group": "essential",
            "name": "vim",
            "spec": {
               "full": "vim",
               "name": "vim"
            },
            "summary": "Vi IMproved \u2013 enhanced vi text editor.",
            "url": {
               "docs": "https://vimhelp.org/",
               "package": "https://packages.ubuntu.com/noble/vim",
               "source": "https://github.com/vim/vim"
            }
         },
         "wget": {
            "description": "A command-line utility for downloading files from the web,\nsupporting HTTP, HTTPS, and FTP protocols. It's particularly useful\nfor automated scripts and tasks that require fetching resources\nwithout user interaction, making it a staple in many development\nand deployment workflows.\n",
            "group": "required",
            "name": "wget",
            "spec": {
               "full": "wget",
               "name": "wget"
            },
            "summary": "Non-interactive network downloader.",
            "url": {
               "docs": "https://manpages.ubuntu.com/manpages/noble/en/man1/wget.1.html",
               "package": "https://packages.debian.org/wget",
               "source": "https://www.gnu.org/software/wget/"
            }
         },
         "xtail": {
            "description": "xtail allows users to watch the growth of multiple files at once,\nmuch like `tail -f`, but with support for files that get rotated\n(like logs). It's recommended for monitoring log files and useful\nin debugging and operations environments.\n",
            "group": "recommended",
            "name": "xtail",
            "spec": {
               "full": "xtail",
               "name": "xtail"
            },
            "summary": "Monitor multiple files like `tail -f`, even if they are rotated.",
            "url": {
               "docs": "https://manpages.ubuntu.com/manpages/noble/en/man1/xtail.1.html",
               "package": "https://packages.ubuntu.com/noble/xtail",
               "source": "https://github.com/pbrady/xtail"
            }
         },
         "xz-utils": {
            "description": "XZ Utils provide tools for compressing and decompressing files using\nthe .xz format, which utilizes the LZMA2 compression algorithm. It's\nessential for handling .xz compressed files, commonly used in source\ndistributions.\n",
            "group": "essential",
            "name": "xz-utils",
            "notes": "Included in the [`common-utils`](https://github.com/devcontainers/features/blob/main/src/common-utils/main.sh) devcontainer feature.\n",
            "spec": {
               "full": "xz-utils",
               "name": "xz-utils"
            },
            "summary": "Utilities for .xz compression.",
            "url": {
               "docs": "https://tukaani.org/xz/",
               "package": "https://packages.debian.org/xz-utils",
               "source": "https://git.tukaani.org/?p=xz.git"
            }
         },
         "zip": {
            "description": "The 'zip' package provides the 'zip' command-line utility, which\nallows users to compress files and directories into ZIP archive\nfiles. It supports various features, including recursive directory\ncompression, exclusion patterns, and encryption. The utility is\nwidely used for packaging files for distribution, backup, and\nefficient storage. Its compatibility with other ZIP tools across\ndifferent operating systems makes it a versatile choice for file\ncompression needs in development and production environments.\n",
            "group": "essential",
            "name": "zip",
            "spec": {
               "full": "zip",
               "name": "zip"
            },
            "summary": "Command-line utility for creating ZIP archives.",
            "url": {
               "docs": "https://manpages.ubuntu.com/manpages/noble/en/man1/zip.1.html",
               "package": "https://packages.ubuntu.com/noble/zip",
               "source": "https://launchpad.net/ubuntu/noble/+source/zip"
            }
         },
         "zlib1g": {
            "description": "The 'zlib1g' package provides the zlib compression library, which\nimplements the deflate compression algorithm used in gzip and\nother compression tools. It is widely used by applications for\ndata compression and decompression. This package is required for\nthe operation of many software packages that handle compressed\ndata.\n",
            "group": "required",
            "name": "zlib1g",
            "notes": "Included in the [`common-utils`](https://github.com/devcontainers/features/blob/main/src/common-utils/main.sh) devcontainer feature.\n",
            "spec": {
               "full": "zlib1g",
               "name": "zlib1g"
            },
            "summary": "Compression library implementing the deflate algorithm.",
            "url": {
               "docs": "https://zlib.net/manual.html",
               "package": "https://packages.ubuntu.com/noble/zlib1g",
               "source": "https://github.com/madler/zlib"
            }
         },
         "zlib1g-dev": {
            "dependents": [
               "git"
            ],
            "description": "This package provides the headers and static libraries for zlib, a\ncompression library implementing the deflate algorithm. It's\nessential for developing applications that require data compression.\n",
            "group": "essential",
            "name": "zlib1g-dev",
            "spec": {
               "full": "zlib1g-dev",
               "name": "zlib1g-dev"
            },
            "summary": "Development files for the zlib compression library.",
            "url": {
               "docs": "https://zlib.net/manual.html",
               "package": "https://packages.debian.org/zlib1g-dev",
               "source": "https://github.com/madler/zlib"
            }
         },
         "zsh": {
            "description": "Zsh is a powerful and highly customizable Unix shell that\nincorporates features from bash, ksh, and tcsh. It offers\nadvanced features like improved tab completion, spell\ncorrection, and theming support. While not essential for\nsystem operation, it is a popular alternative for users\nseeking enhanced interactive shell experiences.\n",
            "group": "recommended",
            "name": "zsh",
            "spec": {
               "full": "zsh",
               "name": "zsh"
            },
            "summary": "Z Shell \u2013 advanced interactive shell.",
            "url": {
               "docs": "https://zsh.sourceforge.io/Doc/",
               "package": "https://packages.ubuntu.com/noble/zsh",
               "source": "https://sourceforge.net/p/zsh/code/ci/master/tree/"
            }
         }
      },
      "container": {
         "containerUser": "pypackit-dev",
         "customizations": {
            "vscode": {
               "extensions": [
                  "ms-python.python",
                  "ms-python.vscode-pylance",
                  "ms-python.debugpy",
                  "ms-toolsai.jupyter",
                  "ms-toolsai.jupyter-keymap",
                  "ms-toolsai.jupyter-renderers",
                  "ms-vscode.cpptools",
                  "ritwickdey.LiveServer",
                  "VisualStudioExptTeam.vscodeintellicode",
                  "ms-toolsai.vscode-jupyter-cell-tags",
                  "ms-toolsai.vscode-jupyter-slideshow",
                  "twxs.cmake",
                  "ms-vscode.cmake-tools",
                  "redhat.java",
                  "ms-azuretools.vscode-docker",
                  "dbaeumer.vscode-eslint",
                  "eamodio.gitlens",
                  "ms-vscode.cpptools-extension-pack",
                  "VisualStudioExptTeam.intellicode-api-usage-examples",
                  "formulahendry.code-runner",
                  "GitHub.copilot",
                  "GitHub.copilot-chat",
                  "GitHub.vscode-pull-request-github",
                  "ms-vscode-remote.remote-ssh-edit",
                  "ecmel.vscode-html-css",
                  "formulahendry.auto-rename-tag",
                  "redhat.vscode-yaml",
                  "MS-vsliveshare.vsliveshare",
                  "xabikos.JavaScriptSnippets",
                  "ms-vscode.remote-explorer",
                  "christian-kohler.path-intellisense",
                  "golang.Go",
                  "formulahendry.auto-close-tag",
                  "bmewburn.vscode-intelephense-client",
                  "streetsidesoftware.code-spell-checker",
                  "donjayamanne.githistory",
                  "KevinRose.vsc-python-indent",
                  "njpwerner.autodocstring",
                  "wholroyd.jinja",
                  "jeff-hykin.better-cpp-syntax",
                  "mechatroner.rainbow-csv",
                  "techer.open-in-browser",
                  "mhutchie.git-graph",
                  "yzhang.markdown-all-in-one",
                  "Zignd.html-css-class-completion",
                  "DavidAnson.vscode-markdownlint",
                  "aaron-bond.better-comments",
                  "naumovs.color-highlight",
                  "redhat.vscode-xml",
                  "tomoki1207.pdf",
                  "pranaygp.vscode-css-peek",
                  "shd101wyy.markdown-preview-enhanced",
                  "ms-vscode.makefile-tools",
                  "GitHub.codespaces",
                  "rust-lang.rust-analyzer",
                  "GitHub.remotehub",
                  "ms-vscode.remote-repositories",
                  "GitHub.vscode-github-actions",
                  "thekalinga.bootstrap4-vscode",
                  "ziyasal.vscode-open-in-github",
                  "ZainChen.json",
                  "kisstkondoros.vscode-gutter-preview",
                  "tamasfe.even-better-toml",
                  "shardulm94.trailing-spaces",
                  "quicktype.quicktype",
                  "yzane.markdown-pdf",
                  "bierner.markdown-mermaid",
                  "GraphQL.vscode-graphql",
                  "ms-python.pylint",
                  "bierner.github-markdown-preview",
                  "jock.svg",
                  "charliermarsh.ruff",
                  "ms-python.mypy-type-checker",
                  "graphql.vscode-graphql-syntax",
                  "James-Yu.latex-workshop",
                  "ExecutableBookProject.myst-highlight"
               ],
               "settings": {
                  "github.copilot.chat.codeGeneration.instructions": [
                     {
                        "text": "This dev container includes an up-to-date version of Git pre-installed and available on the `PATH`."
                     },
                     {
                        "text": "This dev container includes the conda and mamba package managers pre-installed and available on the `PATH`. Additional packages installed using Conda/Mamba will be downloaded from conda-forge or another repository configured by the user. A user can install different versions of Python than the one in this dev container by running a command like: `conda install python=3.13`"
                     }
                  ],
                  "jupyter.kernels.filter": [
                     {
                        "path": "/opt/conda/bin/python",
                        "type": "pythonEnvironment"
                     },
                     {
                        "path": "/opt/conda/envs/app/bin/python",
                        "type": "pythonEnvironment"
                     }
                  ],
                  "lldb.executable": "/usr/bin/lldb",
                  "python.defaultInterpreterPath": "/opt/conda/envs/app/bin/python",
                  "tasks": {
                     "tasks": [
                        {
                           "args": [
                              "-p",
                              "-o",
                              "pdf",
                              "-v",
                              "${file}"
                           ],
                           "command": "inara",
                           "group": {
                              "isDefault": true,
                              "kind": "build"
                           },
                           "label": "Build Paper (Final)",
                           "presentation": {
                              "echo": true,
                              "focus": true,
                              "panel": "new",
                              "reveal": "always"
                           },
                           "type": "process"
                        },
                        {
                           "args": [
                              "-o",
                              "pdf,contextpdf,tex,preprint,docx,html,crossref,cff",
                              "-vv",
                              "${file}"
                           ],
                           "command": "inara",
                           "group": {
                              "isDefault": false,
                              "kind": "build"
                           },
                           "label": "Build Paper (Draft)",
                           "presentation": {
                              "echo": true,
                              "focus": true,
                              "panel": "new",
                              "reveal": "always"
                           },
                           "type": "process"
                        }
                     ],
                     "version": "2.0.0"
                  },
                  "terminal.integrated.fontFamily": "MesloLGS NF",
                  "terminal.integrated.fontLigatures.enabled": true,
                  "terminal.integrated.scrollback": 1000000
               }
            }
         },
         "dockerComposeFile": [
            "docker-compose.yaml"
         ],
         "features": {
            "ghcr.io/devcontainers/features/common-utils:2": {
               "configureZshAsDefaultShell": true,
               "installOhMyZsh": true,
               "installOhMyZshConfig": true,
               "installZsh": true,
               "upgradePackages": true,
               "userGid": "1000",
               "userUid": "1000",
               "username": "pypackit-dev"
            },
            "ghcr.io/devcontainers/features/desktop-lite:1": {
               "password": "noPassword",
               "version": "latest",
               "vncPort": "5901",
               "webPort": "6080"
            },
            "ghcr.io/devcontainers/features/docker-outside-of-docker:1": {
               "version": "latest"
            },
            "ghcr.io/devcontainers/features/git-lfs:1": {
               "autoPull": true,
               "version": "latest"
            },
            "ghcr.io/devcontainers/features/github-cli:1": {
               "version": "latest"
            },
            "ghcr.io/devcontainers/features/node:1": {
               "installYarnUsingApt": true,
               "nodeGypDependencies": true,
               "nvmInstallPath": "/usr/local/share/nvm",
               "nvmVersion": "latest",
               "pnpmVersion": "latest",
               "version": "latest"
            },
            "ghcr.io/devcontainers/features/oryx:1": {},
            "ghcr.io/devcontainers/features/ruby:1": {
               "version": "latest"
            },
            "ghcr.io/devcontainers/features/rust:1": {
               "profile": "minimal",
               "version": "latest"
            },
            "ghcr.io/devcontainers/features/sshd:1": {
               "packages": "{\n  \\\"app\\\": {\n    \\\"packages\\\": [\n      {\n        \\\"id\\\": \\\"main\\\",\n        \\\"extras\\\": \\\"all\\\"\n      },\n      {\n        \\\"id\\\": \\\"test\\\",\n        \\\"extras\\\": \\\"all\\\"\n      }\n    ],\n    \\\"python-version\\\": \\\"3.10\\\",\n    \\\"sources\\\": \\\"pip conda apt bash\\\"\n  },\n  \\\"website\\\": {\n    \\\"packages\\\": [\n      {\n        \\\"id\\\": \\\"ci\\\",\n        \\\"extras\\\": \\\"all\\\"\n      }\n    ],\n    \\\"python-version\\\": \\\"3.13\\\",\n    \\\"sources\\\": \\\"pip conda apt bash\\\"\n  }\n}",
               "version": "latest"
            }
         },
         "forwardPorts": [
            8888,
            6080,
            5901
         ],
         "name": "PyPackIT Development Environment",
         "overrideFeatureInstallOrder": [
            "ghcr.io/devcontainers/features/common-utils",
            "ghcr.io/devcontainers/features/desktop-lite:1",
            "ghcr.io/devcontainers/features/node",
            "ghcr.io/devcontainers/features/ruby",
            "ghcr.io/devcontainers/features/sshd",
            "ghcr.io/devcontainers/features/git-lfs",
            "ghcr.io/devcontainers/features/github-cli",
            "ghcr.io/devcontainers/features/docker-outside-of-docker",
            "ghcr.io/devcontainers/features/oryx",
            "ghcr.io/devcontainers-extra/features/apt-get-packages"
         ],
         "portsAttributes": {
            "5901": {
               "elevateIfNeeded": true,
               "label": "Desktop Lite (VNC)",
               "onAutoForward": "notify",
               "requireLocalPort": false
            },
            "6080": {
               "elevateIfNeeded": true,
               "label": "Desktop Lite (web)",
               "onAutoForward": "openBrowserOnce",
               "requireLocalPort": false
            },
            "8888": {
               "elevateIfNeeded": true,
               "label": "Jupyter",
               "onAutoForward": "openBrowserOnce",
               "requireLocalPort": false
            }
         },
         "postCreateCommand": {
            "install_devcontainers_cli": [
               "npm",
               "install",
               "-g",
               "@devcontainers/cli"
            ],
            "pre_commit_install": [
               "conda",
               "run",
               "--name",
               "pre_commit",
               "--live-stream",
               "-vv",
               "pre-commit",
               "install",
               "--install-hooks",
               "--config",
               ".devcontainer/config/pre-commit.yaml"
            ]
         },
         "remoteEnv": {
            "LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}"
         },
         "remoteUser": "pypackit-dev",
         "service": "main",
         "shutdownAction": "none",
         "workspaceFolder": "/pypackit"
      },
      "dockerfile": [
         {
            "description": "We use a bare [Ubuntu image](https://hub.docker.com/_/ubuntu)\nfor maximum control over the environment.\nThe Noble (22.04) release is used,\nwhich corresponds to the `ubuntu-latest`\n[GitHub Actions runner](https://docs.github.com/en/actions/using-github-hosted-runners/using-github-hosted-runners/about-github-hosted-runners#standard-github-hosted-runners-for-public-repositories)\nas of April 2025.\nFor other options, See:\n- [Devcontainer images](https://github.com/devcontainers/images)\n  and their corresponding [templates](https://github.com/devcontainers/templates).\n- [Buildpack-deps images](https://github.com/docker-library/buildpack-deps/).\n",
            "instructions": [
               {
                  "FROM": "ubuntu:noble"
               }
            ],
            "summary": "Starting point for the devcontainer.",
            "title": "Base Image"
         },
         {
            "description": "Only include those that affect the build processes\nand do not change frequently.\nOther environment variables can be set\ndirectly before where its needed\n(or at the end if only needed for the final image)\nto avoid early cache invalidation.\n",
            "instructions": [
               {
                  "ENV": {
                     "LANG": "C.UTF-8",
                     "LC_ALL": "C.UTF-8",
                     "PYTHONIOENCODING": "UTF-8",
                     "TZ": "UTC"
                  }
               },
               {
                  "USER": "root"
               }
            ],
            "summary": "Main build arguments and environment variables.",
            "title": "Arguments and Environment Variables"
         },
         {
            "description": "This step copies the system package installation script\nto the container and makes it executable.\nIt is used in later steps to install packages\nfrom the system package manager.\n",
            "instructions": [
               {
                  "ARG": {
                     "SYSPKG_INSTALL_SCRIPT": "/usr/local/share/pypackit-container/.devcontainer/feature/syspkg/install.sh"
                  }
               },
               {
                  "COPY": "[\".devcontainer/feature/syspkg/install.sh\", \"$SYSPKG_INSTALL_SCRIPT\"]\n"
               },
               {
                  "RUN": "chmod +x \"$SYSPKG_INSTALL_SCRIPT\""
               }
            ],
            "summary": "Set up the system package installation script.",
            "title": "System Package Installation Script"
         },
         {
            "instructions": [
               {
                  "ARG": {
                     "APT_REQUIRED_PACKAGES": "/usr/local/share/pypackit-container/.devcontainer/environment/syspkg/required/apt_pkgs.txt"
                  }
               },
               {
                  "COPY": "[\".devcontainer/environment/syspkg/required/apt_pkgs.txt\", \"$APT_REQUIRED_PACKAGES\"]"
               },
               {
                  "RUN": "\"$SYSPKG_INSTALL_SCRIPT\" --apt \"$APT_REQUIRED_PACKAGES\" --logfile /var/log/pypackit-container/apt_install_required.log"
               },
               {
                  "ARG": {
                     "APT_REQUIRED_POST_INSTALL": "/usr/local/share/pypackit-container/.devcontainer/environment/syspkg/required/apt_post_install.sh"
                  }
               },
               {
                  "COPY": "[\".devcontainer/environment/syspkg/required/apt_post_install.sh\", \"$APT_REQUIRED_POST_INSTALL\"]"
               },
               {
                  "RUN": "chmod +x $APT_REQUIRED_POST_INSTALL;\n$APT_REQUIRED_POST_INSTALL"
               }
            ],
            "summary": "Installation of required APT packages.",
            "title": "APT Packages (Required)"
         },
         {
            "instructions": [
               {
                  "ARG": {
                     "APT_ESSENTIAL_PACKAGES": "/usr/local/share/pypackit-container/.devcontainer/environment/syspkg/essential/apt_pkgs.txt"
                  }
               },
               {
                  "COPY": "[\".devcontainer/environment/syspkg/essential/apt_pkgs.txt\", \"$APT_ESSENTIAL_PACKAGES\"]"
               },
               {
                  "RUN": "\"$SYSPKG_INSTALL_SCRIPT\" --apt \"$APT_ESSENTIAL_PACKAGES\" --logfile /var/log/pypackit-container/apt_install_essential.log"
               },
               {
                  "ARG": {
                     "APT_ESSENTIAL_POST_INSTALL": "/usr/local/share/pypackit-container/.devcontainer/environment/syspkg/essential/apt_post_install.sh"
                  }
               },
               {
                  "COPY": "[\".devcontainer/environment/syspkg/essential/apt_post_install.sh\", \"$APT_ESSENTIAL_POST_INSTALL\"]"
               },
               {
                  "RUN": "chmod +x $APT_ESSENTIAL_POST_INSTALL;\n$APT_ESSENTIAL_POST_INSTALL"
               }
            ],
            "summary": "Installation of essential APT packages.",
            "title": "APT Packages (Essential)"
         },
         {
            "instructions": [
               {
                  "ARG": {
                     "TEXLIVE_INSTALL_PROFILE": "/usr/local/share/pypackit-container/.devcontainer/feature/texlive/install.profile",
                     "TEXLIVE_INSTALL_SCRIPT": "/usr/local/share/pypackit-container/.devcontainer/feature/texlive/install.sh"
                  }
               },
               {
                  "COPY": "[\".devcontainer/feature/texlive/install.sh\", \"$TEXLIVE_INSTALL_SCRIPT\"]"
               },
               {
                  "COPY": "[\".devcontainer/feature/texlive/install.profile\", \"$TEXLIVE_INSTALL_PROFILE\"]"
               },
               {
                  "RUN": "chmod +x \"$TEXLIVE_INSTALL_SCRIPT\";\n\"$TEXLIVE_INSTALL_SCRIPT\"\n    --profile \"$TEXLIVE_INSTALL_PROFILE\"\n    --logfile \"/var/log/pypackit-container/texlive_install.log\"\n    --debug\n"
               }
            ],
            "summary": "Installation of TeX Live.",
            "title": "TeX Live Installation"
         },
         {
            "description": "We install [git](https://git-scm.com/doc)\ndirectly from its [GitHub repository](https://github.com/git/git)\nto get and up-to-date version.\n",
            "instructions": [
               {
                  "ARG": {
                     "GIT_INSTALL_SCRIPT": "/usr/local/share/pypackit-container/.devcontainer/feature/git/install.sh"
                  }
               },
               {
                  "COPY": "[\".devcontainer/feature/git/install.sh\", \"$GIT_INSTALL_SCRIPT\"]\n"
               },
               {
                  "ENV": {
                     "PATH": "/usr/local/git/bin:$PATH"
                  }
               },
               {
                  "RUN": "chmod +x \"$GIT_INSTALL_SCRIPT\";\n\"$GIT_INSTALL_SCRIPT\"\n    --version \"2.49.0\"\n    --prefix \"/usr/local/git\"\n    --logfile \"/var/log/pypackit-container/git_install.log\"\n    --debug\n"
               }
            ],
            "title": "Git Installation"
         },
         {
            "instructions": [
               {
                  "ARG": {
                     "USERNAME": "pypackit-dev",
                     "USER_GID": 1000,
                     "USER_HOME": "/home/pypackit-dev",
                     "USER_UID": 1000
                  }
               },
               {
                  "RUN": "# Create a new user with the specified UID and GID with sudo access.\n# - https://github.com/devcontainers/features/blob/8895eb3d161d28ada3a8de761a83135e811cae3d/src/common-utils/main.sh#L427-L443\n# - https://code.visualstudio.com/remote/advancedcontainers/add-nonroot-user#_change-the-uidgid-of-an-existing-container-user\nset -eux;\ngroupadd --gid $USER_GID $USERNAME;\nuseradd\n    --create-home\n    --home-dir \"$USER_HOME\"\n    --gid $USER_GID\n    --shell /bin/bash\n    --uid $USER_UID\n    $USERNAME;\n# Grant user passwordless sudo access to act as any user.\necho \"$USERNAME ALL=(ALL) NOPASSWD:ALL\" | tee /etc/sudoers.d/$USERNAME > /dev/null;\nchmod 0440 /etc/sudoers.d/$USERNAME;\n"
               }
            ],
            "summary": "Setup user.",
            "title": "User Setup"
         },
         {
            "instructions": [
               {
                  "ENV": {
                     "CONDA_DIR": "/opt/conda"
                  }
               },
               {
                  "ENV": {
                     "PATH": "$CONDA_DIR/bin:$PATH"
                  }
               },
               {
                  "ARG": {
                     "MINIFORGE_INSTALL_SCRIPT": "/usr/local/share/pypackit-container/.devcontainer/feature/miniforge/install.sh"
                  }
               },
               {
                  "COPY": "[\".devcontainer/feature/miniforge/install.sh\", \"$MINIFORGE_INSTALL_SCRIPT\"]\n"
               },
               {
                  "RUN": "chmod +x \"$MINIFORGE_INSTALL_SCRIPT\";\n\"$MINIFORGE_INSTALL_SCRIPT\"\n    --name \"Miniforge3\"\n    --version \"24.11.3-2\"\n    --conda-dir \"$CONDA_DIR\"\n    --group \"pypackit-dev\"\n    --user \"pypackit-dev\"\n    --logfile \"/var/log/pypackit-container/miniforge_install.log\"\n    --debug\n"
               }
            ],
            "title": "MiniForge Installation"
         },
         {
            "instructions": [
               {
                  "ARG": {
                     "APT_RECOMMENDED_PACKAGES": "/usr/local/share/pypackit-container/.devcontainer/environment/syspkg/recommended/apt_pkgs.txt"
                  }
               },
               {
                  "COPY": "[\".devcontainer/environment/syspkg/recommended/apt_pkgs.txt\", \"$APT_RECOMMENDED_PACKAGES\"]"
               },
               {
                  "RUN": "\"$SYSPKG_INSTALL_SCRIPT\" --apt \"$APT_RECOMMENDED_PACKAGES\" --logfile /var/log/pypackit-container/apt_install_recommended.log"
               },
               {
                  "ARG": {
                     "APT_RECOMMENDED_POST_INSTALL": "/usr/local/share/pypackit-container/.devcontainer/environment/syspkg/recommended/apt_post_install.sh"
                  }
               },
               {
                  "COPY": "[\".devcontainer/environment/syspkg/recommended/apt_post_install.sh\", \"$APT_RECOMMENDED_POST_INSTALL\"]"
               },
               {
                  "RUN": "chmod +x $APT_RECOMMENDED_POST_INSTALL;\n$APT_RECOMMENDED_POST_INSTALL"
               }
            ],
            "summary": "Installation of recommended APT packages.",
            "title": "APT Packages (Recommended)"
         },
         {
            "instructions": [
               {
                  "ARG": {
                     "CONDA_ENVS_DIR": "/usr/local/share/pypackit-container/.devcontainer/environment/conda"
                  }
               },
               {
                  "COPY": "[\".devcontainer/environment/conda/\", \"$CONDA_ENVS_DIR\"]\n"
               },
               {
                  "RUN": "chmod +x \"$CONDA_ENVS_INSTALL_SCRIPT\";\n\"$MINIFORGE_INSTALL_SCRIPT\"\n    --envs \"$CONDA_ENVS_DIR\"\n    --logfile \"/var/log/pypackit-container/conda_envs_install.log\"\n    --debug\n"
               }
            ],
            "title": "Conda Environment Installation"
         },
         {
            "instructions": [
               {
                  "RUN": "# Delete default ubuntu user.\n# - Ref: https://github.com/devcontainers/images/blob/main/src/base-ubuntu/.devcontainer/Dockerfile\nif id \"ubuntu\" &>/dev/null; then\n    echo \"Deleting user 'ubuntu'\" && userdel -f -r ubuntu || echo \"Failed to delete ubuntu user.\";\nelse\n    echo \"User 'ubuntu' does not exist.\";\nfi\n"
               }
            ],
            "summary": "Run post-installation tasks.",
            "title": "Post-Installation"
         },
         {
            "instructions": [
               {
                  "ARG": {
                     "OH_MY_ZSH_INSTALL_DIR": "/home/pypackit-dev/.oh-my-zsh"
                  }
               },
               {
                  "RUN": "set -eux;\n# Remove write permissions for group and others\n# (only user can write to the directory).\numask g-w,o-w;\nmkdir -p \"$OH_MY_ZSH_INSTALL_DIR\";\ngit clone\n    --depth=1\n    -c core.eol=lf\n    -c core.autocrlf=false\n    -c fsck.zeroPaddedFilemode=ignore\n    -c fetch.fsck.zeroPaddedFilemode=ignore\n    -c receive.fsck.zeroPaddedFilemode=ignore\n    \"https://github.com/ohmyzsh/ohmyzsh\"\n    \"$OH_MY_ZSH_INSTALL_DIR\" 2>&1;\n# Shrink git while still enabling updates\ncd \"$OH_MY_ZSH_INSTALL_DIR\";\ngit repack -a -d -f --depth=1 --window=1;\n"
               }
            ],
            "title": "Oh-My-Zsh Installation"
         },
         {
            "instructions": [
               {
                  "ARG": {
                     "APT_OPTIONAL_PACKAGES": "/usr/local/share/pypackit-container/.devcontainer/environment/syspkg/optional/apt_pkgs.txt"
                  }
               },
               {
                  "COPY": "[\".devcontainer/environment/syspkg/optional/apt_pkgs.txt\", \"$APT_OPTIONAL_PACKAGES\"]"
               },
               {
                  "RUN": "\"$SYSPKG_INSTALL_SCRIPT\" --apt \"$APT_OPTIONAL_PACKAGES\" --logfile /var/log/pypackit-container/apt_install_optional.log"
               },
               {
                  "ARG": {
                     "APT_OPTIONAL_POST_INSTALL": "/usr/local/share/pypackit-container/.devcontainer/environment/syspkg/optional/apt_post_install.sh"
                  }
               },
               {
                  "COPY": "[\".devcontainer/environment/syspkg/optional/apt_post_install.sh\", \"$APT_OPTIONAL_POST_INSTALL\"]"
               },
               {
                  "RUN": "chmod +x $APT_OPTIONAL_POST_INSTALL;\n$APT_OPTIONAL_POST_INSTALL"
               }
            ],
            "summary": "Installation of recommended APT packages.",
            "title": "APT Packages (Optional)"
         },
         {
            "instructions": [
               {
                  "ARG": {
                     "USER_SHELL": "/bin/zsh"
                  }
               },
               {
                  "RUN": "# Ensure that login shells get the correct path if the user updated the PATH using ENV.\n# - https://github.com/devcontainers/features/blob/8895eb3d161d28ada3a8de761a83135e811cae3d/src/common-utils/main.sh#L343-L346\nrm -f /etc/profile.d/00-restore-env.sh\necho \"export PATH=${PATH//$(sh -lc 'echo $PATH')/\\$PATH}\" > /etc/profile.d/00-restore-env.sh\nchmod +x /etc/profile.d/00-restore-env.sh\n\n# Give user ownership of the entire home directory.\nchown --recursive \"$USERNAME:$USERNAME\" \"$HOME_DIR\";\n\n# Give the group (g) read and write (r+w) permissions on the entire home directory.\nchmod --recursive g+r+w \"$HOME_DIR\";\n\n# Set the group ID (g+s) on all directories in the home directory\n# so that new files and directories created in the home directory inherit the group ID.\nfind \"${HOME_DIR}\" -type d | xargs -n 1 chmod g+s;\n\n# Set user's default shell.\n# Fix `chsh`` always asking for a password on alpine linux\n# - Ref: https://github.com/devcontainers/features/blob/8895eb3d161d28ada3a8de761a83135e811cae3d/src/common-utils/main.sh#L520-L528\n# - Ref: https://askubuntu.com/questions/812420/chsh-always-asking-a-password-and-get-pam-authentication-failure.\nif [ ! -f \"/etc/pam.d/chsh\" ] || ! grep -Eq '^auth(.*)pam_rootok\\.so$' /etc/pam.d/chsh; then\n    echo \"auth sufficient pam_rootok.so\" >> /etc/pam.d/chsh;\nelif [[ -n \"$(awk '/^auth(.*)pam_rootok\\.so$/ && !/^auth[[:blank:]]+sufficient[[:blank:]]+pam_rootok\\.so$/' /etc/pam.d/chsh)\" ]]; then\n    awk '/^auth(.*)pam_rootok\\.so$/ { $2 = \"sufficient\" } { print }' /etc/pam.d/chsh > /tmp/chsh.tmp && mv /tmp/chsh.tmp /etc/pam.d/chsh;\nfi;\nchsh --shell \"$USER_SHELL\" \"$USERNAME\";\n"
               },
               {
                  "ENV": {
                     "BASH_ENV": "/etc/bash/bash_env"
                  }
               }
            ],
            "title": "Finalization"
         },
         {
            "instructions": [
               {
                  "CMD": "[ \"sleep\", \"infinity\" ]\n"
               }
            ],
            "title": "Entry"
         }
      ],
      "environment": {
         "anaconda": {
            "conda": {
               "anaconda-client": {
                  "description": "Client for uploading packages and managing channels in Anaconda.\n",
                  "name": "anaconda-client",
                  "spec": {
                     "channel": "conda-forge",
                     "full": "conda-forge::anaconda-client >=1.13",
                     "name": "anaconda-client",
                     "version": ">=1.13"
                  },
                  "url": {
                     "docs": "https://www.anaconda.com/docs/tools/anaconda-org/user-guide/getting-started-with-anaconda-client",
                     "package": "https://anaconda.org/conda-forge/anaconda-client",
                     "source": "https://github.com/anaconda/anaconda-client"
                  }
               }
            },
            "name": "anaconda",
            "path": ".devcontainer/environment/conda/anaconda.yaml"
         },
         "base": {
            "conda": {
               "conda-build": {
                  "description": "Tool for building conda packages.\n",
                  "name": "conda-build",
                  "notes": "For proper functioning, it is strongly recommended to\ninstall conda-build in the conda base environment.\nSee the [conda-build documentation](https://docs.conda.io/projects/conda-build/en/stable/install-conda-build.html)\nfor more information.\n",
                  "spec": {
                     "channel": "conda-forge",
                     "full": "conda-forge::conda-build",
                     "name": "conda-build",
                     "version": ""
                  },
                  "url": {
                     "docs": "https://conda.io/projects/conda-build",
                     "package": "https://anaconda.org/conda-forge/conda-build"
                  }
               }
            },
            "name": "base",
            "path": ".devcontainer/environment/conda/base.yaml"
         },
         "codecov": {
            "conda": {
               "rust": {
                  "name": "rust",
                  "notes": "Required for the `codecov` package.\n",
                  "spec": {
                     "channel": "conda-forge",
                     "full": "conda-forge::rust",
                     "name": "rust",
                     "version": ""
                  },
                  "url": {
                     "package": "https://anaconda.org/conda-forge/rust"
                  }
               }
            },
            "file": {
               "codecov_config": {
                  "content": {
                     "comment": {
                        "behavior": "default",
                        "layout": "header, diff, flags, files",
                        "require_changes": false
                     },
                     "coverage": {
                        "precision": 2,
                        "range": "90...100",
                        "round": "nearest",
                        "status": {
                           "project": {
                              "default": {
                                 "target": "100%",
                                 "threshold": "5%"
                              }
                           }
                        }
                     }
                  },
                  "content_setting": {
                     "prefix": "",
                     "separator": "\n",
                     "suffix": ""
                  },
                  "description": "[Codecov](https://about.codecov.io/) is an online platform\nthat provides test coverage metrics for your project.\nAfter [signing up on Codecov](https://docs.codecov.com/docs/quick-start),\nthese configurations will automatically control the generation of coverage reports\nand the submission of these reports to Codecov.\nFor a full reference, see the\n[Codecov YAML reference](https://docs.codecov.com/docs/codecovyml-reference).\n",
                  "file_setting": {
                     "eof_newline": true,
                     "json": {
                        "end_of_file_newline": true,
                        "indent": 3,
                        "sort_keys": true
                     },
                     "md": {
                        "heading_number": false,
                        "target": "github"
                     },
                     "sort_keys": true,
                     "yaml": {
                        "block_string": true,
                        "end_of_file_newline": true,
                        "mapping_indent": 2,
                        "remove_top_level_indent": true,
                        "sequence_indent": 4,
                        "sequence_indent_offset": 2,
                        "sort_keys": true
                     }
                  },
                  "name": "Codecov Configuration",
                  "path": ".github/.codecov.yml",
                  "path_schema": {
                     "description": "CodeCov only looks for a `codecov.yml` or `.codecov.yml` file\neither in the root of the repository, or in `.github/` and `dev/` directories.\n(cf. [CodeCov documentation](https://docs.codecov.com/docs/codecov-yaml#can-i-name-the-file-codecovyml)).\n",
                     "pattern": "^(.github/|dev/)?.?codecov.yml$"
                  },
                  "status": "active",
                  "summary": "Codecov [configuration file](https://docs.codecov.com/docs/codecov-yaml) in YAML format.",
                  "type": "yaml",
                  "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.github/.codecov.yml",
                  "validator": "validate_codecov_yaml"
               }
            },
            "name": "codecov",
            "path": ".devcontainer/environment/conda/codecov.yaml",
            "pip": {
               "codecov-cli": {
                  "name": "codecov-cli",
                  "spec": {
                     "full": "codecov-cli ==10.0.1",
                     "name": "codecov-cli",
                     "version": "==10.0.1"
                  },
                  "url": {
                     "docs": "https://docs.codecov.com/docs/the-codecov-cli",
                     "package": "https://pypi.org/project/codecov/",
                     "source": "https://github.com/codecov/codecov-cli"
                  }
               }
            }
         },
         "jupyter": {
            "conda": {
               "ipywidgets": {
                  "description": "Interactive widgets for the Jupyter notebook.\n",
                  "name": "ipywidgets",
                  "spec": {
                     "channel": "conda-forge",
                     "full": "conda-forge::ipywidgets",
                     "name": "ipywidgets",
                     "version": ""
                  },
                  "url": {
                     "docs": "https://ipywidgets.readthedocs.io",
                     "package": "https://anaconda.org/conda-forge/ipywidgets",
                     "source": "https://github.com/jupyter-widgets/ipywidgets"
                  }
               },
               "jupyterlab": {
                  "description": "JupyterLab is a web-based interactive development environment for Jupyter notebooks,\ncode, and data.\n",
                  "name": "jupyterlab",
                  "spec": {
                     "channel": "conda-forge",
                     "full": "conda-forge::jupyterlab",
                     "name": "jupyterlab",
                     "version": ""
                  },
                  "url": {
                     "docs": "https://jupyterlab.readthedocs.io",
                     "package": "https://anaconda.org/conda-forge/jupyterlab",
                     "source": "https://github.com/jupyterlab/jupyterlab"
                  }
               },
               "jupyterlab-git": {
                  "description": "Git extension for JupyterLab.\n",
                  "name": "jupyterlab-git",
                  "spec": {
                     "channel": "conda-forge",
                     "full": "conda-forge::jupyterlab-git",
                     "name": "jupyterlab-git",
                     "version": ""
                  },
                  "url": {
                     "package": "https://anaconda.org/conda-forge/jupyterlab-git",
                     "source": "https://github.com/jupyterlab/jupyterlab-git"
                  }
               },
               "jupyterlab-myst": {
                  "description": "JupyterLab extension for rendering MyST markdown.\n",
                  "name": "jupyterlab-myst",
                  "spec": {
                     "channel": "conda-forge",
                     "full": "conda-forge::jupyterlab-myst",
                     "name": "jupyterlab-myst",
                     "version": ""
                  },
                  "url": {
                     "docs": "https://jupyter-book.github.io/jupyterlab-myst/",
                     "package": "https://anaconda.org/conda-forge/jupyterlab-myst",
                     "source": "https://github.com/jupyter-book/jupyterlab-myst"
                  }
               },
               "nb_conda_kernels": {
                  "description": "Package for managing conda environment-based kernels inside of Jupyter.\n",
                  "name": "nb_conda_kernels",
                  "notes": "Each conda environment that has `ipykernel` installed\nwill be available as a kernel in Jupyter.\nSee also:\n- https://github.com/jupyterlab/jupyterlab/issues/12544#issuecomment-1125754909\n- https://ipython.readthedocs.io/en/stable/install/kernel_install.html#kernels-for-different-environments\n- https://stackoverflow.com/questions/53004311/how-to-add-conda-environment-to-jupyter-lab\n",
                  "spec": {
                     "channel": "conda-forge",
                     "full": "conda-forge::nb_conda_kernels",
                     "name": "nb_conda_kernels",
                     "version": ""
                  },
                  "url": {
                     "package": "https://anaconda.org/conda-forge/nb_conda_kernels",
                     "source": "https://github.com/anaconda/nb_conda_kernels"
                  }
               },
               "qtconsole": {
                  "description": "Jupyter QtConsole is a terminal-based console for Jupyter.\n",
                  "name": "qtconsole",
                  "spec": {
                     "channel": "conda-forge",
                     "full": "conda-forge::qtconsole",
                     "name": "qtconsole",
                     "version": ""
                  },
                  "url": {
                     "docs": "https://qtconsole.readthedocs.io",
                     "package": "https://anaconda.org/conda-forge/qtconsole",
                     "source": "https://github.com/jupyter/qtconsole"
                  }
               }
            },
            "name": "jupyter",
            "path": ".devcontainer/environment/conda/jupyter.yaml"
         },
         "pre_commit": {
            "conda": {
               "pre-commit": {
                  "description": "Framework for managing and maintaining\nmulti-language hooks for formatting and linting.\n",
                  "name": "pre-commit",
                  "spec": {
                     "channel": "conda-forge",
                     "full": "conda-forge::pre-commit ==4.1.0",
                     "name": "pre-commit",
                     "version": "==4.1.0"
                  },
                  "url": {
                     "docs": "https://pre-commit.com/",
                     "package": "https://anaconda.org/conda-forge/pre_commit",
                     "source": "https://github.com/pre-commit/pre-commit"
                  }
               }
            },
            "file": {
               "pre_commit_config": {
                  "content": {
                     "default_language_version": {
                        "python": "python3"
                     },
                     "minimum_pre_commit_version": "4.0.0",
                     "repos": [
                        {
                           "hooks": [
                              {
                                 "id": "check-ast",
                                 "stages": [
                                    "pre-commit",
                                    "manual"
                                 ],
                                 "verbose": true
                              },
                              {
                                 "id": "check-case-conflict",
                                 "stages": [
                                    "pre-commit",
                                    "manual"
                                 ],
                                 "verbose": true
                              },
                              {
                                 "id": "check-json",
                                 "stages": [
                                    "pre-commit",
                                    "manual"
                                 ],
                                 "verbose": true
                              },
                              {
                                 "id": "check-shebang-scripts-are-executable",
                                 "stages": [
                                    "pre-commit",
                                    "manual"
                                 ],
                                 "verbose": true
                              },
                              {
                                 "id": "check-symlinks",
                                 "stages": [
                                    "pre-commit",
                                    "manual"
                                 ],
                                 "verbose": true
                              },
                              {
                                 "id": "check-toml",
                                 "stages": [
                                    "pre-commit",
                                    "manual"
                                 ],
                                 "verbose": true
                              },
                              {
                                 "id": "check-xml",
                                 "stages": [
                                    "pre-commit",
                                    "manual"
                                 ],
                                 "verbose": true
                              },
                              {
                                 "id": "destroyed-symlinks",
                                 "stages": [
                                    "pre-commit",
                                    "manual"
                                 ],
                                 "verbose": true
                              },
                              {
                                 "id": "end-of-file-fixer",
                                 "stages": [
                                    "pre-commit",
                                    "manual"
                                 ],
                                 "verbose": true
                              },
                              {
                                 "id": "fix-byte-order-marker",
                                 "stages": [
                                    "pre-commit",
                                    "manual"
                                 ],
                                 "verbose": true
                              },
                              {
                                 "args": [
                                    "--fix",
                                    "auto"
                                 ],
                                 "id": "mixed-line-ending",
                                 "stages": [
                                    "pre-commit",
                                    "manual"
                                 ],
                                 "verbose": true
                              },
                              {
                                 "args": [
                                    "--branch",
                                    "main",
                                    "--pattern",
                                    "release/v.*",
                                    "--pattern",
                                    "prerelease/v.*"
                                 ],
                                 "id": "no-commit-to-branch",
                                 "stages": [
                                    "pre-commit"
                                 ],
                                 "verbose": true
                              },
                              {
                                 "args": [
                                    "--autofix",
                                    "--indent",
                                    "3"
                                 ],
                                 "id": "pretty-format-json",
                                 "stages": [
                                    "pre-commit",
                                    "manual"
                                 ],
                                 "verbose": true
                              },
                              {
                                 "args": [
                                    "--markdown-linebreak-ext=md"
                                 ],
                                 "id": "trailing-whitespace",
                                 "stages": [
                                    "pre-commit",
                                    "manual"
                                 ],
                                 "verbose": true
                              }
                           ],
                           "repo": "https://github.com/pre-commit/pre-commit-hooks",
                           "rev": "v5.0.0"
                        },
                        {
                           "hooks": [
                              {
                                 "args": [
                                    "--verbose",
                                    "--config",
                                    ".devcontainer/config/ruff.toml",
                                    "--exit-non-zero-on-fix"
                                 ],
                                 "id": "ruff",
                                 "stages": [
                                    "pre-commit",
                                    "manual"
                                 ],
                                 "types_or": [
                                    "python",
                                    "pyi",
                                    "jupyter"
                                 ],
                                 "verbose": true
                              },
                              {
                                 "args": [
                                    "--config",
                                    ".devcontainer/config/ruff.toml"
                                 ],
                                 "id": "ruff-format",
                                 "stages": [
                                    "pre-commit",
                                    "manual"
                                 ],
                                 "types_or": [
                                    "python",
                                    "pyi",
                                    "jupyter"
                                 ],
                                 "verbose": true
                              }
                           ],
                           "repo": "https://github.com/astral-sh/ruff-pre-commit",
                           "rev": "v0.11.0"
                        }
                     ]
                  },
                  "content_setting": {
                     "prefix": "",
                     "separator": "\n",
                     "suffix": ""
                  },
                  "file_setting": {
                     "eof_newline": true,
                     "json": {
                        "end_of_file_newline": true,
                        "indent": 3,
                        "sort_keys": true
                     },
                     "md": {
                        "heading_number": false,
                        "target": "github"
                     },
                     "sort_keys": true,
                     "yaml": {
                        "block_string": true,
                        "end_of_file_newline": true,
                        "mapping_indent": 2,
                        "remove_top_level_indent": true,
                        "sequence_indent": 4,
                        "sequence_indent_offset": 2,
                        "sort_keys": true
                     }
                  },
                  "name": "Pre-Commit Configuration",
                  "path": ".devcontainer/config/pre-commit.yaml",
                  "status": "active",
                  "summary": "Pre-Commit [configuration file](https://pre-commit.com/#configuration).",
                  "type": "yaml",
                  "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/config/pre-commit.yaml"
               },
               "pre_commit_config_ci": {
                  "content": {
                     "default_language_version": {
                        "python": "python3"
                     },
                     "exclude": "^\\.github/workflows/[^/]+\\.(?i:ya?ml)$",
                     "minimum_pre_commit_version": "4.0.0",
                     "repos": [
                        {
                           "hooks": [
                              {
                                 "id": "check-ast",
                                 "stages": [
                                    "pre-commit",
                                    "manual"
                                 ],
                                 "verbose": true
                              },
                              {
                                 "id": "check-case-conflict",
                                 "stages": [
                                    "pre-commit",
                                    "manual"
                                 ],
                                 "verbose": true
                              },
                              {
                                 "id": "check-json",
                                 "stages": [
                                    "pre-commit",
                                    "manual"
                                 ],
                                 "verbose": true
                              },
                              {
                                 "id": "check-shebang-scripts-are-executable",
                                 "stages": [
                                    "pre-commit",
                                    "manual"
                                 ],
                                 "verbose": true
                              },
                              {
                                 "id": "check-symlinks",
                                 "stages": [
                                    "pre-commit",
                                    "manual"
                                 ],
                                 "verbose": true
                              },
                              {
                                 "id": "check-toml",
                                 "stages": [
                                    "pre-commit",
                                    "manual"
                                 ],
                                 "verbose": true
                              },
                              {
                                 "id": "check-xml",
                                 "stages": [
                                    "pre-commit",
                                    "manual"
                                 ],
                                 "verbose": true
                              },
                              {
                                 "id": "destroyed-symlinks",
                                 "stages": [
                                    "pre-commit",
                                    "manual"
                                 ],
                                 "verbose": true
                              },
                              {
                                 "id": "end-of-file-fixer",
                                 "stages": [
                                    "pre-commit",
                                    "manual"
                                 ],
                                 "verbose": true
                              },
                              {
                                 "id": "fix-byte-order-marker",
                                 "stages": [
                                    "pre-commit",
                                    "manual"
                                 ],
                                 "verbose": true
                              },
                              {
                                 "args": [
                                    "--fix",
                                    "auto"
                                 ],
                                 "id": "mixed-line-ending",
                                 "stages": [
                                    "pre-commit",
                                    "manual"
                                 ],
                                 "verbose": true
                              },
                              {
                                 "args": [
                                    "--branch",
                                    "main",
                                    "--pattern",
                                    "release/v.*",
                                    "--pattern",
                                    "prerelease/v.*"
                                 ],
                                 "id": "no-commit-to-branch",
                                 "stages": [
                                    "pre-commit"
                                 ],
                                 "verbose": true
                              },
                              {
                                 "args": [
                                    "--autofix",
                                    "--indent",
                                    "3"
                                 ],
                                 "id": "pretty-format-json",
                                 "stages": [
                                    "pre-commit",
                                    "manual"
                                 ],
                                 "verbose": true
                              },
                              {
                                 "args": [
                                    "--markdown-linebreak-ext=md"
                                 ],
                                 "id": "trailing-whitespace",
                                 "stages": [
                                    "pre-commit",
                                    "manual"
                                 ],
                                 "verbose": true
                              }
                           ],
                           "repo": "https://github.com/pre-commit/pre-commit-hooks",
                           "rev": "v5.0.0"
                        },
                        {
                           "hooks": [
                              {
                                 "args": [
                                    "--verbose",
                                    "--config",
                                    ".devcontainer/config/ruff.toml",
                                    "--exit-non-zero-on-fix"
                                 ],
                                 "id": "ruff",
                                 "stages": [
                                    "pre-commit",
                                    "manual"
                                 ],
                                 "types_or": [
                                    "python",
                                    "pyi",
                                    "jupyter"
                                 ],
                                 "verbose": true
                              },
                              {
                                 "args": [
                                    "--config",
                                    ".devcontainer/config/ruff.toml"
                                 ],
                                 "id": "ruff-format",
                                 "stages": [
                                    "pre-commit",
                                    "manual"
                                 ],
                                 "types_or": [
                                    "python",
                                    "pyi",
                                    "jupyter"
                                 ],
                                 "verbose": true
                              }
                           ],
                           "repo": "https://github.com/astral-sh/ruff-pre-commit",
                           "rev": "v0.11.0"
                        }
                     ]
                  },
                  "content_setting": {
                     "prefix": "",
                     "separator": "\n",
                     "suffix": ""
                  },
                  "file_setting": {
                     "eof_newline": true,
                     "json": {
                        "end_of_file_newline": true,
                        "indent": 3,
                        "sort_keys": true
                     },
                     "md": {
                        "heading_number": false,
                        "target": "github"
                     },
                     "sort_keys": true,
                     "yaml": {
                        "block_string": true,
                        "end_of_file_newline": true,
                        "mapping_indent": 2,
                        "remove_top_level_indent": true,
                        "sequence_indent": 4,
                        "sequence_indent_offset": 2,
                        "sort_keys": true
                     }
                  },
                  "name": "Pre-Commit Configuration for CI",
                  "path": ".devcontainer/config/pre-commit-ci.yaml",
                  "status": "active",
                  "summary": "Pre-Commit [configuration file](https://pre-commit.com/#configuration) for use in CI pipeline.",
                  "type": "yaml",
                  "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/config/pre-commit-ci.yaml"
               },
               "ruff_config": {
                  "content": {
                     "cache-dir": ".local/cache/ruff",
                     "fix": true,
                     "format": {
                        "docstring-code-format": true
                     },
                     "line-length": 100,
                     "lint": {
                        "allowed-confusables": [
                           "\u2013"
                        ],
                        "exclude": [
                           ".control/**/*.py"
                        ],
                        "flake8-annotations": {
                           "allow-star-arg-any": true,
                           "mypy-init-return": true,
                           "suppress-dummy-args": true,
                           "suppress-none-returning": true
                        },
                        "flake8-comprehensions": {
                           "allow-dict-calls-with-keyword-arguments": true
                        },
                        "flake8-type-checking": {
                           "quote-annotations": true
                        },
                        "ignore": [
                           "PLR1711",
                           "W191",
                           "E501",
                           "E111",
                           "E114",
                           "E117",
                           "D206",
                           "D300",
                           "Q000",
                           "Q001",
                           "Q002",
                           "Q003",
                           "COM812",
                           "COM819",
                           "ISC001",
                           "ISC002"
                        ],
                        "mccabe": {
                           "max-complexity": 15
                        },
                        "per-file-ignores": {
                           ".devcontainer/script/**": [
                              "T201",
                              "S603",
                              "S607"
                           ],
                           ".github/**": [
                              "T201",
                              "S603",
                              "S607"
                           ],
                           "docs/website/source/conf.py": [
                              "TRY003"
                           ],
                           "pkg/src/pypackit/__main__.py": [
                              "T20"
                           ],
                           "template/.control/hooks/cca.py": [
                              "ARG002"
                           ],
                           "template/pkg/src/new_pyproject/__init__.py": [
                              "T20",
                              "D104"
                           ],
                           "template/pkg/src/new_pyproject/__main__.py": [
                              "T20"
                           ],
                           "template/test/src/**": [
                              "S101"
                           ],
                           "template/test/src/new_pyproject_testsuite/__init__.py": [
                              "T20",
                              "D104"
                           ],
                           "template/test/src/new_pyproject_testsuite/__main__.py": [
                              "T20"
                           ],
                           "test/src/**": [
                              "S101"
                           ],
                           "test/src/pypackit_testsuite/__init__.py": [
                              "T20"
                           ],
                           "test/src/pypackit_testsuite/__main__.py": [
                              "T20"
                           ]
                        },
                        "pydocstyle": {
                           "convention": "numpy"
                        },
                        "pylint": {
                           "max-args": 10,
                           "max-public-methods": 50,
                           "max-returns": 10
                        },
                        "select": [
                           "F",
                           "E",
                           "W",
                           "C90",
                           "I",
                           "N",
                           "D",
                           "UP",
                           "YTT",
                           "ANN",
                           "ASYNC",
                           "S",
                           "BLE",
                           "FBT",
                           "B",
                           "A",
                           "COM",
                           "C4",
                           "DTZ",
                           "T10",
                           "EM",
                           "EXE",
                           "FA",
                           "ISC",
                           "ICN",
                           "LOG",
                           "G",
                           "PIE",
                           "T20",
                           "PYI",
                           "PT",
                           "Q",
                           "RSE",
                           "RET",
                           "SLF",
                           "SLOT",
                           "SIM",
                           "TID",
                           "TCH",
                           "INT",
                           "ARG",
                           "PTH",
                           "TD",
                           "FIX",
                           "ERA",
                           "PD",
                           "PGH",
                           "PL",
                           "E",
                           "R",
                           "W",
                           "TRY",
                           "FLY",
                           "NPY",
                           "PERF",
                           "FURB",
                           "RUF"
                        ]
                     },
                     "output-format": "grouped",
                     "required-version": ">=0.11,<0.12",
                     "show-fixes": true,
                     "src": [
                        "pkg/src",
                        "test/src"
                     ],
                     "target-version": "py310"
                  },
                  "content_setting": {
                     "prefix": "",
                     "separator": "\n",
                     "suffix": ""
                  },
                  "file_setting": {
                     "eof_newline": true,
                     "json": {
                        "end_of_file_newline": true,
                        "indent": 3,
                        "sort_keys": true
                     },
                     "md": {
                        "heading_number": false,
                        "target": "github"
                     },
                     "sort_keys": true,
                     "yaml": {
                        "block_string": true,
                        "end_of_file_newline": true,
                        "mapping_indent": 2,
                        "remove_top_level_indent": true,
                        "sequence_indent": 4,
                        "sequence_indent_offset": 2,
                        "sort_keys": true
                     }
                  },
                  "name": "Ruff Configuration",
                  "path": ".devcontainer/config/ruff.toml",
                  "status": "active",
                  "summary": "Ruff [configuration file](https://docs.astral.sh/ruff/settings/) in TOML format.",
                  "type": "toml",
                  "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/config/ruff.toml"
               }
            },
            "name": "pre_commit",
            "path": ".devcontainer/environment/conda/pre_commit.yaml",
            "variable": {
               "cache_dir": {
                  "key": "PRE_COMMIT_HOME",
                  "summary": "Directory to store the cache for pre-commit hooks.",
                  "value": ".local/cache/pre-commit"
               }
            }
         },
         "pybuild": {
            "name": "pybuild",
            "path": ".devcontainer/environment/conda/pybuild.yaml",
            "pip": {
               "build": {
                  "name": "build",
                  "spec": {
                     "full": "build >=1.2.2",
                     "name": "build",
                     "version": ">=1.2.2"
                  },
                  "url": {
                     "docs": "https://build.pypa.io/",
                     "package": "https://pypi.org/project/build/",
                     "source": "https://github.com/pypa/build"
                  }
               },
               "readme-renderer": {
                  "name": "readme-renderer",
                  "spec": {
                     "extras": [
                        "md"
                     ],
                     "full": "readme-renderer [md] >=44",
                     "name": "readme-renderer",
                     "version": ">=44"
                  },
                  "url": {
                     "package": "https://pypi.org/project/readme-renderer/",
                     "source": "https://github.com/pypa/readme_renderer"
                  }
               },
               "twine": {
                  "name": "twine",
                  "spec": {
                     "full": "twine",
                     "name": "twine",
                     "version": ""
                  },
                  "url": {
                     "docs": "https://twine.readthedocs.io/",
                     "package": "https://pypi.org/project/twine/",
                     "source": "https://github.com/pypa/twine"
                  }
               }
            },
            "variable": {
               "log_level": {
                  "description": "See the [versioningit documentation](https://versioningit.readthedocs.io/en/stable/configuration.html#log-level-environment-variable)\nfor more information.\n",
                  "key": "VERSIONINGIT_LOG_LEVEL",
                  "summary": "Log level for the versioningit tool during build.",
                  "value": "DEBUG"
               }
            }
         },
         "pylint": {
            "conda": {
               "enchant": {
                  "description": "Spellchecking library.\nThis is the underlying library for `pyenchant`.\n",
                  "name": "enchant",
                  "spec": {
                     "channel": "conda-forge",
                     "full": "conda-forge::enchant ==2.8.2",
                     "name": "enchant",
                     "version": "==2.8.2"
                  },
                  "url": {
                     "docs": "https://rrthomas.github.io/enchant/",
                     "package": "https://anaconda.org/conda-forge/enchant",
                     "source": "https://github.com/rrthomas/enchant/"
                  }
               },
               "pyenchant": {
                  "description": "Spellchecking library for Python.\nThis is an optional dependency of `pylint`,\nwhich is not included in the conda package.\n",
                  "name": "pyenchant",
                  "spec": {
                     "channel": "conda-forge",
                     "full": "conda-forge::pyenchant ==3.2.2",
                     "name": "pyenchant",
                     "version": "==3.2.2"
                  },
                  "url": {
                     "docs": "https://pyenchant.github.io/pyenchant/",
                     "package": "https://anaconda.org/conda-forge/pyenchant",
                     "source": "https://github.com/pyenchant/pyenchant/"
                  }
               },
               "pylint": {
                  "name": "pylint",
                  "spec": {
                     "channel": "conda-forge",
                     "full": "conda-forge::pylint ==3.3.4",
                     "name": "pylint",
                     "version": "==3.3.4"
                  },
                  "url": {
                     "docs": "https://pylint.readthedocs.io/",
                     "package": "https://anaconda.org/conda-forge/pylint",
                     "source": "https://github.com/pylint-dev/pylint"
                  }
               }
            },
            "name": "pylint",
            "path": ".devcontainer/environment/conda/pylint.yaml"
         },
         "type_check": {
            "data": {
               "cache_path": ".local/cache/mypy",
               "report_path": ".local/report/mypy"
            },
            "file": {
               "mypy_config": {
                  "content": {
                     "tool": {
                        "mypy": {
                           "any_exprs_report": ".local/report/mypy",
                           "cache_dir": ".local/cache/mypy",
                           "color_output": true,
                           "html_report": ".local/report/mypy",
                           "linecount_report": ".local/report/mypy",
                           "linecoverage_report": ".local/report/mypy",
                           "lineprecision_report": ".local/report/mypy",
                           "packages": [
                              "pypackit"
                           ],
                           "pretty": true,
                           "raise_exceptions": true,
                           "show_column_numbers": true,
                           "show_error_code_links": true,
                           "show_error_context": true,
                           "show_traceback": true,
                           "strict": true,
                           "txt_report": ".local/report/mypy",
                           "verbosity": 2,
                           "warn_return_any": true,
                           "xml_report": ".local/report/mypy"
                        }
                     }
                  },
                  "content_setting": {
                     "prefix": "",
                     "separator": "\n",
                     "suffix": ""
                  },
                  "file_setting": {
                     "eof_newline": true,
                     "json": {
                        "end_of_file_newline": true,
                        "indent": 3,
                        "sort_keys": true
                     },
                     "md": {
                        "heading_number": false,
                        "target": "github"
                     },
                     "sort_keys": true,
                     "yaml": {
                        "block_string": true,
                        "end_of_file_newline": true,
                        "mapping_indent": 2,
                        "remove_top_level_indent": true,
                        "sequence_indent": 4,
                        "sequence_indent_offset": 2,
                        "sort_keys": true
                     }
                  },
                  "name": "Mypy Configuration",
                  "path": ".devcontainer/config/mypy.toml",
                  "status": "active",
                  "summary": "Mypy [configuration file](https://mypy.readthedocs.io/en/stable/config_file.html) in [pyproject.toml](https://mypy.readthedocs.io/en/stable/config_file.html#using-a-pyproject-toml) format.",
                  "type": "toml",
                  "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/config/mypy.toml"
               }
            },
            "name": "type_check",
            "path": ".devcontainer/environment/conda/type_check.yaml",
            "pip": {
               "mypy": {
                  "name": "mypy",
                  "spec": {
                     "extras": [
                        "reports"
                     ],
                     "full": "mypy [reports] ==1.15.0",
                     "name": "mypy",
                     "version": "==1.15.0"
                  },
                  "url": {
                     "docs": "https://mypy.readthedocs.io/",
                     "package": "https://pypi.org/project/mypy/",
                     "source": "https://github.com/python/mypy"
                  }
               }
            }
         },
         "versioning": {
            "name": "versioning",
            "path": ".devcontainer/environment/conda/versioning.yaml",
            "pip": {
               "versioning": {
                  "name": "versioning",
                  "spec": {
                     "full": "versioningit >=3.1.2,<4",
                     "name": "versioningit",
                     "version": ">=3.1.2,<4"
                  }
               }
            }
         },
         "website": {
            "conda": {
               "ablog": {
                  "data": {
                     "sphinx_config": {
                        "blog_authors": {
                           "aariam": [
                              "Armin Ariamajd",
                              "https://github.com/AAriam"
                           ],
                           "owner": [
                              "RepoDynamics",
                              "https://repodynamics.com"
                           ]
                        },
                        "blog_baseurl": "https://pypackit.repodynamics.com",
                        "blog_default_author": "owner",
                        "blog_feed_archives": true,
                        "blog_path": "news/list",
                        "blog_post_pattern": [
                           "news/post/*.md"
                        ],
                        "blog_title": "PyPackIT News",
                        "extensions": [
                           "ablog",
                           "sphinx.ext.intersphinx"
                        ],
                        "fontawesome_included": true,
                        "post_always_section": true,
                        "post_auto_image": 1,
                        "post_show_prev_next": false
                     }
                  },
                  "description": "Adding a news blog to the website.",
                  "name": "ablog",
                  "spec": {
                     "channel": "conda-forge",
                     "full": "conda-forge::ablog ==0.11.12",
                     "name": "ablog",
                     "version": "==0.11.12"
                  },
                  "url": {
                     "docs": "https://ablog.readthedocs.io/",
                     "package": "https://anaconda.org/conda-forge/ablog",
                     "source": "https://github.com/sunpy/ablog"
                  }
               },
               "cairo": {
                  "description": "Library for rendering 2D graphics.\nThis is a dependency of `CairoSVG`, which is used by `sphinxcontrib-svg2pdfconverter`.\n",
                  "name": "cairo",
                  "spec": {
                     "channel": "conda-forge",
                     "full": "conda-forge::cairo ==1.18.2",
                     "name": "cairo",
                     "version": "==1.18.2"
                  },
                  "url": {
                     "docs": "https://cairographics.org/",
                     "package": "https://anaconda.org/conda-forge/cairo",
                     "source": "https://gitlab.freedesktop.org/cairo/cairo"
                  }
               },
               "intersphinx-registry": {
                  "description": "Registry of intersphinx mappings for external documentation.\n",
                  "name": "intersphinx-registry",
                  "spec": {
                     "channel": "conda-forge",
                     "full": "conda-forge::intersphinx-registry",
                     "name": "intersphinx-registry",
                     "version": ""
                  },
                  "url": {
                     "package": "https://anaconda.org/conda-forge/intersphinx-registry",
                     "source": "https://github.com/Quansight-labs/intersphinx_registry"
                  }
               },
               "libffi": {
                  "description": "Library for handling Foreign Function Interface (FFI) calls.\nThis is a dependency of `CairoSVG`, which is used by `sphinxcontrib-svg2pdfconverter`.\n",
                  "name": "libffi",
                  "spec": {
                     "channel": "conda-forge",
                     "full": "conda-forge::libffi ==3.4.6",
                     "name": "libffi",
                     "version": "==3.4.6"
                  },
                  "url": {
                     "docs": "https://sourceware.org/libffi/",
                     "package": "https://anaconda.org/conda-forge/libffi",
                     "source": "https://github.com/libffi/libffi"
                  }
               },
               "librsvg": {
                  "description": "Library for rendering SVG files and using them\nin PDF (via LaTeX) builds done by latexmk.\n",
                  "name": "librsvg",
                  "spec": {
                     "channel": "conda-forge",
                     "full": "conda-forge::librsvg ==2.58.4",
                     "name": "librsvg",
                     "version": "==2.58.4"
                  },
                  "url": {
                     "docs": "https://wiki.gnome.org/Projects/LibRsvg",
                     "package": "https://anaconda.org/conda-forge/librsvg",
                     "source": "https://gitlab.gnome.org/GNOME/librsvg"
                  }
               },
               "linkify-it-py": {
                  "description": "Linkify extension for MyST Markdown to automatically convert URLs to hyperlinks.\n",
                  "name": "linkify-it-py",
                  "spec": {
                     "channel": "conda-forge",
                     "full": "conda-forge::linkify-it-py ==2.0.3",
                     "name": "linkify-it-py",
                     "version": "==2.0.3"
                  },
                  "url": {
                     "docs": "https://myst-parser.readthedocs.io/en/latest/syntax/optional.html#linkify",
                     "package": "https://anaconda.org/conda-forge/linkify-it-py"
                  }
               },
               "myst-nb": {
                  "data": {
                     "sphinx_config": {
                        "extensions": [
                           "myst_nb"
                        ],
                        "myst_enable_extensions": [
                           "amsmath",
                           "attrs_inline",
                           "attrs_block",
                           "colon_fence",
                           "deflist",
                           "dollarmath",
                           "fieldlist",
                           "html_admonition",
                           "html_image",
                           "linkify",
                           "replacements",
                           "smartquotes",
                           "substitution",
                           "tasklist"
                        ],
                        "myst_fence_as_directive": [
                           "mermaid"
                        ],
                        "myst_heading_anchors": 6,
                        "myst_linkify_fuzzy_links": false,
                        "myst_links_external_new_tab": true
                     }
                  },
                  "description": "Adding MyST Markdown and Jupyter support to Sphinx.",
                  "name": "myst-nb",
                  "notes": "MyST-NB is built on top of [MyST-Parser](https://myst-parser.readthedocs.io/)\nand exposes all of its functionalities. It also includes support for Jupyter Notebooks.\nWhen using MyST-NB, MyST-Parser must not be included separately.\n",
                  "spec": {
                     "channel": "conda-forge",
                     "full": "conda-forge::myst-nb ==1.2.0",
                     "name": "myst-nb",
                     "version": "==1.2.0"
                  },
                  "url": {
                     "docs": "https://myst-parser.readthedocs.io/",
                     "package": "https://anaconda.org/conda-forge/myst-nb",
                     "source": "https://github.com/executablebooks/MyST-Parser"
                  }
               },
               "myst-parser": {
                  "description": "Adding MyST Markdown functionalities to Sphinx.",
                  "name": "myst-parser",
                  "notes": "This is added as a dependency and not an extension\nbecause the MyST-NB extension (a superset of MyST-Parser) is used as an extension,\nwhich already includes MyST-Parser.\nHowever, here we specifically include MyST-Parser to ensure the correct version is installed.\n",
                  "spec": {
                     "channel": "conda-forge",
                     "full": "conda-forge::myst-parser ==4.0.1",
                     "name": "myst-parser",
                     "version": "==4.0.1"
                  },
                  "url": {
                     "docs": "https://myst-parser.readthedocs.io/",
                     "package": "https://anaconda.org/conda-forge/myst-parser",
                     "source": "https://github.com/executablebooks/MyST-Parser"
                  }
               },
               "pydata-sphinx-theme": {
                  "data": {
                     "sphinx_config": {
                        "html_context": {
                           "default_mode": "auto",
                           "doc_path": "docs/website/source",
                           "github_repo": "PyPackIT",
                           "github_user": "RepoDynamics",
                           "github_version": "main"
                        },
                        "html_theme": "pydata_sphinx_theme",
                        "html_theme_options": {
                           "analytics": {
                              "google_analytics_id": "G-0X66W6TGL2"
                           },
                           "announcement": "https://raw.githubusercontent.com/RepoDynamics/PyPackIT/main/docs/website/announcement.html",
                           "article_footer_items": [],
                           "article_header_end": [],
                           "article_header_start": [
                              "breadcrumbs"
                           ],
                           "back_to_top_button": true,
                           "content_footer_items": [
                              "user_login_dialog"
                           ],
                           "footer_center": [],
                           "footer_end": [
                              "quicklinks"
                           ],
                           "footer_start": [
                              "footer_badges"
                           ],
                           "header_links_before_dropdown": 7,
                           "icon_links": [
                              {
                                 "icon": "fa-brands fa-github",
                                 "name": "Source Repository",
                                 "url": "https://github.com/RepoDynamics/PyPackIT"
                              },
                              {
                                 "icon": "fa-regular fa-circle-dot",
                                 "name": "Issues",
                                 "url": "https://github.com/RepoDynamics/PyPackIT/issues"
                              },
                              {
                                 "icon": "fa-solid fa-code-pull-request",
                                 "name": "Pull Requests",
                                 "url": "https://github.com/RepoDynamics/PyPackIT/pulls"
                              },
                              {
                                 "icon": "fa-solid fa-comments",
                                 "name": "Discussions",
                                 "url": "https://github.com/RepoDynamics/PyPackIT/discussions"
                              },
                              {
                                 "icon": "fa-solid fa-copyright",
                                 "name": "License",
                                 "url": "https://pypackit.repodynamics.com/about/license"
                              }
                           ],
                           "icon_links_label": "External links",
                           "logo": {
                              "alt_text": "PyPackIT",
                              "image_dark": "_static/simple_dark.svg",
                              "image_light": "_static/simple_light.svg"
                           },
                           "navbar_align": "left",
                           "navbar_center": [
                              "navbar-nav"
                           ],
                           "navbar_end": [
                              "navbar-icon-links"
                           ],
                           "navbar_persistent": [
                              "search-button",
                              "theme-switcher",
                              "user_login_button"
                           ],
                           "navbar_start": [
                              "navbar-logo"
                           ],
                           "navigation_depth": 5,
                           "primary_sidebar_end": [],
                           "pygments_dark_style": "monokai",
                           "pygments_light_style": "default",
                           "search_bar_text": "Search PyPackIT",
                           "secondary_sidebar_items": [
                              "page-toc",
                              "last-updated",
                              "edit-this-page"
                           ],
                           "show_nav_level": 1,
                           "show_prev_next": true,
                           "show_toc_level": 5,
                           "sidebar_includehidden": true,
                           "sidebarwidth": 270,
                           "use_edit_page_button": true
                        }
                     }
                  },
                  "name": "pydata-sphinx-theme",
                  "spec": {
                     "channel": "conda-forge",
                     "full": "conda-forge::pydata-sphinx-theme ==0.16.1",
                     "name": "pydata-sphinx-theme",
                     "version": "==0.16.1"
                  },
                  "url": {
                     "docs": "https://pydata-sphinx-theme.readthedocs.io/",
                     "package": "https://anaconda.org/conda-forge/pydata-sphinx-theme",
                     "source": "https://github.com/pydata/pydata-sphinx-theme"
                  }
               },
               "sphinx": {
                  "data": {
                     "sphinx_config": {
                        "author": "RepoDynamics",
                        "exclude_patterns": [
                           "Thumbs.db",
                           ".DS_Store",
                           ".ipynb_checkpoints",
                           "README.md"
                        ],
                        "extensions": [
                           "sphinx.ext.duration",
                           "sphinx.ext.graphviz",
                           "sphinx.ext.inheritance_diagram",
                           "sphinx.ext.intersphinx",
                           "sphinx.ext.linkcode"
                        ],
                        "html_baseurl": "https://pypackit.repodynamics.com",
                        "html_context": {
                           "pp_title_sep": ".\u2002"
                        },
                        "html_css_files": [
                           "https://cdn.jsdelivr.net/npm/choices.js/public/assets/styles/choices.min.css"
                        ],
                        "html_extra_path": [],
                        "html_favicon": "_media/logo/favicon.svg",
                        "html_js_files": [
                           "https://cdn.jsdelivr.net/npm/choices.js/public/assets/scripts/choices.min.js"
                        ],
                        "html_last_updated_fmt": "%b %d, %Y",
                        "html_math_renderer": "mathjax",
                        "html_secnumber_suffix": ".\u2002",
                        "html_short_title": "PyPackIT",
                        "html_show_sphinx": false,
                        "html_sidebars": {
                           "news/**": [
                              "ablog/postcard.html",
                              "ablog/recentposts.html",
                              "ablog/tagcloud.html",
                              "ablog/categories.html",
                              "ablog/archives.html",
                              "ablog/authors.html"
                           ]
                        },
                        "html_static_path": [
                           "_static",
                           "_media/logo/simple_light.svg",
                           "_media/logo/simple_dark.svg"
                        ],
                        "html_title": "PyPackIT",
                        "html_use_opensearch": "https://pypackit.repodynamics.com",
                        "intersphinx_mapping": {
                           "matplotlib": null,
                           "numpy": null,
                           "python": [
                              "https://docs.python.org/3/",
                              null
                           ],
                           "scipy": null
                        },
                        "language": "en",
                        "latex_elements": {
                           "figure_align": "htbp",
                           "fncychap": "\\usepackage[Bjornstrup]{fncychap}",
                           "fontpkg": "\\setmainfont{DejaVu Serif}\n\\setsansfont{DejaVu Sans}\n\\setmonofont{DejaVu Sans Mono}\n",
                           "papersize": "a4paper",
                           "pointsize": "11pt",
                           "preamble": "\\usepackage[titles]{tocloft}\n\\usepackage{fontspec}\n\\cftsetpnumwidth {1.25cm}\\cftsetrmarg{1.5cm}\n\\setlength{\\cftchapnumwidth}{0.75cm}\n\\setlength{\\cftsecindent}{\\cftchapnumwidth}\n\\setlength{\\cftsecnumwidth}{1.25cm}\n",
                           "printindex": "\\footnotesize\\raggedright\\printindex"
                        },
                        "latex_engine": "lualatex",
                        "latex_logo": "_media/logo/full_light.png",
                        "latex_show_pagerefs": true,
                        "latex_show_urls": "footnote",
                        "latex_theme": "manual",
                        "math_eqref_format": "Eq. {number}",
                        "math_number_all": true,
                        "math_numfig": true,
                        "math_numsep": ".",
                        "maximum_signature_line_length": 80,
                        "needs_sphinx": "8.1",
                        "nitpicky": true,
                        "numfig": true,
                        "numfig_format": {
                           "code-block": "Code %s",
                           "figure": "Figure %s",
                           "section": "Section",
                           "table": "Table %s"
                        },
                        "numfig_secnum_depth": 3,
                        "project": "PyPackIT",
                        "project_copyright": "\u00a9 2023\u20132025 RepoDynamics",
                        "pygment_style": "default",
                        "python_display_short_literal_types": true,
                        "python_maximum_signature_line_length": 80,
                        "root_doc": "index",
                        "show_authors": true,
                        "show_warning_types": true,
                        "templates_path": [
                           "_templates"
                        ],
                        "today_fmt": "%b %d, %Y",
                        "trim_footnote_reference_space": true
                     }
                  },
                  "name": "sphinx",
                  "spec": {
                     "channel": "conda-forge",
                     "full": "conda-forge::sphinx ==8.1.3",
                     "name": "sphinx",
                     "version": "==8.1.3"
                  },
                  "url": {
                     "docs": "https://www.sphinx-doc.org/",
                     "package": "https://anaconda.org/conda-forge/sphinx",
                     "source": "https://github.com/sphinx-doc/sphinx"
                  }
               },
               "sphinx-copybutton": {
                  "data": {
                     "sphinx_config": {
                        "extensions": [
                           "sphinx_copybutton"
                        ]
                     }
                  },
                  "description": "Adding a copy button to code blocks.",
                  "name": "sphinx-copybutton",
                  "spec": {
                     "channel": "conda-forge",
                     "full": "conda-forge::sphinx-copybutton ==0.5.2",
                     "name": "sphinx-copybutton",
                     "version": "==0.5.2"
                  },
                  "url": {
                     "docs": "https://sphinx-copybutton.readthedocs.io/",
                     "package": "https://anaconda.org/conda-forge/sphinx-copybutton",
                     "source": "https://github.com/executablebooks/sphinx-copybutton"
                  }
               },
               "sphinx-design": {
                  "data": {
                     "sphinx_config": {
                        "extensions": [
                           "sphinx_design"
                        ],
                        "sd_fontawesome_latex": true
                     }
                  },
                  "description": "Adding responsive web components, such as grids, cards, tabs, etc.",
                  "name": "sphinx-design",
                  "spec": {
                     "channel": "conda-forge",
                     "full": "conda-forge::sphinx-design ==0.6.1",
                     "name": "sphinx-design",
                     "version": "==0.6.1"
                  },
                  "url": {
                     "docs": "https://sphinx-design.readthedocs.io/",
                     "package": "https://anaconda.org/conda-forge/sphinx-design",
                     "source": "https://github.com/executablebooks/sphinx-design"
                  }
               },
               "sphinx-external-toc": {
                  "data": {
                     "sphinx_config": {
                        "extensions": [
                           "sphinx_external_toc"
                        ],
                        "external_toc_exclude_missing": false,
                        "external_toc_path": ".toc.yaml",
                        "suppress_warnings": [
                           "etoc.toctree"
                        ]
                     }
                  },
                  "description": "Adding external table of contents to Sphinx.",
                  "name": "sphinx-external-toc",
                  "spec": {
                     "channel": "conda-forge",
                     "full": "conda-forge::sphinx-external-toc ==1.0.1",
                     "name": "sphinx-external-toc",
                     "version": "==1.0.1"
                  },
                  "url": {
                     "docs": "https://sphinx-external-toc.readthedocs.io",
                     "package": "https://anaconda.org/conda-forge/sphinx-external-toc",
                     "source": "https://github.com/executablebooks/sphinx-external-toc"
                  }
               },
               "sphinx-thebe": {
                  "data": {
                     "sphinx_config": {
                        "extensions": [
                           "sphinx_thebe"
                        ]
                     }
                  },
                  "description": "Make code cells interactive in Sphinx.",
                  "name": "sphinx-thebe",
                  "spec": {
                     "channel": "conda-forge",
                     "full": "conda-forge::sphinx-thebe ==0.3.1",
                     "name": "sphinx-thebe",
                     "version": "==0.3.1"
                  },
                  "url": {
                     "docs": "https://sphinx-thebe.readthedocs.io",
                     "package": "https://anaconda.org/conda-forge/sphinx-thebe",
                     "source": "https://github.com/executablebooks/sphinx-thebe"
                  }
               },
               "sphinx-togglebutton": {
                  "data": {
                     "sphinx_config": {
                        "extensions": [
                           "sphinx_togglebutton"
                        ],
                        "togglebutton_hint": "show details",
                        "togglebutton_hint_hide": "hide details"
                     }
                  },
                  "description": "Adding toggle buttons to admonitions and other content.",
                  "name": "sphinx-togglebutton",
                  "spec": {
                     "channel": "conda-forge",
                     "full": "conda-forge::sphinx-togglebutton ==0.3.2",
                     "name": "sphinx-togglebutton",
                     "version": "==0.3.2"
                  },
                  "url": {
                     "docs": "https://sphinx-togglebutton.readthedocs.io/",
                     "package": "https://anaconda.org/conda-forge/sphinx-togglebutton",
                     "source": "https://github.com/executablebooks/sphinx-togglebutton"
                  }
               },
               "sphinxcontrib-bibtex": {
                  "data": {
                     "sphinx_config": {
                        "bibtex_bibfiles": [
                           "refs.bib"
                        ],
                        "bibtex_default_style": "plain",
                        "bibtex_reference_style": "label",
                        "extensions": [
                           "sphinxcontrib.bibtex"
                        ]
                     }
                  },
                  "description": "Adding BibTeX-style citations.",
                  "name": "sphinxcontrib-bibtex",
                  "spec": {
                     "channel": "conda-forge",
                     "full": "conda-forge::sphinxcontrib-bibtex ==2.6.3",
                     "name": "sphinxcontrib-bibtex",
                     "version": "==2.6.3"
                  },
                  "url": {
                     "docs": "https://sphinxcontrib-bibtex.readthedocs.io/",
                     "package": "https://anaconda.org/conda-forge/sphinxcontrib-bibtex",
                     "source": "https://github.com/mcmtroffaes/sphinxcontrib-bibtex"
                  }
               },
               "sphinxcontrib-mermaid": {
                  "data": {
                     "sphinx_config": {
                        "extensions": [
                           "sphinxcontrib.mermaid"
                        ]
                     }
                  },
                  "description": "Adding Mermaid diagrams and charts.",
                  "name": "sphinxcontrib-mermaid",
                  "spec": {
                     "channel": "conda-forge",
                     "full": "conda-forge::sphinxcontrib-mermaid ==1.0.0",
                     "name": "sphinxcontrib-mermaid",
                     "version": "==1.0.0"
                  },
                  "url": {
                     "docs": "https://sphinxcontrib-mermaid-demo.readthedocs.io/en/stable/",
                     "package": "https://anaconda.org/conda-forge/sphinxcontrib-mermaid",
                     "source": "https://github.com/mgaitan/sphinxcontrib-mermaid"
                  }
               },
               "sphinxext-opengraph": {
                  "data": {
                     "sphinx_config": {
                        "extensions": [
                           "sphinxext.opengraph"
                        ],
                        "ogp_enable_meta_description": true,
                        "ogp_site_url": "https://pypackit.repodynamics.com",
                        "ogp_social_cards": {
                           "image": "_static/simple_light.svg",
                           "line_color": "rgb(0 85 0)"
                        },
                        "ogp_use_first_image": true
                     }
                  },
                  "description": "Generating [Open Graph](https://ogp.me/) metadata for each page.\n",
                  "name": "sphinxext-opengraph",
                  "spec": {
                     "channel": "conda-forge",
                     "full": "conda-forge::sphinxext-opengraph ==0.9.1",
                     "name": "sphinxext-opengraph",
                     "version": "==0.9.1"
                  },
                  "url": {
                     "docs": "https://sphinxext-opengraph.readthedocs.io/",
                     "package": "https://anaconda.org/conda-forge/sphinxext-opengraph",
                     "source": "https://github.com/wpilibsuite/sphinxext-opengraph/"
                  }
               }
            },
            "name": "website",
            "path": ".devcontainer/environment/conda/website.yaml",
            "pip": {
               "jsonschema-autodoc": {
                  "data": {
                     "sphinx_config": {
                        "extensions": [
                           "jsonschema_autodoc.sphinx"
                        ]
                     }
                  },
                  "name": "jsonschema-autodoc",
                  "spec": {
                     "full": "jsonschema-autodoc",
                     "name": "jsonschema-autodoc",
                     "version": ""
                  },
                  "url": {
                     "package": "https://pypi.org/project/jsonschema-autodoc/"
                  }
               },
               "pygments-git": {
                  "description": "Pygments lexer for Git files and outputs.\n",
                  "name": "pygments-git",
                  "spec": {
                     "full": "pygments-git ==1.8.0",
                     "name": "pygments-git",
                     "version": "==1.8.0"
                  },
                  "url": {
                     "package": "https://pypi.org/project/pygments-git/",
                     "source": "https://github.com/adamchainz/pygments-git"
                  }
               },
               "sphinx-autobuild": {
                  "description": "Automatically rebuilding the documentation when changes are made.",
                  "name": "sphinx-autobuild",
                  "spec": {
                     "full": "sphinx-autobuild ==2024.10.03",
                     "name": "sphinx-autobuild",
                     "version": "==2024.10.03"
                  },
                  "url": {
                     "package": "https://pypi.org/project/sphinx-autobuild/",
                     "source": "https://github.com/sphinx-doc/sphinx-autobuild"
                  }
               },
               "sphinx-last-updated-by-git": {
                  "data": {
                     "sphinx_config": {
                        "extensions": [
                           "sphinx_last_updated_by_git"
                        ]
                     }
                  },
                  "description": "Adding page-specific last-updated dates to each page.",
                  "name": "sphinx-last-updated-by-git",
                  "spec": {
                     "full": "sphinx-last-updated-by-git ==0.3.8",
                     "name": "sphinx-last-updated-by-git",
                     "version": "==0.3.8"
                  },
                  "url": {
                     "docs": "https://sphinx-last-updated-by-git.readthedocs.io/",
                     "package": "https://pypi.org/project/sphinx-last-updated-by-git/",
                     "source": "https://github.com/mgeier/sphinx-last-updated-by-git"
                  }
               },
               "sphinx-notfound-page": {
                  "data": {
                     "sphinx_config": {
                        "extensions": [
                           "notfound.extension"
                        ],
                        "notfound_urls_prefix": "/PyPackIT/"
                     }
                  },
                  "description": "Handling relative links in the custom 404 page.",
                  "name": "sphinx-notfound-page",
                  "spec": {
                     "full": "sphinx-notfound-page ==1.1.0",
                     "name": "sphinx-notfound-page",
                     "version": "==1.1.0"
                  },
                  "url": {
                     "docs": "https://sphinx-notfound-page.readthedocs.io/",
                     "package": "https://pypi.org/project/sphinx-notfound-page/",
                     "source": "https://github.com/readthedocs/sphinx-notfound-page"
                  }
               },
               "sphinx-tippy": {
                  "data": {
                     "sphinx_config": {
                        "extensions": [
                           "sphinx_tippy"
                        ],
                        "tippy_props": {
                           "delay": [
                              200,
                              500
                           ],
                           "duration": [
                              200,
                              100
                           ],
                           "interactive": true,
                           "maxWidth": 500,
                           "placement": "auto-start",
                           "theme": "material"
                        }
                     }
                  },
                  "description": "Adding rich hover tooltips to content.",
                  "name": "sphinx-tippy",
                  "spec": {
                     "full": "sphinx-tippy ==0.4.3",
                     "name": "sphinx-tippy",
                     "version": "==0.4.3"
                  },
                  "url": {
                     "docs": "https://sphinx-tippy.readthedocs.io",
                     "package": "https://pypi.org/project/sphinx_tippy/",
                     "source": "https://github.com/sphinx-extensions2/sphinx-tippy"
                  }
               },
               "sphinxcontrib-svg2pdfconverter": {
                  "data": {
                     "sphinx_config": {
                        "extensions": [
                           "sphinxcontrib.rsvgconverter"
                        ]
                     }
                  },
                  "description": "Converting SVG images to PNG for LaTeX.",
                  "name": "sphinxcontrib-svg2pdfconverter",
                  "notes": "This doesn't work on `latex_logo`;\nsee [nbsphinx](https://nbsphinx.readthedocs.io/en/latest/markdown-cells.html).\n",
                  "spec": {
                     "extras": [
                        "CairoSVG"
                     ],
                     "full": "sphinxcontrib-svg2pdfconverter [CairoSVG] ==1.2.3",
                     "name": "sphinxcontrib-svg2pdfconverter",
                     "version": "==1.2.3"
                  },
                  "url": {
                     "package": "https://pypi.org/project/sphinxcontrib-svg2pdfconverter/",
                     "source": "https://github.com/missinglinkelectronics/sphinxcontrib-svg2pdfconverter"
                  }
               }
            },
            "variable": {
               "sphinx_build_options": {
                  "key": "SPHINX_BUILD_OPTIONS",
                  "value": "--verbose --show-traceback --keep-going --color --nitpicky --jobs auto"
               },
               "sphinx_builder": {
                  "key": "SPHINX_BUILDER",
                  "value": "dirhtml"
               },
               "website_tar_filepath": {
                  "key": "WEBSITE_TAR_FILEPATH",
                  "value": "docs/website/.build/website.tar"
               }
            }
         }
      },
      "path": {
         "apt": {
            "essential": {
               "packages": ".devcontainer/environment/syspkg/essential/apt_pkgs.txt",
               "post_install": ".devcontainer/environment/syspkg/essential/apt_post_install.sh",
               "repos": ".devcontainer/environment/syspkg/essential/apt_repos.txt",
               "root": ".devcontainer/environment/syspkg/essential"
            },
            "optional": {
               "packages": ".devcontainer/environment/syspkg/optional/apt_pkgs.txt",
               "post_install": ".devcontainer/environment/syspkg/optional/apt_post_install.sh",
               "repos": ".devcontainer/environment/syspkg/optional/apt_repos.txt",
               "root": ".devcontainer/environment/syspkg/optional"
            },
            "recommended": {
               "packages": ".devcontainer/environment/syspkg/recommended/apt_pkgs.txt",
               "post_install": ".devcontainer/environment/syspkg/recommended/apt_post_install.sh",
               "repos": ".devcontainer/environment/syspkg/recommended/apt_repos.txt",
               "root": ".devcontainer/environment/syspkg/recommended"
            },
            "required": {
               "packages": ".devcontainer/environment/syspkg/required/apt_pkgs.txt",
               "post_install": ".devcontainer/environment/syspkg/required/apt_post_install.sh",
               "repos": ".devcontainer/environment/syspkg/required/apt_repos.txt",
               "root": ".devcontainer/environment/syspkg/required"
            },
            "root": ".devcontainer/environment/syspkg"
         },
         "conda": ".devcontainer/environment/conda",
         "dockerfile": ".devcontainer/Dockerfile",
         "environment": ".devcontainer/environment",
         "root": ".devcontainer",
         "volume": ".devcontainer/volume"
      },
      "service": {
         "build": {
            "context": "../",
            "dockerfile": ".devcontainer/Dockerfile"
         },
         "privileged": true
      },
      "var": {
         "apt_env_dir": "/usr/local/share/pypackit-container/apt-env",
         "conda": {
            "activate": "app",
            "app_env": "app",
            "conda_script": "/opt/conda/etc/profile.d/conda.sh",
            "dir": "/opt/conda",
            "mamba_script": "/opt/conda/etc/profile.d/mamba.sh",
            "name": "Miniforge3",
            "version": "24.11.3-2"
         },
         "git": {
            "prefix": "/usr/local/git",
            "version": "2.49.0"
         },
         "log_dir": "/var/log/pypackit-container",
         "script_dir": "/usr/local/share/pypackit-container/script",
         "share_dir": "/usr/local/share/pypackit-container",
         "user": {
            "gid": 1000,
            "group": "pypackit-dev",
            "home": "/home/pypackit-dev",
            "name": "pypackit-dev",
            "shell": "/bin/zsh",
            "uid": 1000
         },
         "zsh": {
            "global_config_dir": "etc/zsh",
            "oh_my_zsh_install_dir": "/home/pypackit-dev/.oh-my-zsh"
         }
      },
      "volume": {
         "bash_env": {
            "abspath": "/etc/bash/bash_env",
            "content": {
               "body": [
                  {
                     "content": "# Set $USER to current user if not already set.\nif [ -z \"$USER\" ]; then export USER=$(whoami); fi\n# Extract the 6th field, which is the home directory.\nif [ -z \"$HOME\" ]; then export HOME=$(getent passwd \"$USER\" | cut -d: -f6); fi\n",
                     "references": [
                        {
                           "title": "common-utils Devcontainer Feature",
                           "url": "https://github.com/devcontainers/features/blob/8895eb3d161d28ada3a8de761a83135e811cae3d/src/common-utils/scripts/rc_snippet.sh#L1"
                        }
                     ],
                     "summary": "Set USER and HOME if not set."
                  },
                  {
                     "content": "extend_path --prepend \\\n  \"$HOME/.local/bin\" \\\n  \"$HOME/bin\" \\\n  \"/usr/local/bin\" \\\n  \"/usr/bin\" \\\n  \"/bin\" \\\n  \"/usr/games\"\n",
                     "description": "Ensure that common binary directories are in PATH.\n",
                     "references": [
                        {
                           "title": "common-utils Devcontainer Feature",
                           "url": "https://github.com/devcontainers/features/blob/8895eb3d161d28ada3a8de761a83135e811cae3d/src/common-utils/scripts/rc_snippet.sh#L2"
                        }
                     ],
                     "summary": "Extend PATH."
                  },
                  {
                     "content": "export XDG_CACHE_HOME=\"${HOME}/.cache\"\nexport XDG_CONFIG_HOME=\"${HOME}/.config\"\nexport XDG_DATA_HOME=\"${HOME}/.local/share\"\nexport XDG_STATE_HOME=\"${HOME}/.local/state\"\n",
                     "summary": "Set XDG base directories."
                  },
                  {
                     "content": ". \"/etc/project_tasks\"\n",
                     "summary": "Source project tasks."
                  }
               ],
               "flags": "",
               "import": [
                  "extend_path"
               ],
               "interpreter": ""
            },
            "content_setting": {
               "prefix": "",
               "separator": "\n",
               "suffix": ""
            },
            "file_setting": {
               "eof_newline": true,
               "json": {
                  "end_of_file_newline": true,
                  "indent": 3,
                  "sort_keys": true
               },
               "md": {
                  "heading_number": false,
                  "target": "github"
               },
               "sort_keys": true,
               "yaml": {
                  "block_string": true,
                  "end_of_file_newline": true,
                  "mapping_indent": 2,
                  "remove_top_level_indent": true,
                  "sequence_indent": 4,
                  "sequence_indent_offset": 2,
                  "sort_keys": true
               }
            },
            "name": "BASH_ENV File",
            "path": ".devcontainer/volume/etc/bash/bash_env",
            "relpath": "etc/bash/bash_env",
            "status": "active",
            "summary": "Common script sourced by all shell sessions.",
            "type": "shell_src",
            "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/volume/etc/bash/bash_env"
         },
         "bash_theme": {
            "abspath": "/etc/bash/bash_theme",
            "content": {
               "body": [
                  {
                     "content": "__bash_prompt\n",
                     "summary": "Set prompt"
                  },
                  {
                     "content": "export PROMPT_DIRTRIM=4"
                  },
                  {
                     "content": "if [[ \"$TERM\" == \"xterm\" ]]; then\n    # Function to set the terminal title to the current command\n    preexec() {\n        local cmd=\"${BASH_COMMAND}\"\n        echo -ne \"\\033]0;${USER}@${HOSTNAME}: ${cmd}\\007\"\n    }\n\n    # Function to reset the terminal title to the shell type after the command is executed\n    precmd() {\n        echo -ne \"\\033]0;${USER}@${HOSTNAME}: ${SHELL}\\007\"\n    }\n\n    # Trap DEBUG signal to call preexec before each command\n    trap 'preexec' DEBUG\n\n    # Append to PROMPT_COMMAND to call precmd before displaying the prompt\n    PROMPT_COMMAND=\"${PROMPT_COMMAND:+$PROMPT_COMMAND; }precmd\"\nfi\n",
                     "summary": "Set xterm specific settings."
                  }
               ],
               "flags": "",
               "function": {
                  "__bash_prompt": {
                     "body": "local userpart='`export XIT=$? \\\n    && [ ! -z \"${GITHUB_USER:-}\" ] && echo -n \"\\[\\033[0;32m\\]@${GITHUB_USER:-} \" || echo -n \"\\[\\033[0;32m\\]\\u \" \\\n    && [ \"$XIT\" -ne \"0\" ] && echo -n \"\\[\\033[1;31m\\]\u279c\" || echo -n \"\\[\\033[0m\\]\u279c\"`'\nlocal gitbranch='`\\\n    if [ \"$(git config --get devcontainers-theme.hide-status 2>/dev/null)\" != 1 ] && [ \"$(git config --get codespaces-theme.hide-status 2>/dev/null)\" != 1 ]; then \\\n        export BRANCH=\"$(git --no-optional-locks symbolic-ref --short HEAD 2>/dev/null || git --no-optional-locks rev-parse --short HEAD 2>/dev/null)\"; \\\n        if [ \"${BRANCH:-}\" != \"\" ]; then \\\n            echo -n \"\\[\\033[0;36m\\](\\[\\033[1;31m\\]${BRANCH:-}\" \\\n            && if [ \"$(git config --get devcontainers-theme.show-dirty 2>/dev/null)\" = 1 ] && \\\n                git --no-optional-locks ls-files --error-unmatch -m --directory --no-empty-directory -o --exclude-standard \":/*\" > /dev/null 2>&1; then \\\n                    echo -n \" \\[\\033[1;33m\\]\u2717\"; \\\n            fi \\\n            && echo -n \"\\[\\033[0;36m\\]) \"; \\\n        fi; \\\n    fi`'\nlocal lightblue='\\[\\033[1;34m\\]'\nlocal removecolor='\\[\\033[0m\\]'\nPS1=\"${userpart} ${lightblue}\\w ${gitbranch}${removecolor}\\$ \"\nunset -f __bash_prompt\n",
                     "description": "This function sets the bash prompt to include the username,\ncurrent working directory, and git branch (if applicable).\nIt also sets the terminal title to the current command.\n",
                     "name": "__bash_prompt",
                     "summary": "Bash prompt function."
                  }
               },
               "interpreter": ""
            },
            "content_setting": {
               "prefix": "",
               "separator": "\n",
               "suffix": ""
            },
            "file_setting": {
               "eof_newline": true,
               "json": {
                  "end_of_file_newline": true,
                  "indent": 3,
                  "sort_keys": true
               },
               "md": {
                  "heading_number": false,
                  "target": "github"
               },
               "sort_keys": true,
               "yaml": {
                  "block_string": true,
                  "end_of_file_newline": true,
                  "mapping_indent": 2,
                  "remove_top_level_indent": true,
                  "sequence_indent": 4,
                  "sequence_indent_offset": 2,
                  "sort_keys": true
               }
            },
            "name": "Bash Theme",
            "path": ".devcontainer/volume/etc/bash/bash_theme",
            "references": [
               {
                  "title": "common-utils Devcontainer Feature",
                  "url": "https://github.com/devcontainers/features/blob/8895eb3d161d28ada3a8de761a83135e811cae3d/src/common-utils/scripts/bash_theme_snippet.sh"
               }
            ],
            "relpath": "etc/bash/bash_theme",
            "status": "active",
            "summary": "Default bash theme for all users.",
            "type": "shell_src",
            "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/volume/etc/bash/bash_theme"
         },
         "bashrc": {
            "abspath": "/etc/bash.bashrc",
            "content": {
               "body": [
                  {
                     "content": "case $- in\n  *i*) ;;\n    *) return;;\nesac\n",
                     "summary": "Ensure interactivity."
                  },
                  {
                     "content": ". \"/etc/global_shellrc\"",
                     "summary": "Source global RC file."
                  },
                  {
                     "content": ". \"/etc/bash/bash_theme\"\n",
                     "summary": "Source theme."
                  },
                  {
                     "content": "# Commands to exclude from history\nHISTIGNORE=\"pwd:exit:clear\"\n# Exclude duplicates, and commands starting with a space; erase older duplicates\nHISTCONTROL=erasedups:ignoredups:ignorespace\n# Maximum number of commands to remember in the current session's history.\nHISTSIZE=1000\n# Maximum number of lines contained in the history file.\nHISTFILESIZE=5000\n# Format for timestamps in history output\nHISTTIMEFORMAT='%F %T '\n# Save history after each command and reload new entries from other sessions\nPROMPT_COMMAND=\"history -a; history -n\"\n",
                     "summary": "History settings."
                  },
                  {
                     "content": "# Append to history file instead of overwriting\nshopt -s histappend\n\n# Check the window size after each command\n# and update the values of LINES and COLUMNS if necessary.\nshopt -s checkwinsize\n\n# append to the history file, don't overwrite it\nshopt -s histappend\n\n# If set, the pattern \"**\" used in a pathname expansion context will\n# match all files and zero or more directories and subdirectories.\n#shopt -s globstar\n",
                     "summary": "Shell Options."
                  },
                  {
                     "content": "if ! shopt -oq posix; then\n    if [ -f /usr/share/bash-completion/bash_completion ]; then\n        . /usr/share/bash-completion/bash_completion\n    elif [ -f /etc/bash_completion ]; then\n        . /etc/bash_completion\n    fi\nfi\n",
                     "summary": "Enable completion."
                  },
                  {
                     "content": "if [ ! -e \"$HOME/.sudo_as_admin_successful\" ] && [ ! -e \"$HOME/.hushlogin\" ] && command -v sudo >/dev/null 2>&1; then\n    case \" $(groups) \" in\n        *\\ admin\\ *|*\\ sudo\\ *)\n            printf '%s\\n\\n' \\\n                'To run a command as administrator (user \"root\"), use \"sudo <command>\".' \\\n                'See \"man sudo_root\" for details.'\n            ;;\n    esac\nfi\n",
                     "summary": "Sudo hint."
                  },
                  {
                     "content": "if [ -x /usr/lib/command-not-found -o -x /usr/share/command-not-found/command-not-found ]; then\n  function command_not_found_handle {\n          # check because c-n-f could've been removed in the meantime\n                if [ -x /usr/lib/command-not-found ]; then\n      /usr/lib/command-not-found -- \"$1\"\n                  return $?\n                elif [ -x /usr/share/command-not-found/command-not-found ]; then\n      /usr/share/command-not-found/command-not-found -- \"$1\"\n                  return $?\n    else\n      printf \"%s: command not found\\n\" \"$1\" >&2\n      return 127\n    fi\n  }\nfi\n",
                     "summary": "Use command-not-found package if available."
                  },
                  {
                     "content": "[ -x /usr/bin/lesspipe ] && eval \"$(SHELL=/bin/sh lesspipe)\"\n",
                     "description": "Check if lesspipe exists and is executable, then initialize it\nto enable smarter previews in non-text input files (e.g. archives, PDFs, etc.).\n",
                     "summary": "Enable lesspipe if available."
                  },
                  {
                     "content": "export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'\n",
                     "summary": "Customize GCC diagnostic colors."
                  },
                  {
                     "content": "eval \"$(pixi completion -s bash)\"",
                     "summary": "Pixi activation."
                  },
                  {
                     "content": "# END OF PyPackIT SECTION\n# ==================================================\n",
                     "summary": "End marker."
                  }
               ],
               "flags": "",
               "interpreter": ""
            },
            "content_setting": {
               "prefix": "",
               "separator": "\n",
               "suffix": ""
            },
            "file_setting": {
               "eof_newline": true,
               "json": {
                  "end_of_file_newline": true,
                  "indent": 3,
                  "sort_keys": true
               },
               "md": {
                  "heading_number": false,
                  "target": "github"
               },
               "sort_keys": true,
               "yaml": {
                  "block_string": true,
                  "end_of_file_newline": true,
                  "mapping_indent": 2,
                  "remove_top_level_indent": true,
                  "sequence_indent": 4,
                  "sequence_indent_offset": 2,
                  "sort_keys": true
               }
            },
            "name": "Bash RC",
            "notes": "The path is OS-dependent.\n",
            "path": ".devcontainer/volume/etc/bash.bashrc",
            "relpath": "etc/bash.bashrc",
            "status": "active",
            "summary": "Bash `bashrc` startup file for all users.",
            "type": "shell_src",
            "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/volume/etc/bash.bashrc"
         },
         "devcontainer_info": {
            "abspath": "/usr/local/bin/devcontainer-info",
            "chmod": "+rx",
            "content": {
               "body": [
                  {
                     "content": "if [ -f \"/usr/local/etc/vscode-dev-containers/meta.env\" ]; then\n    . /usr/local/etc/vscode-dev-containers/meta.env\nfi\nif [ -f \"/usr/local/etc/dev-containers/meta.env\" ]; then\n    . /usr/local/etc/dev-containers/meta.env\nfi\n",
                     "summary": "Load metadata file if available."
                  },
                  {
                     "content": "if [ \"$1\" = \"version\" ] || [ \"$1\" = \"image-version\" ]; then\n    echo \"${VERSION}\"\n    exit 0\nelif [ \"$1\" = \"release\" ]; then\n    echo \"${GIT_REPOSITORY_RELEASE}\"\n    exit 0\nelif [ \"$1\" = \"content\" ] || [ \"$1\" = \"content-url\" ] || [ \"$1\" = \"contents\" ] || [ \"$1\" = \"contents-url\" ]; then\n    echo \"${CONTENTS_URL}\"\n    exit 0\nfi\n",
                     "summary": "Output specific data if requested."
                  },
                  {
                     "content": "echo \"Development container image information:\"\necho \"----------------------------------------\"\nif [ ! -z \"${VERSION}\" ]; then echo \"- Image version: ${VERSION}\"; fi\nif [ ! -z \"${DEFINITION_ID}\" ]; then echo \"- Definition ID: ${DEFINITION_ID}\"; fi\nif [ ! -z \"${VARIANT}\" ]; then echo \"- Variant: ${VARIANT}\"; fi\nif [ ! -z \"${GIT_REPOSITORY}\" ]; then echo \"- Source code repository: ${GIT_REPOSITORY}\"; fi\nif [ ! -z \"${GIT_REPOSITORY_RELEASE}\" ]; then echo \"- Source code release/branch: ${GIT_REPOSITORY_RELEASE}\"; fi\nif [ ! -z \"${GIT_REPOSITORY_REVISION}\" ]; then echo \"- Source code revision: ${GIT_REPOSITORY_REVISION}\"; fi\nif [ ! -z \"${BUILD_TIMESTAMP}\" ]; then echo \"- Timestamp: ${BUILD_TIMESTAMP}\"; fi\nif [ ! -z \"${CONTENTS_URL}\" ]; then echo && echo \"More info: ${CONTENTS_URL}\"; fi\n",
                     "summary": "Full output otherwise."
                  }
               ],
               "flags": "-eu",
               "interpreter": "bin/sh"
            },
            "content_setting": {
               "prefix": "",
               "separator": "\n",
               "suffix": ""
            },
            "description": "This script adds the `devcontainer-info` command\nto display image metadata if available.\n",
            "file_setting": {
               "eof_newline": true,
               "json": {
                  "end_of_file_newline": true,
                  "indent": 3,
                  "sort_keys": true
               },
               "md": {
                  "heading_number": false,
                  "target": "github"
               },
               "sort_keys": true,
               "yaml": {
                  "block_string": true,
                  "end_of_file_newline": true,
                  "mapping_indent": 2,
                  "remove_top_level_indent": true,
                  "sequence_indent": 4,
                  "sequence_indent_offset": 2,
                  "sort_keys": true
               }
            },
            "name": "Devcontainer Info",
            "path": ".devcontainer/volume/usr/local/bin/devcontainer-info",
            "references": [
               {
                  "title": "common-utils Devcontainer Feature file",
                  "url": "https://github.com/devcontainers/features/blob/main/src/common-utils/bin/devcontainer-info"
               },
               {
                  "title": "common-utils Devcontainer Feature install script",
                  "url": "https://github.com/devcontainers/features/blob/6654579de4c31cd9f9f9e19e873521f502403929/src/common-utils/main.sh#L599-L603"
               }
            ],
            "relpath": "usr/local/bin/devcontainer-info",
            "status": "active",
            "summary": "Show image metadata.",
            "type": "shell_src",
            "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/volume/usr/local/bin/devcontainer-info"
         },
         "globalrc": {
            "abspath": "/etc/global_shellrc",
            "content": {
               "body": [
                  {
                     "content": "case $- in\n  *i*) ;;\n    *) return;;\nesac\n",
                     "summary": "Ensure interactivity."
                  },
                  {
                     "content": ". \"/etc/bash/bash_env\"",
                     "summary": "Source BASH_ENV file."
                  },
                  {
                     "content": ". \"/opt/conda/etc/profile.d/conda.sh\"\n. \"/opt/conda/etc/profile.d/mamba.sh\"\n",
                     "summary": "Source conda and mamba activation scripts."
                  },
                  {
                     "content": "mamba activate app\n",
                     "summary": "Activate conda environment."
                  },
                  {
                     "content": "if [ -z \"$(git config --get core.editor)\" ] && [ -z \"${GIT_EDITOR}\" ]; then\n    if  [ \"${TERM_PROGRAM}\" = \"vscode\" ]; then\n        if [[ -n $(command -v code-insiders) &&  -z $(command -v code) ]]; then\n            export GIT_EDITOR=\"code-insiders --wait\"\n        else\n            export GIT_EDITOR=\"code --wait\"\n        fi\n    fi\nfi\n",
                     "references": [
                        {
                           "title": "common-utils Devcontainer Feature",
                           "url": "https://github.com/devcontainers/features/blob/8895eb3d161d28ada3a8de761a83135e811cae3d/src/common-utils/scripts/rc_snippet.sh#L16-L25"
                        }
                     ],
                     "summary": "Set default editor for Git."
                  },
                  {
                     "content": "if [ -x /usr/bin/dircolors ]; then\n    # Load user's custom color settings if available, otherwise use default\n    test -r ~/.dircolors && eval \"$(dircolors -b ~/.dircolors)\" || eval \"$(dircolors -b)\"\nfi\n",
                     "summary": "Load color settings."
                  },
                  {
                     "content": "# Common ls aliases\nalias ll='ls -alF'\nalias la='ls -A'\nalias l='ls -CF'\n\n# Add an \"alert\" alias for long running commands.\n# Use like so: `sleep 10; alert`\nif [ -n \"$BASH_VERSION\" ]; then\n    alias alert='notify-send --urgency=low -i \"$([ $? = 0 ] && echo terminal || echo error)\" \"$(history|tail -n1|sed -e '\\''s/^\\s*[0-9]\\+\\s*//;s/[;&|]\\s*alert$//'\\'')\"'\nfi\n\n# Enable color support for commands if dircolors is available.\nif [ -x /usr/bin/dircolors ]; then\n    alias ls='ls --color=auto'\n    alias dir='dir --color=auto'\n    alias vdir='vdir --color=auto'\n    alias grep='grep --color=auto'\n    alias fgrep='fgrep --color=auto'\n    alias egrep='egrep --color=auto'\nfi\n",
                     "summary": "Define aliases."
                  }
               ],
               "flags": "",
               "interpreter": ""
            },
            "content_setting": {
               "prefix": "",
               "separator": "\n",
               "suffix": ""
            },
            "description": "This script is sourced in both `bashrc` and `zshrc`.\n",
            "file_setting": {
               "eof_newline": true,
               "json": {
                  "end_of_file_newline": true,
                  "indent": 3,
                  "sort_keys": true
               },
               "md": {
                  "heading_number": false,
                  "target": "github"
               },
               "sort_keys": true,
               "yaml": {
                  "block_string": true,
                  "end_of_file_newline": true,
                  "mapping_indent": 2,
                  "remove_top_level_indent": true,
                  "sequence_indent": 4,
                  "sequence_indent_offset": 2,
                  "sort_keys": true
               }
            },
            "name": "Global Shell RC File",
            "path": ".devcontainer/volume/etc/global_shellrc",
            "relpath": "etc/global_shellrc",
            "status": "active",
            "summary": "Shell configurationss for all interactive shells.",
            "type": "shell_src",
            "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/volume/etc/global_shellrc"
         },
         "profile": {
            "abspath": "/etc/profile",
            "content": {
               "body": [
                  {
                     "content": ". \"/etc/bash/bash_env\"",
                     "summary": "Source BASH_ENV file."
                  },
                  {
                     "content": "if [ -d /etc/profile.d ]; then\n  for i in /etc/profile.d/*.sh; do\n    if [ -r $i ]; then\n      . $i\n    fi\n  done\n  unset i\nfi\n",
                     "description": "This must always be done in the `profile` file,\notherwise many applications will not work correctly.\n",
                     "summary": "Source `profile.d` files."
                  },
                  {
                     "content": "if [ \"${PS1-}\" ]; then\n    # The shell is interactive.\n    if [ \"${BASH-}\" ] && [ \"$BASH\" != \"/bin/sh\" ]; then\n        # The shell is bash.\n        . \"/etc/bash.bashrc\"\n    else\n        # The shell is not bash.\n        # Set the prompt to a simple $ or #.\n        if [ \"$(id -u)\" -eq 0 ]; then\n            PS1='# '\n        else\n            PS1='$ '\n        fi\n    fi\nfi\n",
                     "description": "Bash does not source `bashrc` by default in login shells.\nTo enable the settings/commands in the bashrc file for login shells as well,\nit has to be explicitly sourced here.\n",
                     "summary": "Load `bashrc` file if running in interactive bash."
                  }
               ],
               "flags": "",
               "interpreter": ""
            },
            "content_setting": {
               "prefix": "",
               "separator": "\n",
               "suffix": ""
            },
            "file_setting": {
               "eof_newline": true,
               "json": {
                  "end_of_file_newline": true,
                  "indent": 3,
                  "sort_keys": true
               },
               "md": {
                  "heading_number": false,
                  "target": "github"
               },
               "sort_keys": true,
               "yaml": {
                  "block_string": true,
                  "end_of_file_newline": true,
                  "mapping_indent": 2,
                  "remove_top_level_indent": true,
                  "sequence_indent": 4,
                  "sequence_indent_offset": 2,
                  "sort_keys": true
               }
            },
            "name": "Global Shell Profile",
            "path": ".devcontainer/volume/etc/profile",
            "relpath": "etc/profile",
            "status": "active",
            "summary": "System-wide profile for all Bourne-compatible shells.",
            "type": "shell_src",
            "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/volume/etc/profile"
         },
         "project_tasks": {
            "abspath": "/etc/project_tasks",
            "content": {
               "flags": "",
               "function": {
                  "build-paper": {
                     "body": "docker exec -it openjournals-inara inara -o pdf -p -v $1",
                     "description": "Build a paper using the Open-Journals Inara service.\nFor publishing to JOSE or ReScience C (instead of JOSS),\nset the `JOURNAL` environment variable to `jose` or `resciencec`, respectively.\n",
                     "name": "build-paper",
                     "references": [
                        {
                           "title": "Inara Docker image",
                           "url": "https://github.com/openjournals/inara/blob/main/Dockerfile"
                        },
                        {
                           "title": "Inara script",
                           "url": "https://github.com/openjournals/inara/blob/main/scripts/entrypoint.sh"
                        }
                     ],
                     "summary": "Build Open-Journals (JOSS) paper."
                  },
                  "build-web": {
                     "body": "run_in_conda_env website sphinx-build \\\n  -M \"dirhtml\" \\\n  docs/website/source \\\n  docs/website/.build \\\n  --verbose --show-traceback --keep-going --color --nitpicky --jobs auto\n# Create a tarball of the built website according to GitHub Pages requirements.\n# Ref: https://github.com/actions/upload-pages-artifact/blob/main/action.yml\ntar \\\n  --dereference --hard-dereference \\\n  --directory \"docs/website/.build/dirhtml\" \\\n  -cvf \"docs/website/.build/website.tar\" \\\n  --exclude=.git \\\n  --exclude=.github \\\n  --exclude=\".[^/]*\" \\\n  .\n",
                     "name": "build-web",
                     "references": [
                        {
                           "title": "`sphinx-build` options",
                           "url": "https://www.sphinx-doc.org/en/master/man/sphinx-build.html"
                        },
                        {
                           "title": "Sphinx builders",
                           "url": "https://www.sphinx-doc.org/en/master/usage/builders/index.html"
                        },
                        {
                           "title": "Sphinx Makefile template",
                           "url": "https://github.com/sphinx-doc/sphinx/blob/master/sphinx/templates/quickstart/Makefile.new.jinja"
                        }
                     ],
                     "summary": "Build the website with Sphinx."
                  },
                  "jupyterlab": {
                     "body": "run_in_conda_env jupyter \\\n  jupyter-lab \"/\" \\\n    --ContentsManager.allow_hidden=True \\\n    --IdentityProvider.token=''\n",
                     "name": "jupyterlab",
                     "summary": "Open JupyterLab"
                  },
                  "liveweb": {
                     "body": "run_in_conda_env website sphinx-autobuild \\\n  docs/website/source \\\n  docs/website/.build \\\n  --verbose --show-traceback --keep-going --color --nitpicky --jobs auto \\\n  -a \\\n  -b=dirhtml \\\n  --open-browser \\\n  --delay 0\n",
                     "description": "This will automatically rebuild the website when changes are made.\n",
                     "name": "liveweb",
                     "references": [
                        {
                           "title": "`sphinx-autobuild` options",
                           "url": "https://github.com/sphinx-doc/sphinx-autobuild/blob/main/README.rst"
                        }
                     ],
                     "summary": "Start a live preview server for the website."
                  },
                  "project": {
                     "body": "run_in_conda_env proman proman $@\n",
                     "name": "project",
                     "summary": "Main project management CLI."
                  },
                  "run_in_conda_env": {
                     "body": "conda run --cwd '/pypackit' --live-stream -vv --name $@\n",
                     "description": "Use `conda run` to run a command in a conda environment.\nThe first argument is the name of the conda environment,\nwhile the rest of the arguments are the command and its arguments.\nThe function runs the command from the root of the repository,\nand livestreams the output.\n",
                     "name": "run_in_conda_env",
                     "summary": "Run a command in a conda environment."
                  },
                  "typecheck": {
                     "body": "run_in_conda_env type_check \\\n  mypy \\\n    --package pypackit \\\n    --package pypackit_testsuite \\\n    --python-executable /opt/conda/envs/app/bin/python \\\n    --config-file .devcontainer/config/mypy.toml \\\n    --install-types \\\n    --non-interactive\n",
                     "name": "typecheck",
                     "references": [
                        {
                           "title": "Using installed packages with Mypy",
                           "url": "https://mypy.readthedocs.io/en/stable/installed_packages.html#using-installed-packages-with-mypy-pep-561"
                        }
                     ],
                     "summary": "Run type checking with Mypy."
                  }
               },
               "interpreter": ""
            },
            "content_setting": {
               "prefix": "",
               "separator": "\n",
               "suffix": ""
            },
            "description": "This file contains shell functions for common project tasks.\nIt is sourced in the `bash_env` file,\nwhich is sourced by all shell sessions.\n",
            "file_setting": {
               "eof_newline": true,
               "json": {
                  "end_of_file_newline": true,
                  "indent": 3,
                  "sort_keys": true
               },
               "md": {
                  "heading_number": false,
                  "target": "github"
               },
               "sort_keys": true,
               "yaml": {
                  "block_string": true,
                  "end_of_file_newline": true,
                  "mapping_indent": 2,
                  "remove_top_level_indent": true,
                  "sequence_indent": 4,
                  "sequence_indent_offset": 2,
                  "sort_keys": true
               }
            },
            "name": "Project Tasks",
            "path": ".devcontainer/volume/etc/project_tasks",
            "relpath": "etc/project_tasks",
            "status": "active",
            "summary": "Shell functions for common project tasks.",
            "type": "shell_src",
            "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/volume/etc/project_tasks"
         },
         "root_bashrc": {
            "abspath": "/root/.bashrc",
            "content_setting": {
               "prefix": "",
               "separator": "\n",
               "suffix": ""
            },
            "file_setting": {
               "eof_newline": true,
               "json": {
                  "end_of_file_newline": true,
                  "indent": 3,
                  "sort_keys": true
               },
               "md": {
                  "heading_number": false,
                  "target": "github"
               },
               "sort_keys": true,
               "yaml": {
                  "block_string": true,
                  "end_of_file_newline": true,
                  "mapping_indent": 2,
                  "remove_top_level_indent": true,
                  "sequence_indent": 4,
                  "sequence_indent_offset": 2,
                  "sort_keys": true
               }
            },
            "name": "Root bashrc",
            "path": ".devcontainer/volume/root/.bashrc",
            "relpath": "root/.bashrc",
            "status": "delete",
            "summary": "Bash `bashrc` startup file for root user.",
            "type": "shell_src",
            "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/volume/root/.bashrc"
         },
         "root_profile": {
            "abspath": "/root/.profile",
            "content_setting": {
               "prefix": "",
               "separator": "\n",
               "suffix": ""
            },
            "file_setting": {
               "eof_newline": true,
               "json": {
                  "end_of_file_newline": true,
                  "indent": 3,
                  "sort_keys": true
               },
               "md": {
                  "heading_number": false,
                  "target": "github"
               },
               "sort_keys": true,
               "yaml": {
                  "block_string": true,
                  "end_of_file_newline": true,
                  "mapping_indent": 2,
                  "remove_top_level_indent": true,
                  "sequence_indent": 4,
                  "sequence_indent_offset": 2,
                  "sort_keys": true
               }
            },
            "name": "Root Shell Profile",
            "path": ".devcontainer/volume/root/.profile",
            "relpath": "root/.profile",
            "status": "delete",
            "summary": "Shell `profile` startup file for root user.",
            "type": "shell_src",
            "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/volume/root/.profile"
         },
         "shim_systemctl": {
            "abspath": "/usr/local/bin/systemctl",
            "chmod": "+rx",
            "content": {
               "body": [
                  {
                     "content": "if [ -d \"/run/systemd/system\" ]; then\n    exec /bin/systemctl \"$@\"\nelse\n    echo '\"systemd\" is not running in this container due to its overhead.\\nUse the \"service\" command to start services instead. e.g.:\\nservice --status-all'\nfi\n"
                  }
               ],
               "flags": "-eu",
               "interpreter": "bin/sh"
            },
            "content_setting": {
               "prefix": "",
               "separator": "\n",
               "suffix": ""
            },
            "description": "This script replaces the `systemctl` command\nand notifies users to use the `service` command\nif `systemd` is not available.\n",
            "file_setting": {
               "eof_newline": true,
               "json": {
                  "end_of_file_newline": true,
                  "indent": 3,
                  "sort_keys": true
               },
               "md": {
                  "heading_number": false,
                  "target": "github"
               },
               "sort_keys": true,
               "yaml": {
                  "block_string": true,
                  "end_of_file_newline": true,
                  "mapping_indent": 2,
                  "remove_top_level_indent": true,
                  "sequence_indent": 4,
                  "sequence_indent_offset": 2,
                  "sort_keys": true
               }
            },
            "name": "SystemCTL Shim",
            "path": ".devcontainer/volume/usr/local/bin/systemctl",
            "references": [
               {
                  "title": "common-utils Devcontainer Feature shim file",
                  "url": "https://github.com/devcontainers/features/blob/main/src/common-utils/bin/systemctl"
               },
               {
                  "title": "common-utils Devcontainer Feature install script",
                  "url": "https://github.com/devcontainers/features/blob/6654579de4c31cd9f9f9e19e873521f502403929/src/common-utils/main.sh#L594-L597"
               }
            ],
            "relpath": "usr/local/bin/systemctl",
            "status": "active",
            "summary": "Shim for the `systemctl` binary.",
            "type": "shell_src",
            "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/volume/usr/local/bin/systemctl"
         },
         "shim_vscode": {
            "abspath": "/usr/local/bin/code",
            "chmod": "+rx",
            "content": {
               "body": [
                  {
                     "content": "code=\"$(get_next_in_path)\""
                  },
                  {
                     "content": "if [ -n \"$code\" ]; then\n    exec \"$code\" \"$@\"\nelif [ \"$(command -v code-insiders)\" ]; then\n    exec code-insiders \"$@\"\nelse\n    echo \"code or code-insiders is not installed\" >&2\n    exit 127\nfi\n"
                  }
               ],
               "flags": "-eu",
               "import": [
                  "get_next_in_path"
               ],
               "interpreter": "bin/sh"
            },
            "content_setting": {
               "prefix": "",
               "separator": "\n",
               "suffix": ""
            },
            "description": "This script replaces the `code` command\nand redirects it to `code-insiders`\nwhen `code` is not available.\n",
            "file_setting": {
               "eof_newline": true,
               "json": {
                  "end_of_file_newline": true,
                  "indent": 3,
                  "sort_keys": true
               },
               "md": {
                  "heading_number": false,
                  "target": "github"
               },
               "sort_keys": true,
               "yaml": {
                  "block_string": true,
                  "end_of_file_newline": true,
                  "mapping_indent": 2,
                  "remove_top_level_indent": true,
                  "sequence_indent": 4,
                  "sequence_indent_offset": 2,
                  "sort_keys": true
               }
            },
            "name": "VS Code Shim",
            "path": ".devcontainer/volume/usr/local/bin/code",
            "references": [
               {
                  "title": "Shim file in `common-utils` Devcontaier Feature",
                  "url": "https://github.com/devcontainers/features/blob/main/src/common-utils/bin/code"
               },
               {
                  "title": "Usage in `common-utils` Devcontainer Feature",
                  "url": "https://github.com/devcontainers/features/blob/6654579de4c31cd9f9f9e19e873521f502403929/src/common-utils/main.sh#L590-L591"
               }
            ],
            "relpath": "usr/local/bin/code",
            "status": "active",
            "summary": "Shim for the `code` binary.",
            "type": "shell_src",
            "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/volume/usr/local/bin/code"
         },
         "user_bashrc": {
            "abspath": "/home/pypackit-dev/.bashrc",
            "content_setting": {
               "prefix": "",
               "separator": "\n",
               "suffix": ""
            },
            "file_setting": {
               "eof_newline": true,
               "json": {
                  "end_of_file_newline": true,
                  "indent": 3,
                  "sort_keys": true
               },
               "md": {
                  "heading_number": false,
                  "target": "github"
               },
               "sort_keys": true,
               "yaml": {
                  "block_string": true,
                  "end_of_file_newline": true,
                  "mapping_indent": 2,
                  "remove_top_level_indent": true,
                  "sequence_indent": 4,
                  "sequence_indent_offset": 2,
                  "sort_keys": true
               }
            },
            "name": "User bashrc",
            "path": ".devcontainer/volume/home/pypackit-dev/.bashrc",
            "relpath": "home/pypackit-dev/.bashrc",
            "status": "delete",
            "summary": "Bash `bashrc` startup file for container user.",
            "type": "shell_src",
            "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/volume/home/pypackit-dev/.bashrc"
         },
         "user_profile": {
            "abspath": "/home/pypackit-dev/.profile",
            "content_setting": {
               "prefix": "",
               "separator": "\n",
               "suffix": ""
            },
            "file_setting": {
               "eof_newline": true,
               "json": {
                  "end_of_file_newline": true,
                  "indent": 3,
                  "sort_keys": true
               },
               "md": {
                  "heading_number": false,
                  "target": "github"
               },
               "sort_keys": true,
               "yaml": {
                  "block_string": true,
                  "end_of_file_newline": true,
                  "mapping_indent": 2,
                  "remove_top_level_indent": true,
                  "sequence_indent": 4,
                  "sequence_indent_offset": 2,
                  "sort_keys": true
               }
            },
            "name": "User Shell Profile",
            "path": ".devcontainer/volume/home/pypackit-dev/.profile",
            "relpath": "home/pypackit-dev/.profile",
            "status": "delete",
            "summary": "Shell `profile` startup file for container user.",
            "type": "shell_src",
            "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/volume/home/pypackit-dev/.profile"
         },
         "zprofile": {
            "abspath": "/etc/zsh/zprofile",
            "content": {
               "body": [
                  {
                     "content": "emulate sh -c 'source \"/etc/profile\"'\n",
                     "summary": "Source `/etc/profile`"
                  }
               ],
               "flags": "",
               "interpreter": ""
            },
            "content_setting": {
               "prefix": "",
               "separator": "\n",
               "suffix": ""
            },
            "description": "This is the second system-wide Zsh startup file that is loaded\nafter `zshenv`.\nIt is sourced only for login shells (i.e. shells\ninvoked with \"-\" as the first character of argv[0], and\nshells invoked with the -l flag).\n\nIn most cases (e.g. [Arch Linux](https://gitlab.archlinux.org/archlinux/packaging/packages/zsh/-/blob/main/zprofile)),\nthis file only contains a single command to source `/etc/profile`,\nwhich is the system-wide profile file for all Bourne-compatible shells (e.g. Bash, Dash, etc.).\n",
            "file_setting": {
               "eof_newline": true,
               "json": {
                  "end_of_file_newline": true,
                  "indent": 3,
                  "sort_keys": true
               },
               "md": {
                  "heading_number": false,
                  "target": "github"
               },
               "sort_keys": true,
               "yaml": {
                  "block_string": true,
                  "end_of_file_newline": true,
                  "mapping_indent": 2,
                  "remove_top_level_indent": true,
                  "sequence_indent": 4,
                  "sequence_indent_offset": 2,
                  "sort_keys": true
               }
            },
            "name": "Global Zsh Profile",
            "path": ".devcontainer/volume/etc/zsh/zprofile",
            "relpath": "etc/zsh/zprofile",
            "status": "active",
            "summary": "Zsh `zprofile` startup file for all users.",
            "type": "shell_src",
            "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/volume/etc/zsh/zprofile"
         },
         "zsh_theme": {
            "abspath": "/etc/zsh/p10k.zsh",
            "content_setting": {
               "prefix": "",
               "separator": "\n",
               "suffix": ""
            },
            "file_setting": {
               "eof_newline": true,
               "json": {
                  "end_of_file_newline": true,
                  "indent": 3,
                  "sort_keys": true
               },
               "md": {
                  "heading_number": false,
                  "target": "github"
               },
               "sort_keys": true,
               "yaml": {
                  "block_string": true,
                  "end_of_file_newline": true,
                  "mapping_indent": 2,
                  "remove_top_level_indent": true,
                  "sequence_indent": 4,
                  "sequence_indent_offset": 2,
                  "sort_keys": true
               }
            },
            "name": "Zsh Theme",
            "path": ".devcontainer/volume/etc/zsh/p10k.zsh",
            "relpath": "etc/zsh/p10k.zsh",
            "status": "inactive",
            "summary": "Default zsh theme for all users.",
            "type": "shell_src",
            "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/volume/etc/zsh/p10k.zsh"
         },
         "zshenv": {
            "abspath": "/etc/zsh/zshenv",
            "content": {
               "body": [
                  {
                     "content": "emulate sh -c 'source \"/etc/bash/bash_env\"'\n",
                     "summary": "Source BASH_ENV"
                  }
               ],
               "flags": "",
               "interpreter": ""
            },
            "content_setting": {
               "prefix": "",
               "separator": "\n",
               "suffix": ""
            },
            "description": "This file is universally loaded by all Zsh shell invocations\n(login/non-login, interactive/non-interactive).\nIt is the first startup file that is loaded,\nand is intended for global settings\nthat should be applied to all users and Zsh sessions.\nIf the -f flag is present or if the NO_RCS option is\nset within this file, all other initialization files\nare skipped.\n\nThis file should contain commands to set the command\nsearch path, plus other important environment variables.\nIt should not contain commands that produce output\nor assume the shell is attached to a tty.\n\nThe full order of reading Zsh startup files is as follows:\n1. `/etc/zsh/zshenv`\n2. `$ZDOTDIR/.zshenv`\n3. `/etc/zsh/zprofile` (if login shell)\n4. `$ZDOTDIR/.zprofile` (if login shell)\n5. `/etc/zsh/zshrc` (if interactive shell)\n6. `$ZDOTDIR/.zshrc` (if interactive shell)\n7. `/etc/zsh/zlogin` (if login shell)\n8. `$ZDOTDIR/.zlogin` (if login shell)\n\nIf `$ZDOTDIR` is not set, it defaults to `$HOME` (i.e., the user's home directory).\nThis clobbers the user's home directory, and is against the\n[XDG Base Directory Specification](https://specifications.freedesktop.org/basedir-spec/latest/).\nIt is [recommended](https://wiki.archlinux.org/title/XDG_Base_Directory#Partial)\nto set `XDG_CONFIG_HOME` and then set `$ZDOTDIR` to `$XDG_CONFIG_HOME/zsh`.\nThis [can be done](https://www.reddit.com/r/zsh/comments/iq89wr/comment/g4soljs/)\nin this file, so that $ZDOTDIR is automatically set for all users.\n\nNote that here we assume the global config directory is `/etc/zsh`.\nThis is the case for most Linux distributions.\nHowever, Red Hat-based distributions and macOS use `/etc/` instead\n(cf. [`common-utils` Devcontainer Feature](https://github.com/devcontainers/features/blob/8895eb3d161d28ada3a8de761a83135e811cae3d/src/common-utils/main.sh#L510-L514))\n\nReferences:\n- [Startup/Shutdown Files, Zsh docs](https://zsh.sourceforge.io/Doc/Release/Files.html#Files)\n- [Startup/Shutdown Files, ArchWiki Zsh](https://wiki.archlinux.org/title/Zsh#Startup/Shutdown_files)\n- [How Do Zsh Configuration Files Work? freeCodeCamp 2024](https://www.freecodecamp.org/news/how-do-zsh-configuration-files-work/)\n",
            "file_setting": {
               "eof_newline": true,
               "json": {
                  "end_of_file_newline": true,
                  "indent": 3,
                  "sort_keys": true
               },
               "md": {
                  "heading_number": false,
                  "target": "github"
               },
               "sort_keys": true,
               "yaml": {
                  "block_string": true,
                  "end_of_file_newline": true,
                  "mapping_indent": 2,
                  "remove_top_level_indent": true,
                  "sequence_indent": 4,
                  "sequence_indent_offset": 2,
                  "sort_keys": true
               }
            },
            "name": "Global Zsh Startup File",
            "path": ".devcontainer/volume/etc/zsh/zshenv",
            "relpath": "etc/zsh/zshenv",
            "status": "active",
            "summary": "Zsh `zshenv` startup file for all users.",
            "type": "shell_src",
            "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/volume/etc/zsh/zshenv"
         },
         "zshrc": {
            "abspath": "/etc/zsh/zshrc",
            "content": {
               "body": [
                  {
                     "content": "case $- in\n  *i*) ;;\n    *) return;;\nesac\n",
                     "summary": "Ensure interactivity."
                  },
                  {
                     "content": ". \"/etc/global_shellrc\"",
                     "summary": "Source global RC file."
                  },
                  {
                     "content": "# if `read` is used with no arguments and input is redirected from a file,\n# Zsh uses READNULLCMD as the command to run on that file.\nREADNULLCMD=${PAGER:-/usr/bin/pager}\n\n# An array to note missing features to ease diagnosis in case of problems.\ntypeset -ga debian_missing_features\n",
                     "description": "This is from the default zshrc file created by the `zsh-common` package.\n",
                     "summary": "Global zshrc section."
                  },
                  {
                     "content": "if [[ -z \"${DEBIAN_PREVENT_KEYBOARD_CHANGES-}\" ]] && [[ \"$TERM\" != 'emacs' ]]; then\n  typeset -A key\n  key=(\n    BackSpace  \"${terminfo[kbs]}\"\n    Home       \"${terminfo[khome]}\"\n    End        \"${terminfo[kend]}\"\n    Insert     \"${terminfo[kich1]}\"\n    Delete     \"${terminfo[kdch1]}\"\n    Up         \"${terminfo[kcuu1]}\"\n    Down       \"${terminfo[kcud1]}\"\n    Left       \"${terminfo[kcub1]}\"\n    Right      \"${terminfo[kcuf1]}\"\n    PageUp     \"${terminfo[kpp]}\"\n    PageDown   \"${terminfo[knp]}\"\n  )\n  function bind2maps () {\n    local i sequence widget\n    local -a maps\n    while [[ \"$1\" != \"--\" ]]; do\n      maps+=( \"$1\" )\n      shift\n    done\n    shift\n    sequence=\"${key[$1]}\"\n    widget=\"$2\"\n    [[ -z \"$sequence\" ]] && return 1\n    for i in \"${maps[@]}\"; do\n      bindkey -M \"$i\" \"$sequence\" \"$widget\"\n    done\n  }\n  bind2maps emacs             -- BackSpace   backward-delete-char\n  bind2maps       viins       -- BackSpace   vi-backward-delete-char\n  bind2maps             vicmd -- BackSpace   vi-backward-char\n  bind2maps emacs             -- Home        beginning-of-line\n  bind2maps       viins vicmd -- Home        vi-beginning-of-line\n  bind2maps emacs             -- End         end-of-line\n  bind2maps       viins vicmd -- End         vi-end-of-line\n  bind2maps emacs viins       -- Insert      overwrite-mode\n  bind2maps             vicmd -- Insert      vi-insert\n  bind2maps emacs             -- Delete      delete-char\n  bind2maps       viins vicmd -- Delete      vi-delete-char\n  bind2maps emacs viins vicmd -- Up          up-line-or-history\n  bind2maps emacs viins vicmd -- Down        down-line-or-history\n  bind2maps emacs             -- Left        backward-char\n  bind2maps       viins vicmd -- Left        vi-backward-char\n  bind2maps emacs             -- Right       forward-char\n  bind2maps       viins vicmd -- Right       vi-forward-char\n  # Make sure the terminal is in application mode, when zle is\n  # active. Only then are the values from $terminfo valid.\n  if (( ${+terminfo[smkx]} )) && (( ${+terminfo[rmkx]} )); then\n    function zle-line-init () {\n      emulate -L zsh\n      printf '%s' ${terminfo[smkx]}\n    }\n    function zle-line-finish () {\n      emulate -L zsh\n      printf '%s' ${terminfo[rmkx]}\n    }\n    zle -N zle-line-init\n    zle -N zle-line-finish\n  else\n    for i in {s,r}mkx; do\n      (( ${+terminfo[$i]} )) || debian_missing_features+=($i)\n    done\n    unset i\n  fi\n  unfunction bind2maps\nfi\n",
                     "description": "This is from the default zshrc file created by the `zsh-common` package.\n",
                     "summary": "Emacs settings."
                  },
                  {
                     "content": "# After `sudo`, seach for commands in the following directories.\nzstyle ':completion:*:sudo:*' command-path \\\n    /usr/local/sbin \\\n    /usr/local/bin  \\\n    /usr/sbin       \\\n    /usr/bin        \\\n    /sbin           \\\n    /bin            \\\n    /usr/X11R6/bin\nzstyle ':completion:*' auto-description 'specify: %d'\nzstyle ':completion:*' completer _expand _complete _correct _approximate\nzstyle ':completion:*' format 'Completing %d'\nzstyle ':completion:*' group-name ''\nzstyle ':completion:*' menu select=2\nzstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}\nzstyle ':completion:*' list-colors ''\nzstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s\nzstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'\nzstyle ':completion:*' menu select=long\nzstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s\nzstyle ':completion:*' use-compctl false\nzstyle ':completion:*' verbose true\nzstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'\nzstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'\n",
                     "summary": "Completion settings."
                  },
                  {
                     "content": "if (( ${${(@f)\"$(</etc/os-release)\"}[(I)ID*=*ubuntu]} )) && [[ -z \"$skip_global_compinit\" ]]; then\n  autoload -Uz compinit\n  compinit\nfi\n",
                     "description": "If you don't want compinit called here, place the line\n`skip_global_compinit=1` in your `$ZDOTDIR/.zshenv` file.\n",
                     "summary": "Completion initialization."
                  },
                  {
                     "content": "(( ${+aliases[run-help]} )) && unalias run-help\nautoload -Uz run-help\n",
                     "description": "This restores Zsh's real `run-help` behavior\nby removing any existing alias for `run-help`\nand then loading `run-help` from the system's fpath search paths.\n",
                     "summary": "Restore run-help."
                  },
                  {
                     "content": "setopt histignorealldups  # remove older duplicates\nsetopt sharehistory       # share history across sessions\n# Use emacs keybindings even if our EDITOR is set to vi\nbindkey -e\n# Keep 1000 lines of history within the shell and save it to zsh_history:\nHISTSIZE=1000\nSAVEHIST=1000\nHISTFILE=/etc/zsh/zsh_history\n",
                     "summary": "History settings"
                  },
                  {
                     "content": "# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.\n# Initialization code that may require console input (password prompts, [y/n]\n# confirmations, etc.) must go above this block; everything else may go below.\nif [[ -r \"${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh\" ]]; then\n  source \"${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh\"\nfi\n\n\n# Main Settings\n# -------------\nexport ZSH=\"/home/pypackit-dev/.oh-my-zsh\"\nZSH_THEME=\"powerlevel10k/powerlevel10k\"\nplugins=(\n    git\n    github\n    per-directory-history\n    pip\n    python\n    z\n    zsh-syntax-highlighting\n)\nZSH_CUSTOM=\"$ZSH/custom\"\nZSH_CACHE_DIR=\"$ZSH/cache\"\n\n\n# Update Settings\n# ---------------\nzstyle ':omz:update' mode disabled\n\n\n# Completion Settings\n# -------------------\nZSH_COMPDUMP=\"$ZSH_CACHE_DIR/.zcompdump\"\nCOMPLETION_WAITING_DOTS=\"%F{yellow}waiting...%f\"\nCASE_SENSITIVE=\"true\"\n\n\n# Library Settings\n# ----------------\nENABLE_CORRECTION=true\nHIST_STAMPS=\"yyyy-mm-dd\"\n\n\n# Source Oh My Zsh\n# ----------------\nsource $ZSH/oh-my-zsh.sh\n\n\n# Automatic Title Settings\n# ------------------------\nZSH_THEME_TERM_TITLE_IDLE=\"%n@%m:%~\"\nZSH_THEME_TERM_TAB_TITLE_IDLE=\"%15<..<%~%<<\"\n\n\n# Powerlevel10k Settings\n# ----------------------\n# To customize prompt, run `p10k configure` or edit ~/.config/zsh/.p10k.zsh.\n. \"/etc/zsh/p10k.zsh\"\n",
                     "references": [
                        {
                           "title": "Oh My Zsh settings",
                           "url": "https://github.com/ohmyzsh/ohmyzsh/wiki/Settings"
                        },
                        {
                           "title": "Oh My Zsh zshrc templates",
                           "url": "https://github.com/ohmyzsh/ohmyzsh/tree/master/templates"
                        }
                     ],
                     "summary": "Oh My Zsh settings."
                  },
                  {
                     "content": "eval \"$(pixi completion -s zsh)\"",
                     "summary": "Pixi activation."
                  },
                  {
                     "content": "# END OF PyPackIT SECTION\n# ==================================================\n",
                     "summary": "End marker."
                  }
               ],
               "flags": "",
               "interpreter": ""
            },
            "content_setting": {
               "prefix": "",
               "separator": "\n",
               "suffix": ""
            },
            "description": "References:\n- [Oh My Zsh settings](https://github.com/ohmyzsh/ohmyzsh/wiki/Settings)\n- [Oh My Zsh zshrc templates](https://github.com/ohmyzsh/ohmyzsh/blob/master/templates)\n",
            "file_setting": {
               "eof_newline": true,
               "json": {
                  "end_of_file_newline": true,
                  "indent": 3,
                  "sort_keys": true
               },
               "md": {
                  "heading_number": false,
                  "target": "github"
               },
               "sort_keys": true,
               "yaml": {
                  "block_string": true,
                  "end_of_file_newline": true,
                  "mapping_indent": 2,
                  "remove_top_level_indent": true,
                  "sequence_indent": 4,
                  "sequence_indent_offset": 2,
                  "sort_keys": true
               }
            },
            "name": "Zsh RC File.",
            "path": ".devcontainer/volume/etc/zsh/zshrc",
            "relpath": "etc/zsh/zshrc",
            "status": "active",
            "summary": "Zsh `zshrc` startup file.",
            "type": "shell_src",
            "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/volume/etc/zsh/zshrc"
         }
      }
   },
   "discussion": {
      "category": {
         "branding": {
            "created_at": "2023-07-05",
            "description": "",
            "emoji": "#\ufe0f\u20e3",
            "id": "DIC_kwDOJi8gRs4CXrl6",
            "is_answerable": false,
            "name": "Branding",
            "updated_at": "2023-07-05"
         },
         "bug-report": {
            "created_at": "2023-07-08",
            "description": "Report a potential bug or problem you encountered while using the application.",
            "emoji": "#\ufe0f\u20e3",
            "id": "DIC_kwDOJi8gRs4CXwlw",
            "is_answerable": false,
            "name": "Bug Report",
            "updated_at": "2023-07-08"
         },
         "installation": {
            "created_at": "2023-05-21",
            "description": "Ask questions about the installation process.",
            "emoji": "\ud83d\ude4f",
            "id": "DIC_kwDOJi8gRs4CWomv",
            "is_answerable": true,
            "name": "Installation",
            "updated_at": "2023-07-03"
         },
         "new-features": {
            "created_at": "2023-05-21",
            "description": "Share ideas for new features",
            "emoji": "\ud83d\udca1",
            "id": "DIC_kwDOJi8gRs4CWomw",
            "is_answerable": false,
            "name": "New Features",
            "updated_at": "2023-07-04"
         },
         "release": {
            "created_at": "2023-05-21",
            "description": "New release announcements",
            "emoji": "\ud83d\udce3",
            "id": "DIC_kwDOJi8gRs4CWomt",
            "is_answerable": false,
            "name": "Release",
            "updated_at": "2023-08-04"
         },
         "testimonials": {
            "created_at": "2025-01-09",
            "description": "Write a testimonial for PyPackIT and share your experience with others.",
            "emoji": "\ud83d\udcdd",
            "id": "DIC_kwDOJi8gRs4Cl3_R",
            "is_answerable": false,
            "name": "Testimonials",
            "updated_at": "2025-01-09"
         },
         "usage": {
            "created_at": "2023-07-03",
            "description": "Ask questions about the application and its usage/behavior.",
            "emoji": "#\ufe0f\u20e3",
            "id": "DIC_kwDOJi8gRs4CXp_t",
            "is_answerable": true,
            "name": "Usage",
            "updated_at": "2023-07-08"
         }
      }
   },
   "doc": {
      "code_of_conduct": {
         "content": {
            "class": "covenant_code_of_conduct",
            "contact_name": "armiariam@gmail.com",
            "contact_url": "mailto:armiariam@gmail.com"
         },
         "content_setting": {
            "prefix": "",
            "separator": "\n",
            "suffix": ""
         },
         "file_setting": {
            "eof_newline": true,
            "json": {
               "end_of_file_newline": true,
               "indent": 3,
               "sort_keys": true
            },
            "md": {
               "heading_number": false,
               "target": "github"
            },
            "sort_keys": true,
            "yaml": {
               "block_string": true,
               "end_of_file_newline": true,
               "mapping_indent": 2,
               "remove_top_level_indent": true,
               "sequence_indent": 4,
               "sequence_indent_offset": 2,
               "sort_keys": true
            }
         },
         "name": "Code of Conduct",
         "notes": "For \"Code of conduct\" to be marked as complete in the repository's community profile,\nGitHub only accepts the\n[Contributor Covenant](https://www.contributor-covenant.org/version/2/0/code_of_conduct.html)\nand the [Citizen Code of Conduct](http://stumptownsyndicate.org/).\n",
         "path": "CODE_OF_CONDUCT.md",
         "status": "active",
         "summary": "GitHub [`CODE_OF_CONDUCT`](https://docs.github.com/en/communities/setting-up-your-project-for-healthy-contributions/adding-a-code-of-conduct-to-your-project) community health file.",
         "type": "md",
         "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/CODE_OF_CONDUCT.md"
      },
      "contributing": {
         "content": {
            "body": [
               {
                  "attrs": {
                     "align": "justify"
                  },
                  "class": "paragraph",
                  "content": "Welcome to the <em>PyPackIT</em> community!\nWe are excited to have you here,\nand grateful that you are considering contributing.\nPyPackIT is a free and open-source project that evolves with the needs of its users,\nand can only grow through the help of great members like you.\n"
               }
            ],
            "footer": [
               {
                  "class": "thematic_break"
               },
               {
                  "class": "badges",
                  "items": [
                     {
                        "align": "left",
                        "alt": "PyPackIT: Copyright \u00a9 2023\u20132025 RepoDynamics",
                        "args": {
                           "query": "$.copyright",
                           "url": "https://raw.githubusercontent.com/RepoDynamics/PyPackIT/main/.github/.repodynamics/metadata.json"
                        },
                        "color": "rgb(0 85 0)",
                        "color_dark": "rgb(28 170 0)",
                        "label": "PyPackIT",
                        "link": "https://github.com/RepoDynamics",
                        "logo": "docs/website/source/_media/logo/favicon.svg",
                        "logo_dark": "docs/website/source/_media/logo/favicon.svg",
                        "logo_type": "file",
                        "logo_type_dark": "file",
                        "service": "dynamic",
                        "title": "PyPackIT: Copyright \u00a9 2023\u20132025 RepoDynamics"
                     },
                     {
                        "align": "right",
                        "alt": "SPDX-License-Identifier: AGPL-3.0-or-later",
                        "args": {
                           "message": "AGPL-3.0-or-later"
                        },
                        "color": "#4398CC",
                        "label": "SPDX License Identifier",
                        "link": "https://pypackit.repodynamics.com/about/license",
                        "logo": "spdx",
                        "logo_color": "#4398CC",
                        "service": "static",
                        "title": "SPDX-License-Identifier: AGPL-3.0-or-later"
                     }
                  ],
                  "style": "for-the-badge"
               }
            ],
            "heading": "PyPackIT Contributing Guidelines",
            "sections": [
               {
                  "body": [
                     {
                        "attrs": {
                           "align": "justify"
                        },
                        "class": "paragraph",
                        "content": "To keep all our project documentation organized and easy to find, the complete\n<a href=\"https://pypackit.repodynamics.com/contribute\">contribution guide</a> is hosted on our website.\n"
                     }
                  ],
                  "heading": "How To Contribute"
               }
            ]
         },
         "content_setting": {
            "prefix": "",
            "separator": "\n",
            "suffix": ""
         },
         "file_setting": {
            "eof_newline": true,
            "json": {
               "end_of_file_newline": true,
               "indent": 3,
               "sort_keys": true
            },
            "md": {
               "heading_number": false,
               "target": "github"
            },
            "sort_keys": true,
            "yaml": {
               "block_string": true,
               "end_of_file_newline": true,
               "mapping_indent": 2,
               "remove_top_level_indent": true,
               "sequence_indent": 4,
               "sequence_indent_offset": 2,
               "sort_keys": true
            }
         },
         "name": "Contribution Guide",
         "path": "CONTRIBUTING.md",
         "status": "active",
         "summary": "GitHub [`CONTRIBUTING`](https://docs.github.com/en/communities/setting-up-your-project-for-healthy-contributions/setting-guidelines-for-repository-contributors) community health file.",
         "type": "md",
         "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/CONTRIBUTING.md"
      },
      "governance": {
         "content": {
            "footer": [
               {
                  "class": "thematic_break"
               },
               {
                  "class": "badges",
                  "items": [
                     {
                        "align": "left",
                        "alt": "PyPackIT: Copyright \u00a9 2023\u20132025 RepoDynamics",
                        "args": {
                           "query": "$.copyright",
                           "url": "https://raw.githubusercontent.com/RepoDynamics/PyPackIT/main/.github/.repodynamics/metadata.json"
                        },
                        "color": "rgb(0 85 0)",
                        "color_dark": "rgb(28 170 0)",
                        "label": "PyPackIT",
                        "link": "https://github.com/RepoDynamics",
                        "logo": "docs/website/source/_media/logo/favicon.svg",
                        "logo_dark": "docs/website/source/_media/logo/favicon.svg",
                        "logo_type": "file",
                        "logo_type_dark": "file",
                        "service": "dynamic",
                        "title": "PyPackIT: Copyright \u00a9 2023\u20132025 RepoDynamics"
                     },
                     {
                        "align": "right",
                        "alt": "SPDX-License-Identifier: AGPL-3.0-or-later",
                        "args": {
                           "message": "AGPL-3.0-or-later"
                        },
                        "color": "#4398CC",
                        "label": "SPDX License Identifier",
                        "link": "https://pypackit.repodynamics.com/about/license",
                        "logo": "spdx",
                        "logo_color": "#4398CC",
                        "service": "static",
                        "title": "SPDX-License-Identifier: AGPL-3.0-or-later"
                     }
                  ],
                  "style": "for-the-badge"
               }
            ],
            "heading": "Project Governance"
         },
         "content_setting": {
            "prefix": "",
            "separator": "\n",
            "suffix": ""
         },
         "file_setting": {
            "eof_newline": true,
            "json": {
               "end_of_file_newline": true,
               "indent": 3,
               "sort_keys": true
            },
            "md": {
               "heading_number": false,
               "target": "github"
            },
            "sort_keys": true,
            "yaml": {
               "block_string": true,
               "end_of_file_newline": true,
               "mapping_indent": 2,
               "remove_top_level_indent": true,
               "sequence_indent": 4,
               "sequence_indent_offset": 2,
               "sort_keys": true
            }
         },
         "name": "Governance Model",
         "path": "GOVERNANCE.md",
         "status": "active",
         "summary": "GitHub [`GOVERNANCE`](https://docs.github.com/en/communities/setting-up-your-project-for-healthy-contributions/) community health file.",
         "type": "md",
         "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/GOVERNANCE.md"
      },
      "readme": {
         "content": {
            "body": [
               {
                  "align": "center",
                  "alt": "PyPackIT: Cloud-Native Continuous Software Engineering Automation for Python Packages on GitHub",
                  "class": "block_image",
                  "link": "https://pypackit.repodynamics.com",
                  "src": "https://raw.githubusercontent.com/RepoDynamics/PyPackIT/main/docs/website/source/_media/logo/full_light.svg",
                  "src_dark": "https://raw.githubusercontent.com/RepoDynamics/PyPackIT/main/docs/website/source/_media/logo/full_dark.svg",
                  "title": "Welcome to PyPackIT! Click to visit our website and learn more.",
                  "width": "100%"
               },
               {
                  "attrs_container": {
                     "align": "center"
                  },
                  "class": "menu",
                  "color": "rgb(0 85 0)",
                  "color_dark": "rgb(28 170 0)",
                  "height": "33px",
                  "items": [
                     {
                        "link": "https://pypackit.repodynamics.com/intro",
                        "text": "Intro",
                        "title": "Introduction and Background"
                     },
                     {
                        "link": "https://pypackit.repodynamics.com/manual",
                        "text": "Manual",
                        "title": "User Manual"
                     },
                     {
                        "link": "https://pypackit.repodynamics.com/news",
                        "text": "News",
                        "title": "Latest News and Releases"
                     },
                     {
                        "link": "https://pypackit.repodynamics.com/contribute",
                        "text": "Contribute",
                        "title": "How to Contribute"
                     },
                     {
                        "link": "https://pypackit.repodynamics.com/about",
                        "text": "About",
                        "title": "About the Project"
                     },
                     {
                        "link": "https://pypackit.repodynamics.com/help",
                        "text": "Help",
                        "title": "Get Help and Support"
                     }
                  ],
                  "line_bottom_width": "100%",
                  "line_top_width": "100%",
                  "style": "for-the-badge"
               },
               [
                  {
                     "args": {
                        "message": "Automation"
                     },
                     "class": "badge",
                     "color": "#0B3C75",
                     "height": "23px",
                     "label": "Keywords",
                     "label_color": "#494949",
                     "service": "static",
                     "style": "flat-square"
                  },
                  "&nbsp;",
                  {
                     "class": "buttons",
                     "color": "#0B3C75",
                     "height": "23px",
                     "items": [
                        "Cloud-Native Development",
                        "Continuous Integration",
                        "Continuous Delivery",
                        "Continuous Deployment",
                        "Continuous Testing",
                        "Continuous Refactoring",
                        "Continuous Configuration Automation",
                        "Continuous Software Engineering",
                        "DevOps",
                        "Infrastructure as Code",
                        "Agile",
                        "Dynamic Project Management",
                        "Template Repository",
                        "Python Package Skeleton",
                        "Sphinx Website",
                        "Testing Infrastructure",
                        "FAIR Software",
                        "GitHub Actions",
                        "Bot"
                     ],
                     "style": "flat-square"
                  }
               ],
               {
                  "attrs": {
                     "align": "justify"
                  },
                  "class": "paragraph",
                  "content": "PyPackIT [\u02c8pa\u026a\u02ccp\u00e6k\u026at] is a comprehensive <strong>cloud-based automation tool</strong> for production of <abbr title=\"Findable, Accessible, Interoperable, and Reusable\">FAIR</abbr> and professional applications on <strong>GitHub</strong>, in accordance with the latest software engineering best practices and standards. PyPackIT is a ready-to-use software suite that streamlines the initiation, configuration, development, publication, management, and maintenance of high-quality <strong>Python applications</strong>. By taking charge of repetitive tasks and automatically enforcing best practices throughout the software development life cycle, PyPackIT enables users to solely focus on the creative aspects of their projects, while improving quality and lowering production costs. Using latest tools and methodologies, PyPackIT offers a robust project infrastructure, including a build-ready Python <strong>package skeleton</strong>, a fully operational <strong>test suite</strong>, an automated <strong>documentation website</strong>, and a comprehensive <strong>control center</strong> according to <strong>Infrastructure-as-Code</strong> and <strong>Continuous Configuration Automation</strong> practices to enable dynamic project management and customization. PyPackIT establishes a complete <strong>cloud development</strong> environment on GitHub, integrating with its version control system, issue tracker,and pull-based model to provide a fully <strong>automated software development workflow</strong> with <strong>issue management</strong>, <strong>branching model</strong>, and <strong>versioning scheme</strong>. Leveraging <strong>GitHub Actions</strong>, PyPackIT implements a cloud-native Agile development process using <strong>Continuous software engineering</strong>, <strong>containerization</strong>, and <strong>DevOps</strong> methodologies, with a full set of <strong>Continuous Integration</strong>, Deployment, Testing, Refactoring, and Maintenance pipelines. PyPackIT is a <strong>free</strong> and <strong>open-source</strong> software suite that readily integrates with both new and existing projects to ensure their long-term sustainability and high quality, enabling software projects to rapidly implement their ideas and easily maintain their products."
               },
               {
                  "class": "badges",
                  "color": "#0B3C75",
                  "height": "23px",
                  "items": [
                     {
                        "args": {
                           "message": "10.5281/zenodo.14359838"
                        },
                        "color": "#1682D4",
                        "label": "DOI",
                        "link": "https://doi.org/10.5281/zenodo.14359838",
                        "logo": "zenodo",
                        "logo_type": "name"
                     },
                     {
                        "args": {
                           "message": "pypackit"
                        },
                        "color": "#3775A9",
                        "label": "pip install ",
                        "link": "https://pypi.org/project/PyPackIT",
                        "logo": "docs/website/source/_media/logo_ext/pypi.png",
                        "logo_media_type": "png",
                        "logo_type": "file"
                     },
                     {
                        "args": {
                           "message": "pypackit -c repodynamics"
                        },
                        "color": "#44A833",
                        "label": "conda install",
                        "link": "https://anaconda.org/repodynamics/pypackit",
                        "logo": "anaconda",
                        "logo_color": "#44A833",
                        "logo_type": "name"
                     },
                     {
                        "args": {
                           "message": "ghcr.io/repodynamics/pypackit:latest"
                        },
                        "color": "#2496ED",
                        "label": "docker pull",
                        "link": "https://github.com/RepoDynamics/PyPackIT/pkgs/container/PyPackIT",
                        "logo": "docker",
                        "logo_color": "#2496ED",
                        "logo_type": "name"
                     },
                     {
                        "args": {
                           "message": "PyPackIT"
                        },
                        "color": "#181717",
                        "label": "GitHub",
                        "link": "https://github.com/RepoDynamics/PyPackIT/releases",
                        "logo": "github",
                        "logo_type": "name"
                     },
                     {
                        "args": {
                           "message": "try online",
                           "ref": "main",
                           "repo": "PyPackIT",
                           "user": "RepoDynamics"
                        },
                        "color": "#579ACA",
                        "endpoint": "github",
                        "label": "Binder",
                        "label_color": "#494949",
                        "service": "binder"
                     }
                  ],
                  "label_color": "#494949",
                  "separator": 2,
                  "service": "static",
                  "style": "flat-square"
               }
            ],
            "footer": [
               {
                  "class": "thematic_break"
               },
               {
                  "class": "badges",
                  "items": [
                     {
                        "align": "left",
                        "alt": "PyPackIT: Copyright \u00a9 2023\u20132025 RepoDynamics",
                        "args": {
                           "query": "$.copyright",
                           "url": "https://raw.githubusercontent.com/RepoDynamics/PyPackIT/main/.github/.repodynamics/metadata.json"
                        },
                        "color": "rgb(0 85 0)",
                        "color_dark": "rgb(28 170 0)",
                        "label": "PyPackIT",
                        "link": "https://github.com/RepoDynamics",
                        "logo": "docs/website/source/_media/logo/favicon.svg",
                        "logo_dark": "docs/website/source/_media/logo/favicon.svg",
                        "logo_type": "file",
                        "logo_type_dark": "file",
                        "service": "dynamic",
                        "title": "PyPackIT: Copyright \u00a9 2023\u20132025 RepoDynamics"
                     },
                     {
                        "align": "right",
                        "alt": "SPDX-License-Identifier: AGPL-3.0-or-later",
                        "args": {
                           "message": "AGPL-3.0-or-later"
                        },
                        "color": "#4398CC",
                        "label": "SPDX License Identifier",
                        "link": "https://pypackit.repodynamics.com/about/license",
                        "logo": "spdx",
                        "logo_color": "#4398CC",
                        "service": "static",
                        "title": "SPDX-License-Identifier: AGPL-3.0-or-later"
                     }
                  ],
                  "style": "for-the-badge"
               }
            ],
            "sections": [
               {
                  "body": [
                     {
                        "attrs_p": {
                           "align": "justify"
                        },
                        "button": {
                           "align": "left",
                           "color": [
                              "rgb(0 85 0)",
                              "rgb(60 85 0)"
                           ],
                           "color_dark": [
                              "rgb(28 170 0)",
                              "rgb(175 138 0)"
                           ],
                           "height": "30px",
                           "style": "for-the-badge"
                        },
                        "class": "highlights",
                        "items": [
                           {
                              "description": "PyPackIT is fully preconfigured and easily installable\nin both new and existing repositories via a GitHub repository template.\nMost users only need to invest a few minutes filling project-specific information\nin the provided configuration files.\nPyPackIT then takes over, setting up the repository\nand generating a complete infrastructure and fully automated development workflow for the project.\nThis leaves users with only few tasks throughout the software development life cycle,\nsuch as adding application code, unit-tests, and minimal documentation content.\n",
                              "title": "Ready to Use"
                           },
                           {
                              "description": "PyPackIT is a cloud-based solution that integrates with GitHub\nand uses GitHub Actions to automate the entire software development process.\nIt provides a cloud-native development environment that\neliminates the need for initial setup and configuration,\nenabling users to immediately begin with the actual\nimplementation of software, even directly from the web browser.\nAll integration, testing, and deployment tasks are automatically carried out on the cloud,\nfacilitating Agile development and ensuring the consistent enforcement of best practices.\n",
                              "title": "Cloud Native Development"
                           },
                           {
                              "description": "PyPackIT offers a centralized user interface\nfor automatic configuration, customization, and management\nof the entire project, and even multiple projects at once.\nBased on DevOps practices like Infrastructure-as-Code,\nPyPackIT's control center consolidates all project configurations\ninto a unified data structure, supporting both declarative definitions\nand dynamic data generation at runtime via built-in templating, scripting,\nand online retrieval features.\nConfigurations are automatically applied to related components,\neliminating redundancy and rendering the entire project dynamic.\n",
                              "title": "Continuous Configuration Automation"
                           },
                           {
                              "description": "PyPackIT's CI/CD pipelines automate tasks such as code analysis,\nstyle formatting, type checking, refactoring, testing, dependency monitoring,\nversioning, build, containerization, release, and distribution,\nwith support for multiple indexing repositories including PyPI, Anaconda,\nZenodo, GitHub Releases, and all Docker registries.\nThese Continuous software engineering pipelines eliminate the need for dedicated integration\nand deployment teams, while increasing control, integrity, scalability, security,\nand transparency of the Agile development process.\n",
                              "title": "Continuous Integration & Deployment"
                           },
                           {
                              "description": "PyPackIT provides Continuous pipelines that\nperiodically perform automated testing, refactoring, and maintenance tasks\nsuch as testing previous releases with up-to-date dependencies,\nrefactoring code according to the latest standards,\nupgrading development tools and project infrastructure,\nand cleaning up the repository and its development environment.\nPyPackIT can automatically submit issue tickets and pull requests\nfor applying updates and fixes, thus maintaining\nthe health of the project and ensuring its long-term sustainability.\n",
                              "title": "Continuous Refactoring & Testing"
                           },
                           {
                              "description": "PyPackIT automatically maintains the project's issue tracking system,\nproviding type-specific submission forms that are\nkept up-to-date with project information.\nThese collect user inputs in a structured format,\nallowing PyPackIT to automate issue management activities\nsuch as ticket formatting, labeling, bug triage, task assignment,\ndocumentation, issue\u2013commit linkage, and progress reports.\nUsers can also command PyPackIT to perform specific tasks using semantic comments and labels,\neliminating all repetitive issue management activities.\n",
                              "title": "Issue Management"
                           },
                           {
                              "description": "PyPackIT fully integrates with Git and GitHub\nto automate version control tasks like branching,\nversioning, tagging, commit management, and merging.\nBased on well-established models such as Git Flow,\nPyPackIT adopts a specialized branching strategy and version scheme\nfor simultaneous development and deployment of multiple orthogonal release candidates,\nPyPackIT's strategy enables rapid project evolution according to Agile\nand Continuous software engineering methodologies,\nwhile ensuring availability and long-term support of earlier releases.\n",
                              "title": "Version Control"
                           },
                           {
                              "description": "PyPackIT supports Python applications with extension modules and non-Python dependencies.\nIt enables deployment as a Python package, a Conda package,\nand/or a Docker image to cloud services such as PyPI,\nAnaconda, Docker registries, and BinderHub instances.\nPyPackIT includes a build-ready package skeleton with essential source files\nand automatically maintained configuration files customized for the project.\nUsers only need to add application code in the provided source files,\nwhile PyPackIT automates all integration, packaging, and deployment tasks.\n",
                              "title": "Python Application"
                           },
                           {
                              "description": "PyPackIT's fully automated testing infrastructure enables the\nimmediate adoption of test-driven development methodologies,\nrequiring users to only provide test cases in the provided skeleton files.\nTesting is then automatically performed at various phases of the development life cycle,\nwhile generating comprehensive reports and coverage metrics\nto improve awareness of software health status.\nThe test suite is automatically packaged and distributed along each release,\nallowing for local verification of software functionality and performance by its users.\n",
                              "title": "Test Suite"
                           },
                           {
                              "description": "PyPackIT includes a fully designed website\nfilled with automatically generated documentation such as\nproject information, package metadata, installation guides,\nAPI reference, changelogs, release notes,\ncontribution guides, and citation data.\nThe website is automatically deployed to GitHub Pages and Read The Docs platforms,\nand can be easily customized via the control center with no web development knowledge.\nPyPackIT can also dynamically generate standalone documents in various Markdown formats,\nsuch as READMEs for different repositories.\n",
                              "title": "Documentation Website"
                           },
                           {
                              "description": "PyPackIT incorporates the System Package Data Exchange (SPDX) license standard\nand supports all SPDX License List licenses and exceptions, as well as user-defined ones.\nProjects can define complex licenses simply by providing an SPDX license expression.\nPyPackIT will then automatically retrieve\nthe necessary data from the SPDX database,\ncustomize it with project-specific information,\ngenerate visually appealing and syntactically valid license files and copyright notices,\nand integrate license information into all project components and releases.\n",
                              "title": "Copyright & Licensing"
                           },
                           {
                              "description": "PyPackIT improves project security while supporting community collaboration\nby incorporating security measures like branch and tag protection rulesets,\nvulnerability scanning, dependency monitoring, and private security advisories.\nAll provided GitHub Actions workflows and applications are developed\naccording to the latest security standards\nto prevent unauthorized access, data breaches, and code injection attacks.\nTo ensure that PyPackIT is highly secure and transparent,\nmost of its infrastructure is natively implemented and self-contained.\n",
                              "title": "Security & Transparency"
                           }
                        ]
                     }
                  ],
                  "heading": "Highlights"
               },
               {
                  "body": [
                     {
                        "class": "badges",
                        "color": "#0B3C75",
                        "height": "23px",
                        "items": [
                           {
                              "args": {
                                 "message": "0.0.0"
                              },
                              "color": "rgb(60 85 0)",
                              "color_dark": "rgb(175 138 0)",
                              "label": "PyPackIT",
                              "label_color": "rgb(0 85 0)",
                              "label_color_dark": "rgb(28 170 0)",
                              "logo": "docs/website/source/_media/logo/favicon.svg",
                              "logo_type": "file"
                           },
                           {
                              "args": {
                                 "message": "major"
                              },
                              "color": "#AF1F10",
                              "label": "\ud83d\udca5\u2002Release Type"
                           },
                           {
                              "args": {
                                 "message": "2025-04-14"
                              },
                              "label": "\ud83d\uddd3\u2002Release Date"
                           },
                           {
                              "args": {
                                 "message": "10.5281/zenodo.14359839"
                              },
                              "color": "#1682D4",
                              "label": "DOI",
                              "link": "https://zenodo.org/uploads/14359839",
                              "logo": "zenodo",
                              "logo_color": "#1682D4"
                           },
                           {
                              "args": {
                                 "message": "PyPackIT == 0.0.0"
                              },
                              "color": "#3775A9",
                              "label": "pip install",
                              "link": "https://pypi.org/project/PyPackIT",
                              "logo": "docs/website/source/_media/logo_ext/pypi.png",
                              "logo_media_type": "png",
                              "logo_type": "file"
                           },
                           {
                              "args": {
                                 "message": "PyPackIT == 0.0.0 -c RepoDynamics"
                              },
                              "color": "#44A833",
                              "label": "conda install",
                              "link": "https://anaconda.org/repodynamics/pypackit",
                              "logo": "anaconda",
                              "logo_color": "#44A833",
                              "logo_type": "name"
                           },
                           {
                              "args": {
                                 "message": "ghcr.io/repodynamics/pypackit:0.0.0"
                              },
                              "color": "#2496ED",
                              "label": "docker pull",
                              "link": "https://github.com/RepoDynamics/PyPackIT/pkgs/container/PyPackIT",
                              "logo": "docker",
                              "logo_color": "#2496ED",
                              "logo_type": "name"
                           },
                           {
                              "args": {
                                 "message": "ver/0.0.0"
                              },
                              "color": "#181717",
                              "label": "git checkout",
                              "link": "https://github.com/RepoDynamics/PyPackIT/releases",
                              "logo": "github",
                              "logo_type": "name"
                           },
                           {
                              "args": {
                                 "message": "try online",
                                 "ref": "ver/0.0.0",
                                 "repo": "PyPackIT",
                                 "user": "RepoDynamics"
                              },
                              "color": "#579ACA",
                              "endpoint": "github",
                              "label": "Binder",
                              "service": "binder"
                           }
                        ],
                        "label_color": "#494949",
                        "separator": 2,
                        "service": "static",
                        "style": "flat-square"
                     },
                     "**Project Initialization**",
                     "This is an initial emtpy release."
                  ],
                  "heading": "Upcoming Release",
                  "sections": [
                     {
                        "body": [
                           {
                              "class": "badges",
                              "color": "#0B3C75",
                              "height": "23px",
                              "items": [
                                 {
                                    "args": {
                                       "message": "10.5072/zenodo.141305"
                                    },
                                    "color": "#1682D4",
                                    "label": "DOI",
                                    "link": "https://sandbox.zenodo.org/uploads/141305",
                                    "logo": "zenodo",
                                    "logo_color": "#1682D4"
                                 }
                              ],
                              "label_color": "#494949",
                              "separator": 2,
                              "service": "static",
                              "style": "flat-square"
                           }
                        ],
                        "heading": "Latest Developmental Release"
                     },
                     {
                        "body": [
                           [
                              {
                                 "class": "button",
                                 "color": "#494949",
                                 "height": "23px",
                                 "style": "flat-square",
                                 "text": "\u2699\ufe0f\u2002Operating System"
                              },
                              "&nbsp;",
                              {
                                 "class": "badges",
                                 "height": "23px",
                                 "items": [
                                    {
                                       "args": {
                                          "message": "any"
                                       },
                                       "color": "#00802B",
                                       "label": "Linux (x64)",
                                       "logo": "docs/website/source/_media/logo_ext/linux.png",
                                       "logo_color": null
                                    },
                                    {
                                       "args": {
                                          "message": "any"
                                       },
                                       "color": "#00802B",
                                       "label": "Linux (arm64)",
                                       "logo": "docs/website/source/_media/logo_ext/linux.png",
                                       "logo_color": null
                                    },
                                    {
                                       "args": {
                                          "message": "any"
                                       },
                                       "color": "#00802B",
                                       "label": "macOS (x64)",
                                       "logo": "apple",
                                       "logo_color": "#000000"
                                    },
                                    {
                                       "args": {
                                          "message": "any"
                                       },
                                       "color": "#00802B",
                                       "label": "macOS (arm64)",
                                       "logo": "apple",
                                       "logo_color": "#000000"
                                    },
                                    {
                                       "args": {
                                          "message": "any"
                                       },
                                       "color": "#00802B",
                                       "label": "Windows (x64)",
                                       "logo": "https://upload.wikimedia.org/wikipedia/commons/4/44/Microsoft_logo.svg",
                                       "logo_color": null
                                    }
                                 ],
                                 "label_color": "#494949",
                                 "separator": 1,
                                 "service": "static",
                                 "style": "flat-square"
                              }
                           ],
                           [
                              {
                                 "args": {
                                    "message": "Python"
                                 },
                                 "class": "badge",
                                 "color": "#494949",
                                 "height": "23px",
                                 "label_color": "#494949",
                                 "logo": "docs/website/source/_media/logo_ext/python.svg",
                                 "logo_media_type": "svg+xml",
                                 "logo_type": "file",
                                 "service": "static",
                                 "style": "flat-square"
                              },
                              "&nbsp;",
                              {
                                 "class": "badges",
                                 "color": "#0B3C75",
                                 "height": "23px",
                                 "items": [
                                    {
                                       "args": {
                                          "message": "3.10 | 3.11 | 3.12 | 3.13"
                                       },
                                       "label": "Versions"
                                    },
                                    {
                                       "args": {
                                          "message": "any"
                                       },
                                       "color": "#00802B",
                                       "label": "Implementation"
                                    }
                                 ],
                                 "label_color": "#494949",
                                 "separator": 1,
                                 "service": "static",
                                 "style": "flat-square"
                              }
                           ],
                           [
                              {
                                 "class": "button",
                                 "color": "#494949",
                                 "height": "23px",
                                 "style": "flat-square",
                                 "text": "\ud83d\udce6\u2002Dependencies"
                              },
                              "&nbsp;",
                              {
                                 "class": "badges",
                                 "height": "23px",
                                 "items": [
                                    {
                                       "args": {
                                          "message": "any"
                                       },
                                       "color": "#00802B",
                                       "label": "pkgdata"
                                    }
                                 ],
                                 "label_color": "#494949",
                                 "separator": 1,
                                 "service": "static",
                                 "style": "flat-square"
                              }
                           ]
                        ],
                        "heading": "Requirements"
                     },
                     {
                        "body": [
                           [
                              {
                                 "class": "button",
                                 "color": "#494949",
                                 "height": "23px",
                                 "logo": "docs/website/source/_media/logo_ext/python.svg",
                                 "logo_media_type": "svg+xml",
                                 "logo_type": "file",
                                 "style": "flat-square",
                                 "text": "API"
                              },
                              "&nbsp;",
                              {
                                 "class": "badges",
                                 "color": "#0B3C75",
                                 "height": "23px",
                                 "items": [
                                    {
                                       "alt": "pypackit",
                                       "args": {
                                          "message": "pypackit"
                                       },
                                       "color": "#3776AB",
                                       "title": "Main Python API entry of the package."
                                    }
                                 ],
                                 "label": "import",
                                 "label_color": "#494949",
                                 "separator": 1,
                                 "service": "static",
                                 "style": "flat-square"
                              }
                           ],
                           [
                              {
                                 "class": "button",
                                 "color": "#494949",
                                 "height": "23px",
                                 "logo": "gnubash",
                                 "logo_color": "#4EAA25",
                                 "style": "flat-square",
                                 "text": "CLI"
                              },
                              "&nbsp;",
                              {
                                 "class": "badges",
                                 "color": "#0B3C75",
                                 "height": "23px",
                                 "items": [
                                    {
                                       "alt": "pypackit",
                                       "args": {
                                          "message": "pypackit"
                                       },
                                       "color": "#000",
                                       "title": "Main CLI entry of the package."
                                    }
                                 ],
                                 "label": "$",
                                 "label_color": "#494949",
                                 "separator": 1,
                                 "service": "static",
                                 "style": "flat-square"
                              }
                           ]
                        ],
                        "heading": "Interfaces"
                     }
                  ]
               },
               {
                  "body": [
                     {
                        "class": "table",
                        "rows": [
                           [
                              "<b>Project</b>",
                              [
                                 {
                                    "args": {
                                       "repo": "PyPackIT",
                                       "user": "RepoDynamics"
                                    },
                                    "class": "badges",
                                    "color": "#0B3C75",
                                    "height": "23px",
                                    "items": [
                                       {
                                          "endpoint": "created_at",
                                          "label": "\ud83d\uddd3\u2002Creation Date"
                                       },
                                       {
                                          "endpoint": "contributors",
                                          "label": "\ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Contributors"
                                       },
                                       {
                                          "endpoint": "language_count",
                                          "label": "\ud83d\udd20\u2002Programming Languages"
                                       },
                                       {
                                          "endpoint": "top_language",
                                          "logo": "docs/website/source/_media/logo_ext/python.svg",
                                          "logo_media_type": "svg+xml",
                                          "logo_type": "file"
                                       },
                                       {
                                          "endpoint": "repo_size",
                                          "label": "\ud83d\ude9a\u2002Repo Size"
                                       },
                                       {
                                          "endpoint": "code_size",
                                          "label": "\ud83d\ude9b\u2002Code Size"
                                       }
                                    ],
                                    "separator": 2,
                                    "service": "github",
                                    "style": "flat-square"
                                 }
                              ]
                           ],
                           [
                              "<b>Health</b>",
                              [
                                 {
                                    "args": {
                                       "repo": "PyPackIT",
                                       "user": "RepoDynamics"
                                    },
                                    "class": "badges",
                                    "height": "23px",
                                    "items": [
                                       {
                                          "args": {
                                             "vcs_name": "github"
                                          },
                                          "endpoint": "coverage",
                                          "service": "codecov"
                                       },
                                       {
                                          "args": {
                                             "package": "PyPackIT",
                                             "platform": "pypi"
                                          },
                                          "endpoint": "source_rank",
                                          "service": "librariesio"
                                       },
                                       {
                                          "args": {
                                             "package": "PyPackIT",
                                             "platform": "pypi"
                                          },
                                          "endpoint": "dependency_status",
                                          "label": "Package Dependencies",
                                          "service": "librariesio"
                                       },
                                       {
                                          "args": {
                                             "package": "",
                                             "platform": "github"
                                          },
                                          "endpoint": "dependency_status_github",
                                          "label": "Repository Dependencies",
                                          "service": "librariesio"
                                       },
                                       {
                                          "args": {
                                             "down_color": "#AF1F10",
                                             "down_message": "offline",
                                             "up_color": "#00802b",
                                             "up_message": "online",
                                             "url": "https://pypackit.repodynamics.com"
                                          },
                                          "label": "Website",
                                          "service": "website"
                                       }
                                    ],
                                    "separator": 2,
                                    "service": "github",
                                    "style": "flat-square"
                                 }
                              ]
                           ],
                           [
                              "<b>Standards</b>",
                              [
                                 {
                                    "class": "badges",
                                    "height": "23px",
                                    "items": [
                                       {
                                          "args": {
                                             "message": "Pytest"
                                          },
                                          "color": "#0A9EDC",
                                          "label": "Testing",
                                          "link": "https://github.com/pytest-dev/pytest/",
                                          "logo": "pytest",
                                          "logo_color": "#0A9EDC",
                                          "logo_type": "name"
                                       },
                                       {
                                          "args": {
                                             "message": "mypy"
                                          },
                                          "color": "#2A6DB2",
                                          "label": "Type Checking",
                                          "link": "https://github.com/python/mypy",
                                          "logo": "docs/website/source/_media/logo_ext/mypy.svg",
                                          "logo_media_type": "svg+xml",
                                          "logo_type": "file"
                                       },
                                       {
                                          "args": {
                                             "message": "Ruff"
                                          },
                                          "color": "#D7FF64",
                                          "label": "Lint",
                                          "link": "https://github.com/astral-sh/ruff",
                                          "logo": "ruff",
                                          "logo_color": "#D7FF64",
                                          "logo_type": "name"
                                       },
                                       {
                                          "args": {
                                             "message": "CodeQL"
                                          },
                                          "color": "#181717",
                                          "label": "Security",
                                          "link": "https://codeql.github.com/",
                                          "logo": "github",
                                          "logo_type": "name"
                                       },
                                       {
                                          "args": {
                                             "message": "Black"
                                          },
                                          "color": "#000",
                                          "label": "Code Style",
                                          "link": "https://github.com/psf/black",
                                          "logo": "docs/website/source/_media/logo_ext/black.png",
                                          "logo_media_type": "png",
                                          "logo_type": "file"
                                       }
                                    ],
                                    "separator": 2,
                                    "service": "static",
                                    "style": "flat-square"
                                 }
                              ]
                           ],
                           [
                              "<b>Downloads</b>",
                              [
                                 [
                                    {
                                       "args": {
                                          "package": "PyPackIT"
                                       },
                                       "class": "badges",
                                       "color": "#0B3C75",
                                       "endpoint": "downloads",
                                       "height": "23px",
                                       "items": [
                                          {
                                             "endpoint": "total_downloads",
                                             "label": "PyPI",
                                             "logo": "docs/website/source/_media/logo_ext/pypi.png",
                                             "logo_media_type": "png",
                                             "logo_type": "file",
                                             "service": "pepy"
                                          },
                                          {
                                             "args": {
                                                "period": "m"
                                             }
                                          },
                                          {
                                             "args": {
                                                "period": "w"
                                             }
                                          },
                                          {
                                             "args": {
                                                "period": "d"
                                             }
                                          }
                                       ],
                                       "label": "",
                                       "logo": "",
                                       "separator": 1,
                                       "service": "pypi",
                                       "style": "flat-square"
                                    },
                                    "&nbsp;&nbsp;",
                                    {
                                       "args": {
                                          "channel": "repodynamics",
                                          "package": "pypackit"
                                       },
                                       "class": "badge",
                                       "color": "#0B3C75",
                                       "endpoint": "downloads",
                                       "height": "23px",
                                       "label": "Conda",
                                       "logo": "anaconda",
                                       "logo_color": "#44A833",
                                       "service": "conda",
                                       "style": "flat-square"
                                    },
                                    "&nbsp;&nbsp;",
                                    {
                                       "args": {
                                          "repo": "PyPackIT",
                                          "user": "RepoDynamics"
                                       },
                                       "class": "badge",
                                       "color": "#0B3C75",
                                       "endpoint": "downloads_all_releases",
                                       "height": "23px",
                                       "label": "GitHub",
                                       "service": "github",
                                       "style": "flat-square"
                                    }
                                 ]
                              ]
                           ],
                           [
                              "<b>Users</b>",
                              [
                                 {
                                    "args": {
                                       "package": "PyPackIT",
                                       "platform": "pypi"
                                    },
                                    "class": "badges",
                                    "color": "#0B3C75",
                                    "height": "23px",
                                    "items": [
                                       {
                                          "endpoint": "dependents",
                                          "label": "Dependent Packages"
                                       },
                                       {
                                          "args": {
                                             "repo": true
                                          },
                                          "endpoint": "dependents",
                                          "label": "Dependent Repositories"
                                       }
                                    ],
                                    "separator": 2,
                                    "service": "librariesio",
                                    "style": "flat-square"
                                 }
                              ]
                           ],
                           [
                              "<b>Issues</b>",
                              [
                                 [
                                    {
                                       "args": {
                                          "kind": "issues",
                                          "label": null,
                                          "repo": "PyPackIT",
                                          "user": "RepoDynamics"
                                       },
                                       "class": "badges",
                                       "endpoint": "issue_count",
                                       "height": "23px",
                                       "items": [
                                          {
                                             "args": {
                                                "state": "open"
                                             },
                                             "color": "#AF1F10",
                                             "label": "Total"
                                          },
                                          {
                                             "args": {
                                                "state": "closed"
                                             },
                                             "color": "#00802B",
                                             "label": ""
                                          }
                                       ],
                                       "separator": 0,
                                       "service": "github",
                                       "style": "flat-square"
                                    },
                                    "&nbsp;&nbsp;",
                                    {
                                       "args": {
                                          "kind": "issues",
                                          "label": "Type: \ud83d\udc1e bug fix",
                                          "repo": "PyPackIT",
                                          "user": "RepoDynamics"
                                       },
                                       "class": "badges",
                                       "endpoint": "issue_count",
                                       "height": "23px",
                                       "items": [
                                          {
                                             "args": {
                                                "state": "open"
                                             },
                                             "color": "#AF1F10",
                                             "label": "\ud83d\udc1e\u2002Bug Fixes"
                                          },
                                          {
                                             "args": {
                                                "state": "closed"
                                             },
                                             "color": "#00802B",
                                             "label": ""
                                          }
                                       ],
                                       "separator": 0,
                                       "service": "github",
                                       "style": "flat-square"
                                    },
                                    "&nbsp;&nbsp;",
                                    {
                                       "args": {
                                          "kind": "issues",
                                          "label": "Type: \u2728 new feature",
                                          "repo": "PyPackIT",
                                          "user": "RepoDynamics"
                                       },
                                       "class": "badges",
                                       "endpoint": "issue_count",
                                       "height": "23px",
                                       "items": [
                                          {
                                             "args": {
                                                "state": "open"
                                             },
                                             "color": "#AF1F10",
                                             "label": "\u2728\u2002New Features"
                                          },
                                          {
                                             "args": {
                                                "state": "closed"
                                             },
                                             "color": "#00802B",
                                             "label": ""
                                          }
                                       ],
                                       "separator": 0,
                                       "service": "github",
                                       "style": "flat-square"
                                    },
                                    "&nbsp;&nbsp;",
                                    {
                                       "args": {
                                          "kind": "issues",
                                          "label": "Type: \ud83d\udca5 breaking change",
                                          "repo": "PyPackIT",
                                          "user": "RepoDynamics"
                                       },
                                       "class": "badges",
                                       "endpoint": "issue_count",
                                       "height": "23px",
                                       "items": [
                                          {
                                             "args": {
                                                "state": "open"
                                             },
                                             "color": "#AF1F10",
                                             "label": "\ud83d\udca5\u2002Breaking Changes"
                                          },
                                          {
                                             "args": {
                                                "state": "closed"
                                             },
                                             "color": "#00802B",
                                             "label": ""
                                          }
                                       ],
                                       "separator": 0,
                                       "service": "github",
                                       "style": "flat-square"
                                    },
                                    "&nbsp;&nbsp;"
                                 ]
                              ]
                           ],
                           [
                              "<b>PRs</b>",
                              [
                                 [
                                    {
                                       "args": {
                                          "kind": "pulls",
                                          "label": null,
                                          "repo": "PyPackIT",
                                          "user": "RepoDynamics"
                                       },
                                       "class": "badges",
                                       "endpoint": "issue_count",
                                       "height": "23px",
                                       "items": [
                                          {
                                             "args": {
                                                "state": "open"
                                             },
                                             "color": "#AF1F10",
                                             "label": "Total"
                                          },
                                          {
                                             "args": {
                                                "state": "closed"
                                             },
                                             "color": "#00802B",
                                             "label": ""
                                          }
                                       ],
                                       "separator": 0,
                                       "service": "github",
                                       "style": "flat-square"
                                    },
                                    "&nbsp;&nbsp;",
                                    {
                                       "args": {
                                          "kind": "pulls",
                                          "label": "Type: \ud83d\udc1e bug fix",
                                          "repo": "PyPackIT",
                                          "user": "RepoDynamics"
                                       },
                                       "class": "badges",
                                       "endpoint": "issue_count",
                                       "height": "23px",
                                       "items": [
                                          {
                                             "args": {
                                                "state": "open"
                                             },
                                             "color": "#AF1F10",
                                             "label": "\ud83d\udc1e\u2002Bug Fixes"
                                          },
                                          {
                                             "args": {
                                                "state": "closed"
                                             },
                                             "color": "#00802B",
                                             "label": ""
                                          }
                                       ],
                                       "separator": 0,
                                       "service": "github",
                                       "style": "flat-square"
                                    },
                                    "&nbsp;&nbsp;",
                                    {
                                       "args": {
                                          "kind": "pulls",
                                          "label": "Type: \u2728 new feature",
                                          "repo": "PyPackIT",
                                          "user": "RepoDynamics"
                                       },
                                       "class": "badges",
                                       "endpoint": "issue_count",
                                       "height": "23px",
                                       "items": [
                                          {
                                             "args": {
                                                "state": "open"
                                             },
                                             "color": "#AF1F10",
                                             "label": "\u2728\u2002New Features"
                                          },
                                          {
                                             "args": {
                                                "state": "closed"
                                             },
                                             "color": "#00802B",
                                             "label": ""
                                          }
                                       ],
                                       "separator": 0,
                                       "service": "github",
                                       "style": "flat-square"
                                    },
                                    "&nbsp;&nbsp;",
                                    {
                                       "args": {
                                          "kind": "pulls",
                                          "label": "Type: \ud83d\udca5 breaking change",
                                          "repo": "PyPackIT",
                                          "user": "RepoDynamics"
                                       },
                                       "class": "badges",
                                       "endpoint": "issue_count",
                                       "height": "23px",
                                       "items": [
                                          {
                                             "args": {
                                                "state": "open"
                                             },
                                             "color": "#AF1F10",
                                             "label": "\ud83d\udca5\u2002Breaking Changes"
                                          },
                                          {
                                             "args": {
                                                "state": "closed"
                                             },
                                             "color": "#00802B",
                                             "label": ""
                                          }
                                       ],
                                       "separator": 0,
                                       "service": "github",
                                       "style": "flat-square"
                                    },
                                    "&nbsp;&nbsp;"
                                 ]
                              ]
                           ],
                           [
                              "<b>Commits</b>",
                              [
                                 {
                                    "args": {
                                       "repo": "PyPackIT",
                                       "user": "RepoDynamics"
                                    },
                                    "class": "badges",
                                    "color": "#0B3C75",
                                    "endpoint": "commit_activity",
                                    "height": "23px",
                                    "items": [
                                       {
                                          "args": {
                                             "interval": "t"
                                          },
                                          "label": "Total",
                                          "logo": "git",
                                          "logo_color": "#F05032",
                                          "logo_type": "name"
                                       },
                                       {
                                          "args": {
                                             "interval": "y"
                                          },
                                          "label": ""
                                       },
                                       {
                                          "args": {
                                             "interval": "m"
                                          },
                                          "label": ""
                                       },
                                       {
                                          "args": {
                                             "interval": "w"
                                          },
                                          "label": ""
                                       },
                                       {
                                          "endpoint": "commits_since_latest_release",
                                          "label": "Since Latest Release"
                                       },
                                       {
                                          "endpoint": "last_commit",
                                          "label": "Last"
                                       }
                                    ],
                                    "separator": 2,
                                    "service": "github",
                                    "style": "flat-square"
                                 }
                              ]
                           ],
                           [
                              "<b>Discussions</b>",
                              [
                                 {
                                    "args": {
                                       "repo": "PyPackIT",
                                       "user": "RepoDynamics"
                                    },
                                    "class": "badges",
                                    "color": "#0B3C75",
                                    "endpoint": "discussion_search_hits",
                                    "height": "23px",
                                    "items": [
                                       {
                                          "args": {
                                             "query": "category:\"Branding\""
                                          },
                                          "label": "#\ufe0f\u20e3\u2002Branding",
                                          "title": ""
                                       },
                                       {
                                          "args": {
                                             "query": "category:\"Bug Report\""
                                          },
                                          "label": "#\ufe0f\u20e3\u2002Bug Report",
                                          "title": "Report a potential bug or problem you encountered while using the application."
                                       },
                                       {
                                          "args": {
                                             "query": "category:\"Installation\""
                                          },
                                          "label": "\ud83d\ude4f\u2002Installation",
                                          "title": "Ask questions about the installation process."
                                       },
                                       {
                                          "args": {
                                             "query": "category:\"New Features\""
                                          },
                                          "label": "\ud83d\udca1\u2002New Features",
                                          "title": "Share ideas for new features"
                                       },
                                       {
                                          "args": {
                                             "query": "category:\"Release\""
                                          },
                                          "label": "\ud83d\udce3\u2002Release",
                                          "title": "New release announcements"
                                       },
                                       {
                                          "args": {
                                             "query": "category:\"Testimonials\""
                                          },
                                          "label": "\ud83d\udcdd\u2002Testimonials",
                                          "title": "Write a testimonial for PyPackIT and share your experience with others."
                                       },
                                       {
                                          "args": {
                                             "query": "category:\"Usage\""
                                          },
                                          "label": "#\ufe0f\u20e3\u2002Usage",
                                          "title": "Ask questions about the application and its usage/behavior."
                                       }
                                    ],
                                    "separator": 2,
                                    "service": "github",
                                    "style": "flat-square"
                                 }
                              ]
                           ],
                           [
                              "<b>Community</b>",
                              [
                                 {
                                    "args": {
                                       "repo": "PyPackIT",
                                       "user": "RepoDynamics"
                                    },
                                    "class": "badges",
                                    "color": "#0B3C75",
                                    "height": "23px",
                                    "items": [
                                       {
                                          "endpoint": "forks"
                                       },
                                       {
                                          "endpoint": "stars"
                                       },
                                       {
                                          "endpoint": "watchers"
                                       }
                                    ],
                                    "logo": "github",
                                    "separator": 2,
                                    "service": "github",
                                    "style": "flat-square"
                                 }
                              ]
                           ],
                           [
                              "<b>DevOps</b>",
                              [
                                 {
                                    "args": {
                                       "repo": "PyPackIT",
                                       "user": "RepoDynamics"
                                    },
                                    "class": "badges",
                                    "height": "23px",
                                    "items": [
                                       {
                                          "args": {
                                             "workflow": "main.yaml"
                                          },
                                          "endpoint": "workflow_status",
                                          "label": "CI",
                                          "logo": "github",
                                          "logo_type": "name"
                                       },
                                       {
                                          "args": {
                                             "environment": "PyPI (PyPackIT)"
                                          },
                                          "endpoint": "deployment_status",
                                          "logo": "docs/website/source/_media/logo_ext/pypi.png",
                                          "logo_media_type": "png",
                                          "logo_type": "file"
                                       },
                                       {
                                          "args": {
                                             "environment": "PyPI (PyPackIT-TestSuite)"
                                          },
                                          "endpoint": "deployment_status",
                                          "logo": "docs/website/source/_media/logo_ext/pypi.png",
                                          "logo_media_type": "png",
                                          "logo_type": "file"
                                       },
                                       {
                                          "args": {
                                             "environment": "TestPyPI (PyPackIT)"
                                          },
                                          "endpoint": "deployment_status",
                                          "logo": "docs/website/source/_media/logo_ext/pypi.png",
                                          "logo_media_type": "png",
                                          "logo_type": "file"
                                       },
                                       {
                                          "args": {
                                             "environment": "TestPyPI (PyPackIT-TestSuite)"
                                          },
                                          "endpoint": "deployment_status",
                                          "logo": "docs/website/source/_media/logo_ext/pypi.png",
                                          "logo_media_type": "png",
                                          "logo_type": "file"
                                       },
                                       {
                                          "args": {
                                             "environment": "Zenodo"
                                          },
                                          "endpoint": "deployment_status",
                                          "logo": "zenodo",
                                          "logo_type": "name"
                                       },
                                       {
                                          "args": {
                                             "environment": "Zenodo Sandbox"
                                          },
                                          "endpoint": "deployment_status",
                                          "logo": "zenodo",
                                          "logo_type": "name"
                                       },
                                       {
                                          "args": {
                                             "environment": "GitHub Release"
                                          },
                                          "endpoint": "deployment_status",
                                          "logo": "github",
                                          "logo_type": "name"
                                       },
                                       {
                                          "args": {
                                             "environment": "GitHub Pages"
                                          },
                                          "endpoint": "deployment_status",
                                          "logo": "github",
                                          "logo_type": "name"
                                       }
                                    ],
                                    "separator": 2,
                                    "service": "github",
                                    "style": "flat-square"
                                 }
                              ]
                           ]
                        ]
                     }
                  ],
                  "heading": "Statistics"
               },
               {
                  "body": [
                     "PyPackIT was developed in [Volkamer Lab](https://volkamerlab.org/)."
                  ],
                  "heading": "Acknowledgements"
               }
            ]
         },
         "content_setting": {
            "prefix": "",
            "separator": "\n",
            "suffix": ""
         },
         "file_setting": {
            "eof_newline": true,
            "json": {
               "end_of_file_newline": true,
               "indent": 3,
               "sort_keys": true
            },
            "md": {
               "heading_number": false,
               "target": "github"
            },
            "sort_keys": true,
            "yaml": {
               "block_string": true,
               "end_of_file_newline": true,
               "mapping_indent": 2,
               "remove_top_level_indent": true,
               "sequence_indent": 4,
               "sequence_indent_offset": 2,
               "sort_keys": true
            }
         },
         "name": "Repository README",
         "path": "README.md",
         "status": "active",
         "summary": "GitHub repository [`README`](https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-readmes) file.",
         "type": "md",
         "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/README.md"
      },
      "security": {
         "content": {
            "footer": [
               {
                  "class": "thematic_break"
               },
               {
                  "class": "badges",
                  "items": [
                     {
                        "align": "left",
                        "alt": "PyPackIT: Copyright \u00a9 2023\u20132025 RepoDynamics",
                        "args": {
                           "query": "$.copyright",
                           "url": "https://raw.githubusercontent.com/RepoDynamics/PyPackIT/main/.github/.repodynamics/metadata.json"
                        },
                        "color": "rgb(0 85 0)",
                        "color_dark": "rgb(28 170 0)",
                        "label": "PyPackIT",
                        "link": "https://github.com/RepoDynamics",
                        "logo": "docs/website/source/_media/logo/favicon.svg",
                        "logo_dark": "docs/website/source/_media/logo/favicon.svg",
                        "logo_type": "file",
                        "logo_type_dark": "file",
                        "service": "dynamic",
                        "title": "PyPackIT: Copyright \u00a9 2023\u20132025 RepoDynamics"
                     },
                     {
                        "align": "right",
                        "alt": "SPDX-License-Identifier: AGPL-3.0-or-later",
                        "args": {
                           "message": "AGPL-3.0-or-later"
                        },
                        "color": "#4398CC",
                        "label": "SPDX License Identifier",
                        "link": "https://pypackit.repodynamics.com/about/license",
                        "logo": "spdx",
                        "logo_color": "#4398CC",
                        "service": "static",
                        "title": "SPDX-License-Identifier: AGPL-3.0-or-later"
                     }
                  ],
                  "style": "for-the-badge"
               }
            ],
            "heading": "Security Policy"
         },
         "content_setting": {
            "prefix": "",
            "separator": "\n",
            "suffix": ""
         },
         "file_setting": {
            "eof_newline": true,
            "json": {
               "end_of_file_newline": true,
               "indent": 3,
               "sort_keys": true
            },
            "md": {
               "heading_number": false,
               "target": "github"
            },
            "sort_keys": true,
            "yaml": {
               "block_string": true,
               "end_of_file_newline": true,
               "mapping_indent": 2,
               "remove_top_level_indent": true,
               "sequence_indent": 4,
               "sequence_indent_offset": 2,
               "sort_keys": true
            }
         },
         "name": "Security Policy",
         "path": "SECURITY.md",
         "status": "active",
         "summary": "GitHub [`SECURITY`](https://docs.github.com/en/code-security/getting-started/adding-a-security-policy-to-your-repository) community health file.",
         "type": "md",
         "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/SECURITY.md"
      },
      "support": {
         "content": {
            "footer": [
               {
                  "class": "thematic_break"
               },
               {
                  "class": "badges",
                  "items": [
                     {
                        "align": "left",
                        "alt": "PyPackIT: Copyright \u00a9 2023\u20132025 RepoDynamics",
                        "args": {
                           "query": "$.copyright",
                           "url": "https://raw.githubusercontent.com/RepoDynamics/PyPackIT/main/.github/.repodynamics/metadata.json"
                        },
                        "color": "rgb(0 85 0)",
                        "color_dark": "rgb(28 170 0)",
                        "label": "PyPackIT",
                        "link": "https://github.com/RepoDynamics",
                        "logo": "docs/website/source/_media/logo/favicon.svg",
                        "logo_dark": "docs/website/source/_media/logo/favicon.svg",
                        "logo_type": "file",
                        "logo_type_dark": "file",
                        "service": "dynamic",
                        "title": "PyPackIT: Copyright \u00a9 2023\u20132025 RepoDynamics"
                     },
                     {
                        "align": "right",
                        "alt": "SPDX-License-Identifier: AGPL-3.0-or-later",
                        "args": {
                           "message": "AGPL-3.0-or-later"
                        },
                        "color": "#4398CC",
                        "label": "SPDX License Identifier",
                        "link": "https://pypackit.repodynamics.com/about/license",
                        "logo": "spdx",
                        "logo_color": "#4398CC",
                        "service": "static",
                        "title": "SPDX-License-Identifier: AGPL-3.0-or-later"
                     }
                  ],
                  "style": "for-the-badge"
               }
            ],
            "heading": "Support Resources"
         },
         "content_setting": {
            "prefix": "",
            "separator": "\n",
            "suffix": ""
         },
         "file_setting": {
            "eof_newline": true,
            "json": {
               "end_of_file_newline": true,
               "indent": 3,
               "sort_keys": true
            },
            "md": {
               "heading_number": false,
               "target": "github"
            },
            "sort_keys": true,
            "yaml": {
               "block_string": true,
               "end_of_file_newline": true,
               "mapping_indent": 2,
               "remove_top_level_indent": true,
               "sequence_indent": 4,
               "sequence_indent_offset": 2,
               "sort_keys": true
            }
         },
         "name": "Support Resources",
         "path": "SUPPORT.md",
         "status": "active",
         "summary": "GitHub [`SUPPORT`](https://docs.github.com/en/communities/setting-up-your-project-for-healthy-contributions/adding-support-resources-to-your-project) community health file.",
         "type": "md",
         "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/SUPPORT.md"
      }
   },
   "dois": [
      {
         "description": "PyPackIT immutable record on Zenodo",
         "value": "10.5281/zenodo.14359838"
      }
   ],
   "file_binder_apt": {
      "content": "",
      "content_setting": {
         "prefix": "",
         "separator": "\n",
         "suffix": ""
      },
      "file_setting": {
         "eof_newline": true,
         "json": {
            "end_of_file_newline": true,
            "indent": 3,
            "sort_keys": true
         },
         "md": {
            "heading_number": false,
            "target": "github"
         },
         "sort_keys": true,
         "yaml": {
            "block_string": true,
            "end_of_file_newline": true,
            "mapping_indent": 2,
            "remove_top_level_indent": true,
            "sequence_indent": 4,
            "sequence_indent_offset": 2,
            "sort_keys": true
         }
      },
      "name": "Binder APT Environment File",
      "path": ".devcontainer/config/binder/apt.txt",
      "status": "inactive",
      "summary": "[`apt.txt`](https://repo2docker.readthedocs.io/en/latest/config_files.html#apt-txt-install-packages-with-apt-get) file for the Binder configuration.",
      "type": "txt",
      "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/config/binder/apt.txt"
   },
   "file_binder_conda": {
      "content": "dependencies:\n  - conda-forge::coverage ==7.6.12\n  - conda-forge::pip\n  - conda-forge::pytest ==8.3.5\n  - conda-forge::pytest-cov ==6.0.0\n  - conda-forge::pytest-html ==4.1.1\n  - conda-forge::python 3.10\n  - repodynamics::pkgdata\n  - repodynamics::pkgdata\n",
      "content_setting": {
         "prefix": "",
         "separator": "\n",
         "suffix": ""
      },
      "file_setting": {
         "eof_newline": true,
         "json": {
            "end_of_file_newline": true,
            "indent": 3,
            "sort_keys": true
         },
         "md": {
            "heading_number": false,
            "target": "github"
         },
         "sort_keys": true,
         "yaml": {
            "block_string": true,
            "end_of_file_newline": true,
            "mapping_indent": 2,
            "remove_top_level_indent": true,
            "sequence_indent": 4,
            "sequence_indent_offset": 2,
            "sort_keys": true
         }
      },
      "name": "Binder Conda Environment File",
      "path": ".devcontainer/config/binder/environment.yml",
      "status": "active",
      "summary": "[`environment.yml`](https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment) file for the Binder configuration.",
      "type": "txt",
      "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/config/binder/environment.yml"
   },
   "file_binder_postbuild": {
      "content": "python -m pip install --no-deps --editable pkg --editable test\n",
      "content_setting": {
         "prefix": "",
         "separator": "\n",
         "suffix": ""
      },
      "file_setting": {
         "eof_newline": true,
         "json": {
            "end_of_file_newline": true,
            "indent": 3,
            "sort_keys": true
         },
         "md": {
            "heading_number": false,
            "target": "github"
         },
         "sort_keys": true,
         "yaml": {
            "block_string": true,
            "end_of_file_newline": true,
            "mapping_indent": 2,
            "remove_top_level_indent": true,
            "sequence_indent": 4,
            "sequence_indent_offset": 2,
            "sort_keys": true
         }
      },
      "name": "Binder Post Build Environment File",
      "path": ".devcontainer/config/binder/postBuild",
      "status": "active",
      "summary": "[`postBuild`](https://repo2docker.readthedocs.io/en/latest/config_files.html#postbuild-run-code-after-installing-the-environment) file for the Binder configuration.",
      "type": "txt",
      "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.devcontainer/config/binder/postBuild"
   },
   "file_citation_cff": {
      "content": {
         "abstract": "PyPackIT [\u02c8pa\u026a\u02ccp\u00e6k\u026at] is a comprehensive <strong>cloud-based automation tool</strong> for production of <abbr title=\"Findable, Accessible, Interoperable, and Reusable\">FAIR</abbr> and professional applications on <strong>GitHub</strong>, in accordance with the latest software engineering best practices and standards. PyPackIT is a ready-to-use software suite that streamlines the initiation, configuration, development, publication, management, and maintenance of high-quality <strong>Python applications</strong>. By taking charge of repetitive tasks and automatically enforcing best practices throughout the software development life cycle, PyPackIT enables users to solely focus on the creative aspects of their projects, while improving quality and lowering production costs. Using latest tools and methodologies, PyPackIT offers a robust project infrastructure, including a build-ready Python <strong>package skeleton</strong>, a fully operational <strong>test suite</strong>, an automated <strong>documentation website</strong>, and a comprehensive <strong>control center</strong> according to <strong>Infrastructure-as-Code</strong> and <strong>Continuous Configuration Automation</strong> practices to enable dynamic project management and customization. PyPackIT establishes a complete <strong>cloud development</strong> environment on GitHub, integrating with its version control system, issue tracker,and pull-based model to provide a fully <strong>automated software development workflow</strong> with <strong>issue management</strong>, <strong>branching model</strong>, and <strong>versioning scheme</strong>. Leveraging <strong>GitHub Actions</strong>, PyPackIT implements a cloud-native Agile development process using <strong>Continuous software engineering</strong>, <strong>containerization</strong>, and <strong>DevOps</strong> methodologies, with a full set of <strong>Continuous Integration</strong>, Deployment, Testing, Refactoring, and Maintenance pipelines. PyPackIT is a <strong>free</strong> and <strong>open-source</strong> software suite that readily integrates with both new and existing projects to ensure their long-term sustainability and high quality, enabling software projects to rapidly implement their ideas and easily maintain their products.",
         "authors": [
            {
               "city": "Berlin",
               "email": "armiariam@gmail.com",
               "family-names": "Ariamajd",
               "given-names": "Armin",
               "orcid": "https://orcid.org/0000-0003-1563-6987"
            }
         ],
         "cff-version": "1.2.0",
         "contact": [
            {
               "city": "Berlin",
               "email": "armiariam@gmail.com",
               "family-names": "Ariamajd",
               "given-names": "Armin",
               "orcid": "https://orcid.org/0000-0003-1563-6987"
            }
         ],
         "date-released": "2025-04-14",
         "identifiers": [
            {
               "description": "Persistent DOI of the project as a whole.",
               "type": "doi",
               "value": "10.5281/zenodo.14359838"
            }
         ],
         "keywords": [
            "Automation",
            "Cloud-Native Development",
            "Continuous Integration",
            "Continuous Delivery",
            "Continuous Deployment",
            "Continuous Testing",
            "Continuous Refactoring",
            "Continuous Configuration Automation",
            "Continuous Software Engineering",
            "DevOps",
            "Infrastructure as Code",
            "Agile",
            "Dynamic Project Management",
            "Template Repository",
            "Python Package Skeleton",
            "Sphinx Website",
            "Testing Infrastructure",
            "FAIR Software",
            "GitHub Actions",
            "Bot"
         ],
         "license": [
            "AGPL-3.0-or-later"
         ],
         "message": "Please cite PyPackIT using the following references.",
         "repository-artifact": "https://github.com/RepoDynamics/PyPackIT/releases",
         "repository-code": "https://github.com/RepoDynamics/PyPackIT",
         "title": "PyPackIT: Cloud-Native Continuous Software Engineering Automation for Python Packages on GitHub",
         "type": "software",
         "url": "https://pypackit.repodynamics.com",
         "version": "0.0.0"
      },
      "content_setting": {
         "filter": {
            "remove_nulls": {
               "function": "lambda value: value is None",
               "inplace": true,
               "jsonpath": "$.*"
            }
         },
         "order": [
            "message",
            "preferred-citation",
            "doi",
            "commit",
            "version",
            "date-released",
            "license",
            "license-url",
            "url",
            "repository",
            "repository-artifact",
            "repository-code",
            "identifiers",
            "type",
            "title",
            "authors",
            "contact",
            "abstract",
            "keywords",
            "references",
            "cff-version"
         ],
         "prefix": "",
         "separator": "\n",
         "suffix": ""
      },
      "description": "Citation file for the project\nin the [Citation File Format](https://citation-file-format.github.io/) (CFF).\nCurrent schema version is [CFF v1.2.0](https://github.com/citation-file-format/citation-file-format/blob/main/schema-guide.md).\n",
      "file_setting": {
         "eof_newline": true,
         "json": {
            "end_of_file_newline": true,
            "indent": 3,
            "sort_keys": true
         },
         "md": {
            "heading_number": false,
            "target": "github"
         },
         "sort_keys": true,
         "yaml": {
            "block_string": true,
            "end_of_file_newline": true,
            "mapping_indent": 2,
            "remove_top_level_indent": true,
            "sequence_indent": 4,
            "sequence_indent_offset": 2,
            "sort_keys": true
         }
      },
      "jsonschema": {
         "fill_defaults": false,
         "schema": {
            "$id": "https://citation-file-format.github.io/1.2.0/schema.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "additionalProperties": false,
            "definitions": {
               "address": {
                  "description": "An address.",
                  "minLength": 1,
                  "type": "string"
               },
               "alias": {
                  "description": "An alias.",
                  "minLength": 1,
                  "type": "string"
               },
               "city": {
                  "description": "A city",
                  "minLength": 1,
                  "type": "string"
               },
               "commit": {
                  "description": "The (e.g., Git) commit hash or (e.g., Subversion) revision number of the work.",
                  "minLength": 1,
                  "type": "string"
               },
               "country": {
                  "$comment": "ISO 3166-1 alpha-2 codes can be found at https://en.wikipedia.org/wiki/ISO_3166-1",
                  "description": "The ISO 3166-1 alpha-2 country code for a country.",
                  "enum": [
                     "AD",
                     "AE",
                     "AF",
                     "AG",
                     "AI",
                     "AL",
                     "AM",
                     "AO",
                     "AQ",
                     "AR",
                     "AS",
                     "AT",
                     "AU",
                     "AW",
                     "AX",
                     "AZ",
                     "BA",
                     "BB",
                     "BD",
                     "BE",
                     "BF",
                     "BG",
                     "BH",
                     "BI",
                     "BJ",
                     "BL",
                     "BM",
                     "BN",
                     "BO",
                     "BQ",
                     "BR",
                     "BS",
                     "BT",
                     "BV",
                     "BW",
                     "BY",
                     "BZ",
                     "CA",
                     "CC",
                     "CD",
                     "CF",
                     "CG",
                     "CH",
                     "CI",
                     "CK",
                     "CL",
                     "CM",
                     "CN",
                     "CO",
                     "CR",
                     "CU",
                     "CV",
                     "CW",
                     "CX",
                     "CY",
                     "CZ",
                     "DE",
                     "DJ",
                     "DK",
                     "DM",
                     "DO",
                     "DZ",
                     "EC",
                     "EE",
                     "EG",
                     "EH",
                     "ER",
                     "ES",
                     "ET",
                     "FI",
                     "FJ",
                     "FK",
                     "FM",
                     "FO",
                     "FR",
                     "GA",
                     "GB",
                     "GD",
                     "GE",
                     "GF",
                     "GG",
                     "GH",
                     "GI",
                     "GL",
                     "GM",
                     "GN",
                     "GP",
                     "GQ",
                     "GR",
                     "GS",
                     "GT",
                     "GU",
                     "GW",
                     "GY",
                     "HK",
                     "HM",
                     "HN",
                     "HR",
                     "HT",
                     "HU",
                     "ID",
                     "IE",
                     "IL",
                     "IM",
                     "IN",
                     "IO",
                     "IQ",
                     "IR",
                     "IS",
                     "IT",
                     "JE",
                     "JM",
                     "JO",
                     "JP",
                     "KE",
                     "KG",
                     "KH",
                     "KI",
                     "KM",
                     "KN",
                     "KP",
                     "KR",
                     "KW",
                     "KY",
                     "KZ",
                     "LA",
                     "LB",
                     "LC",
                     "LI",
                     "LK",
                     "LR",
                     "LS",
                     "LT",
                     "LU",
                     "LV",
                     "LY",
                     "MA",
                     "MC",
                     "MD",
                     "ME",
                     "MF",
                     "MG",
                     "MH",
                     "MK",
                     "ML",
                     "MM",
                     "MN",
                     "MO",
                     "MP",
                     "MQ",
                     "MR",
                     "MS",
                     "MT",
                     "MU",
                     "MV",
                     "MW",
                     "MX",
                     "MY",
                     "MZ",
                     "NA",
                     "NC",
                     "NE",
                     "NF",
                     "NG",
                     "NI",
                     "NL",
                     "NO",
                     "NP",
                     "NR",
                     "NU",
                     "NZ",
                     "OM",
                     "PA",
                     "PE",
                     "PF",
                     "PG",
                     "PH",
                     "PK",
                     "PL",
                     "PM",
                     "PN",
                     "PR",
                     "PS",
                     "PT",
                     "PW",
                     "PY",
                     "QA",
                     "RE",
                     "RO",
                     "RS",
                     "RU",
                     "RW",
                     "SA",
                     "SB",
                     "SC",
                     "SD",
                     "SE",
                     "SG",
                     "SH",
                     "SI",
                     "SJ",
                     "SK",
                     "SL",
                     "SM",
                     "SN",
                     "SO",
                     "SR",
                     "SS",
                     "ST",
                     "SV",
                     "SX",
                     "SY",
                     "SZ",
                     "TC",
                     "TD",
                     "TF",
                     "TG",
                     "TH",
                     "TJ",
                     "TK",
                     "TL",
                     "TM",
                     "TN",
                     "TO",
                     "TR",
                     "TT",
                     "TV",
                     "TW",
                     "TZ",
                     "UA",
                     "UG",
                     "UM",
                     "US",
                     "UY",
                     "UZ",
                     "VA",
                     "VC",
                     "VE",
                     "VG",
                     "VI",
                     "VN",
                     "VU",
                     "WF",
                     "WS",
                     "YE",
                     "YT",
                     "ZA",
                     "ZM",
                     "ZW"
                  ],
                  "type": "string"
               },
               "date": {
                  "$comment": "Note to tool implementers: it is necessary to cast YAML 'date' objects to string objects when validating against this schema.",
                  "examples": [
                     "1900-01-01",
                     "2020-12-31"
                  ],
                  "format": "date",
                  "pattern": "^[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                  "type": "string"
               },
               "doi": {
                  "description": "The DOI of the work (i.e., 10.5281/zenodo.1003150, not the resolver URL http://doi.org/10.5281/zenodo.1003150).",
                  "examples": [
                     "10.5281/zenodo.1003150"
                  ],
                  "pattern": "^10\\.\\d{4,9}(\\.\\d+)?/[A-Za-z0-9:/_;\\-\\.\\(\\)\\[\\]\\\\]+$",
                  "type": "string"
               },
               "email": {
                  "description": "An email address.",
                  "pattern": "^[\\S]+@[\\S]+\\.[\\S]{2,}$",
                  "type": "string"
               },
               "entity": {
                  "additionalProperties": false,
                  "description": "An entity, i.e., an institution, team, research group, company, conference, etc., as opposed to a single natural person.",
                  "properties": {
                     "address": {
                        "$ref": "#/definitions/address",
                        "description": "The entity's address."
                     },
                     "alias": {
                        "$ref": "#/definitions/alias",
                        "description": "The entity's alias."
                     },
                     "city": {
                        "$ref": "#/definitions/city",
                        "description": "The entity's city."
                     },
                     "country": {
                        "$ref": "#/definitions/country",
                        "description": "The entity's country."
                     },
                     "date-end": {
                        "$ref": "#/definitions/date",
                        "description": "The entity's ending date, e.g., when the entity is a conference."
                     },
                     "date-start": {
                        "$ref": "#/definitions/date",
                        "description": "The entity's starting date, e.g., when the entity is a conference."
                     },
                     "email": {
                        "$ref": "#/definitions/email",
                        "description": "The entity's email address."
                     },
                     "fax": {
                        "$ref": "#/definitions/fax",
                        "description": "The entity's fax number."
                     },
                     "location": {
                        "description": "The entity's location, e.g., when the entity is a conference.",
                        "minLength": 1,
                        "type": "string"
                     },
                     "name": {
                        "description": "The entity's name.",
                        "minLength": 1,
                        "type": "string"
                     },
                     "orcid": {
                        "$ref": "#/definitions/orcid",
                        "description": "The entity's orcid."
                     },
                     "post-code": {
                        "$ref": "#/definitions/post-code",
                        "description": "The entity's post code."
                     },
                     "region": {
                        "$ref": "#/definitions/region",
                        "description": "The entity's region."
                     },
                     "tel": {
                        "$ref": "#/definitions/tel",
                        "description": "The entity's telephone number."
                     },
                     "website": {
                        "$ref": "#/definitions/url",
                        "description": "The entity's website."
                     }
                  },
                  "required": [
                     "name"
                  ],
                  "type": "object"
               },
               "fax": {
                  "description": "A fax number.",
                  "minLength": 1,
                  "type": "string"
               },
               "identifier": {
                  "anyOf": [
                     {
                        "additionalProperties": false,
                        "properties": {
                           "description": {
                              "$ref": "#/definitions/identifier-description"
                           },
                           "type": {
                              "enum": [
                                 "doi"
                              ],
                              "type": "string"
                           },
                           "value": {
                              "$ref": "#/definitions/doi"
                           }
                        },
                        "required": [
                           "type",
                           "value"
                        ],
                        "type": "object"
                     },
                     {
                        "additionalProperties": false,
                        "properties": {
                           "description": {
                              "$ref": "#/definitions/identifier-description"
                           },
                           "type": {
                              "enum": [
                                 "url"
                              ],
                              "type": "string"
                           },
                           "value": {
                              "$ref": "#/definitions/url"
                           }
                        },
                        "required": [
                           "type",
                           "value"
                        ],
                        "type": "object"
                     },
                     {
                        "additionalProperties": false,
                        "properties": {
                           "description": {
                              "$ref": "#/definitions/identifier-description"
                           },
                           "type": {
                              "enum": [
                                 "swh"
                              ],
                              "type": "string"
                           },
                           "value": {
                              "$ref": "#/definitions/swh-identifier"
                           }
                        },
                        "required": [
                           "type",
                           "value"
                        ],
                        "type": "object"
                     },
                     {
                        "additionalProperties": false,
                        "properties": {
                           "description": {
                              "$ref": "#/definitions/identifier-description"
                           },
                           "type": {
                              "enum": [
                                 "other"
                              ],
                              "type": "string"
                           },
                           "value": {
                              "minLength": 1,
                              "type": "string"
                           }
                        },
                        "required": [
                           "type",
                           "value"
                        ],
                        "type": "object"
                     }
                  ],
                  "description": "An identifier for a work."
               },
               "identifier-description": {
                  "description": "A description for a specific identifier value.",
                  "examples": [
                     "The version DOI for this version, which has a relation childOf with the concept DOI specified in the doi field in the root of this file.",
                     "The identifier provided by Archival Repository, which points to this version of the software."
                  ],
                  "minLength": 1,
                  "type": "string"
               },
               "license": {
                  "description": "An SPDX license identifier.",
                  "oneOf": [
                     {
                        "$ref": "#/definitions/license-enum",
                        "examples": [
                           "Apache-2.0",
                           "MIT"
                        ]
                     },
                     {
                        "$comment": "When there are multiple licenses, it is assumed their relationship is OR, not AND",
                        "examples": [
                           [
                              "Apache-2.0",
                              "MIT"
                           ],
                           [
                              "GPL-3.0",
                              "GPL-3.0-or-later"
                           ]
                        ],
                        "items": {
                           "$ref": "#/definitions/license-enum"
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                     }
                  ]
               },
               "license-enum": {
                  "$comment": "Use https://github.com/citation-file-format/get-spdx-licenses to update this enum in the future",
                  "description": "SPDX license list; releaseDate=2021-05-14; source=https://raw.githubusercontent.com/spdx/license-list-data/master/json/licenses.json",
                  "enum": [
                     "0BSD",
                     "AAL",
                     "Abstyles",
                     "Adobe-2006",
                     "Adobe-Glyph",
                     "ADSL",
                     "AFL-1.1",
                     "AFL-1.2",
                     "AFL-2.0",
                     "AFL-2.1",
                     "AFL-3.0",
                     "Afmparse",
                     "AGPL-1.0",
                     "AGPL-1.0-only",
                     "AGPL-1.0-or-later",
                     "AGPL-3.0",
                     "AGPL-3.0-only",
                     "AGPL-3.0-or-later",
                     "Aladdin",
                     "AMDPLPA",
                     "AML",
                     "AMPAS",
                     "ANTLR-PD",
                     "ANTLR-PD-fallback",
                     "Apache-1.0",
                     "Apache-1.1",
                     "Apache-2.0",
                     "APAFML",
                     "APL-1.0",
                     "APSL-1.0",
                     "APSL-1.1",
                     "APSL-1.2",
                     "APSL-2.0",
                     "Artistic-1.0",
                     "Artistic-1.0-cl8",
                     "Artistic-1.0-Perl",
                     "Artistic-2.0",
                     "Bahyph",
                     "Barr",
                     "Beerware",
                     "BitTorrent-1.0",
                     "BitTorrent-1.1",
                     "blessing",
                     "BlueOak-1.0.0",
                     "Borceux",
                     "BSD-1-Clause",
                     "BSD-2-Clause",
                     "BSD-2-Clause-FreeBSD",
                     "BSD-2-Clause-NetBSD",
                     "BSD-2-Clause-Patent",
                     "BSD-2-Clause-Views",
                     "BSD-3-Clause",
                     "BSD-3-Clause-Attribution",
                     "BSD-3-Clause-Clear",
                     "BSD-3-Clause-LBNL",
                     "BSD-3-Clause-Modification",
                     "BSD-3-Clause-No-Nuclear-License",
                     "BSD-3-Clause-No-Nuclear-License-2014",
                     "BSD-3-Clause-No-Nuclear-Warranty",
                     "BSD-3-Clause-Open-MPI",
                     "BSD-4-Clause",
                     "BSD-4-Clause-Shortened",
                     "BSD-4-Clause-UC",
                     "BSD-Protection",
                     "BSD-Source-Code",
                     "BSL-1.0",
                     "BUSL-1.1",
                     "bzip2-1.0.5",
                     "bzip2-1.0.6",
                     "C-UDA-1.0",
                     "CAL-1.0",
                     "CAL-1.0-Combined-Work-Exception",
                     "Caldera",
                     "CATOSL-1.1",
                     "CC-BY-1.0",
                     "CC-BY-2.0",
                     "CC-BY-2.5",
                     "CC-BY-3.0",
                     "CC-BY-3.0-AT",
                     "CC-BY-3.0-US",
                     "CC-BY-4.0",
                     "CC-BY-NC-1.0",
                     "CC-BY-NC-2.0",
                     "CC-BY-NC-2.5",
                     "CC-BY-NC-3.0",
                     "CC-BY-NC-4.0",
                     "CC-BY-NC-ND-1.0",
                     "CC-BY-NC-ND-2.0",
                     "CC-BY-NC-ND-2.5",
                     "CC-BY-NC-ND-3.0",
                     "CC-BY-NC-ND-3.0-IGO",
                     "CC-BY-NC-ND-4.0",
                     "CC-BY-NC-SA-1.0",
                     "CC-BY-NC-SA-2.0",
                     "CC-BY-NC-SA-2.5",
                     "CC-BY-NC-SA-3.0",
                     "CC-BY-NC-SA-4.0",
                     "CC-BY-ND-1.0",
                     "CC-BY-ND-2.0",
                     "CC-BY-ND-2.5",
                     "CC-BY-ND-3.0",
                     "CC-BY-ND-4.0",
                     "CC-BY-SA-1.0",
                     "CC-BY-SA-2.0",
                     "CC-BY-SA-2.0-UK",
                     "CC-BY-SA-2.1-JP",
                     "CC-BY-SA-2.5",
                     "CC-BY-SA-3.0",
                     "CC-BY-SA-3.0-AT",
                     "CC-BY-SA-4.0",
                     "CC-PDDC",
                     "CC0-1.0",
                     "CDDL-1.0",
                     "CDDL-1.1",
                     "CDL-1.0",
                     "CDLA-Permissive-1.0",
                     "CDLA-Sharing-1.0",
                     "CECILL-1.0",
                     "CECILL-1.1",
                     "CECILL-2.0",
                     "CECILL-2.1",
                     "CECILL-B",
                     "CECILL-C",
                     "CERN-OHL-1.1",
                     "CERN-OHL-1.2",
                     "CERN-OHL-P-2.0",
                     "CERN-OHL-S-2.0",
                     "CERN-OHL-W-2.0",
                     "ClArtistic",
                     "CNRI-Jython",
                     "CNRI-Python",
                     "CNRI-Python-GPL-Compatible",
                     "Condor-1.1",
                     "copyleft-next-0.3.0",
                     "copyleft-next-0.3.1",
                     "CPAL-1.0",
                     "CPL-1.0",
                     "CPOL-1.02",
                     "Crossword",
                     "CrystalStacker",
                     "CUA-OPL-1.0",
                     "Cube",
                     "curl",
                     "D-FSL-1.0",
                     "diffmark",
                     "DOC",
                     "Dotseqn",
                     "DRL-1.0",
                     "DSDP",
                     "dvipdfm",
                     "ECL-1.0",
                     "ECL-2.0",
                     "eCos-2.0",
                     "EFL-1.0",
                     "EFL-2.0",
                     "eGenix",
                     "Entessa",
                     "EPICS",
                     "EPL-1.0",
                     "EPL-2.0",
                     "ErlPL-1.1",
                     "etalab-2.0",
                     "EUDatagrid",
                     "EUPL-1.0",
                     "EUPL-1.1",
                     "EUPL-1.2",
                     "Eurosym",
                     "Fair",
                     "Frameworx-1.0",
                     "FreeBSD-DOC",
                     "FreeImage",
                     "FSFAP",
                     "FSFUL",
                     "FSFULLR",
                     "FTL",
                     "GD",
                     "GFDL-1.1",
                     "GFDL-1.1-invariants-only",
                     "GFDL-1.1-invariants-or-later",
                     "GFDL-1.1-no-invariants-only",
                     "GFDL-1.1-no-invariants-or-later",
                     "GFDL-1.1-only",
                     "GFDL-1.1-or-later",
                     "GFDL-1.2",
                     "GFDL-1.2-invariants-only",
                     "GFDL-1.2-invariants-or-later",
                     "GFDL-1.2-no-invariants-only",
                     "GFDL-1.2-no-invariants-or-later",
                     "GFDL-1.2-only",
                     "GFDL-1.2-or-later",
                     "GFDL-1.3",
                     "GFDL-1.3-invariants-only",
                     "GFDL-1.3-invariants-or-later",
                     "GFDL-1.3-no-invariants-only",
                     "GFDL-1.3-no-invariants-or-later",
                     "GFDL-1.3-only",
                     "GFDL-1.3-or-later",
                     "Giftware",
                     "GL2PS",
                     "Glide",
                     "Glulxe",
                     "GLWTPL",
                     "gnuplot",
                     "GPL-1.0",
                     "GPL-1.0-only",
                     "GPL-1.0-or-later",
                     "GPL-1.0+",
                     "GPL-2.0",
                     "GPL-2.0-only",
                     "GPL-2.0-or-later",
                     "GPL-2.0-with-autoconf-exception",
                     "GPL-2.0-with-bison-exception",
                     "GPL-2.0-with-classpath-exception",
                     "GPL-2.0-with-font-exception",
                     "GPL-2.0-with-GCC-exception",
                     "GPL-2.0+",
                     "GPL-3.0",
                     "GPL-3.0-only",
                     "GPL-3.0-or-later",
                     "GPL-3.0-with-autoconf-exception",
                     "GPL-3.0-with-GCC-exception",
                     "GPL-3.0+",
                     "gSOAP-1.3b",
                     "HaskellReport",
                     "Hippocratic-2.1",
                     "HPND",
                     "HPND-sell-variant",
                     "HTMLTIDY",
                     "IBM-pibs",
                     "ICU",
                     "IJG",
                     "ImageMagick",
                     "iMatix",
                     "Imlib2",
                     "Info-ZIP",
                     "Intel",
                     "Intel-ACPI",
                     "Interbase-1.0",
                     "IPA",
                     "IPL-1.0",
                     "ISC",
                     "JasPer-2.0",
                     "JPNIC",
                     "JSON",
                     "LAL-1.2",
                     "LAL-1.3",
                     "Latex2e",
                     "Leptonica",
                     "LGPL-2.0",
                     "LGPL-2.0-only",
                     "LGPL-2.0-or-later",
                     "LGPL-2.0+",
                     "LGPL-2.1",
                     "LGPL-2.1-only",
                     "LGPL-2.1-or-later",
                     "LGPL-2.1+",
                     "LGPL-3.0",
                     "LGPL-3.0-only",
                     "LGPL-3.0-or-later",
                     "LGPL-3.0+",
                     "LGPLLR",
                     "Libpng",
                     "libpng-2.0",
                     "libselinux-1.0",
                     "libtiff",
                     "LiLiQ-P-1.1",
                     "LiLiQ-R-1.1",
                     "LiLiQ-Rplus-1.1",
                     "Linux-OpenIB",
                     "LPL-1.0",
                     "LPL-1.02",
                     "LPPL-1.0",
                     "LPPL-1.1",
                     "LPPL-1.2",
                     "LPPL-1.3a",
                     "LPPL-1.3c",
                     "MakeIndex",
                     "MirOS",
                     "MIT",
                     "MIT-0",
                     "MIT-advertising",
                     "MIT-CMU",
                     "MIT-enna",
                     "MIT-feh",
                     "MIT-Modern-Variant",
                     "MIT-open-group",
                     "MITNFA",
                     "Motosoto",
                     "mpich2",
                     "MPL-1.0",
                     "MPL-1.1",
                     "MPL-2.0",
                     "MPL-2.0-no-copyleft-exception",
                     "MS-PL",
                     "MS-RL",
                     "MTLL",
                     "MulanPSL-1.0",
                     "MulanPSL-2.0",
                     "Multics",
                     "Mup",
                     "NAIST-2003",
                     "NASA-1.3",
                     "Naumen",
                     "NBPL-1.0",
                     "NCGL-UK-2.0",
                     "NCSA",
                     "Net-SNMP",
                     "NetCDF",
                     "Newsletr",
                     "NGPL",
                     "NIST-PD",
                     "NIST-PD-fallback",
                     "NLOD-1.0",
                     "NLPL",
                     "Nokia",
                     "NOSL",
                     "Noweb",
                     "NPL-1.0",
                     "NPL-1.1",
                     "NPOSL-3.0",
                     "NRL",
                     "NTP",
                     "NTP-0",
                     "Nunit",
                     "O-UDA-1.0",
                     "OCCT-PL",
                     "OCLC-2.0",
                     "ODbL-1.0",
                     "ODC-By-1.0",
                     "OFL-1.0",
                     "OFL-1.0-no-RFN",
                     "OFL-1.0-RFN",
                     "OFL-1.1",
                     "OFL-1.1-no-RFN",
                     "OFL-1.1-RFN",
                     "OGC-1.0",
                     "OGDL-Taiwan-1.0",
                     "OGL-Canada-2.0",
                     "OGL-UK-1.0",
                     "OGL-UK-2.0",
                     "OGL-UK-3.0",
                     "OGTSL",
                     "OLDAP-1.1",
                     "OLDAP-1.2",
                     "OLDAP-1.3",
                     "OLDAP-1.4",
                     "OLDAP-2.0",
                     "OLDAP-2.0.1",
                     "OLDAP-2.1",
                     "OLDAP-2.2",
                     "OLDAP-2.2.1",
                     "OLDAP-2.2.2",
                     "OLDAP-2.3",
                     "OLDAP-2.4",
                     "OLDAP-2.5",
                     "OLDAP-2.6",
                     "OLDAP-2.7",
                     "OLDAP-2.8",
                     "OML",
                     "OpenSSL",
                     "OPL-1.0",
                     "OSET-PL-2.1",
                     "OSL-1.0",
                     "OSL-1.1",
                     "OSL-2.0",
                     "OSL-2.1",
                     "OSL-3.0",
                     "Parity-6.0.0",
                     "Parity-7.0.0",
                     "PDDL-1.0",
                     "PHP-3.0",
                     "PHP-3.01",
                     "Plexus",
                     "PolyForm-Noncommercial-1.0.0",
                     "PolyForm-Small-Business-1.0.0",
                     "PostgreSQL",
                     "PSF-2.0",
                     "psfrag",
                     "psutils",
                     "Python-2.0",
                     "Qhull",
                     "QPL-1.0",
                     "Rdisc",
                     "RHeCos-1.1",
                     "RPL-1.1",
                     "RPL-1.5",
                     "RPSL-1.0",
                     "RSA-MD",
                     "RSCPL",
                     "Ruby",
                     "SAX-PD",
                     "Saxpath",
                     "SCEA",
                     "Sendmail",
                     "Sendmail-8.23",
                     "SGI-B-1.0",
                     "SGI-B-1.1",
                     "SGI-B-2.0",
                     "SHL-0.5",
                     "SHL-0.51",
                     "SimPL-2.0",
                     "SISSL",
                     "SISSL-1.2",
                     "Sleepycat",
                     "SMLNJ",
                     "SMPPL",
                     "SNIA",
                     "Spencer-86",
                     "Spencer-94",
                     "Spencer-99",
                     "SPL-1.0",
                     "SSH-OpenSSH",
                     "SSH-short",
                     "SSPL-1.0",
                     "StandardML-NJ",
                     "SugarCRM-1.1.3",
                     "SWL",
                     "TAPR-OHL-1.0",
                     "TCL",
                     "TCP-wrappers",
                     "TMate",
                     "TORQUE-1.1",
                     "TOSL",
                     "TU-Berlin-1.0",
                     "TU-Berlin-2.0",
                     "UCL-1.0",
                     "Unicode-DFS-2015",
                     "Unicode-DFS-2016",
                     "Unicode-TOU",
                     "Unlicense",
                     "UPL-1.0",
                     "Vim",
                     "VOSTROM",
                     "VSL-1.0",
                     "W3C",
                     "W3C-19980720",
                     "W3C-20150513",
                     "Watcom-1.0",
                     "Wsuipa",
                     "WTFPL",
                     "wxWindows",
                     "X11",
                     "Xerox",
                     "XFree86-1.1",
                     "xinetd",
                     "Xnet",
                     "xpp",
                     "XSkat",
                     "YPL-1.0",
                     "YPL-1.1",
                     "Zed",
                     "Zend-2.0",
                     "Zimbra-1.3",
                     "Zimbra-1.4",
                     "Zlib",
                     "zlib-acknowledgement",
                     "ZPL-1.1",
                     "ZPL-2.0",
                     "ZPL-2.1"
                  ],
                  "type": "string"
               },
               "orcid": {
                  "description": "Identifier for an author, see https://orcid.org.",
                  "format": "uri",
                  "pattern": "https://orcid\\.org/[0-9]{4}-[0-9]{4}-[0-9]{4}-[0-9]{3}[0-9X]{1}",
                  "type": "string"
               },
               "person": {
                  "additionalProperties": false,
                  "description": "A person.",
                  "properties": {
                     "address": {
                        "$ref": "#/definitions/address",
                        "description": "The person's address."
                     },
                     "affiliation": {
                        "description": "The person's affilitation.",
                        "minLength": 1,
                        "type": "string"
                     },
                     "alias": {
                        "$ref": "#/definitions/alias",
                        "description": "The person's alias."
                     },
                     "city": {
                        "$ref": "#/definitions/city",
                        "description": "The person's city."
                     },
                     "country": {
                        "$ref": "#/definitions/country",
                        "description": "The person's country."
                     },
                     "email": {
                        "$ref": "#/definitions/email",
                        "description": "The person's email address."
                     },
                     "family-names": {
                        "description": "The person's family names.",
                        "minLength": 1,
                        "type": "string"
                     },
                     "fax": {
                        "$ref": "#/definitions/fax",
                        "description": "The person's fax number."
                     },
                     "given-names": {
                        "description": "The person's given names.",
                        "minLength": 1,
                        "type": "string"
                     },
                     "name-particle": {
                        "description": "The person's name particle, e.g., a nobiliary particle or a preposition meaning 'of' or 'from' (for example 'von' in 'Alexander von Humboldt').",
                        "examples": [
                           "von"
                        ],
                        "minLength": 1,
                        "type": "string"
                     },
                     "name-suffix": {
                        "description": "The person's name-suffix, e.g. 'Jr.' for Sammy Davis Jr. or 'III' for Frank Edwin Wright III.",
                        "examples": [
                           "Jr.",
                           "III"
                        ],
                        "minLength": 1,
                        "type": "string"
                     },
                     "orcid": {
                        "$ref": "#/definitions/orcid",
                        "description": "The person's ORCID."
                     },
                     "post-code": {
                        "$ref": "#/definitions/post-code",
                        "description": "The person's post-code."
                     },
                     "region": {
                        "$ref": "#/definitions/region",
                        "description": "The person's region."
                     },
                     "tel": {
                        "$ref": "#/definitions/tel",
                        "description": "The person's phone number."
                     },
                     "website": {
                        "$ref": "#/definitions/url",
                        "description": "The person's website."
                     }
                  },
                  "type": "object"
               },
               "post-code": {
                  "anyOf": [
                     {
                        "minLength": 1,
                        "type": "string"
                     },
                     {
                        "type": "number"
                     }
                  ],
                  "description": "A post code."
               },
               "reference": {
                  "additionalProperties": false,
                  "description": "A reference to a work.",
                  "properties": {
                     "abbreviation": {
                        "description": "The abbreviation of a work.",
                        "minLength": 1,
                        "type": "string"
                     },
                     "abstract": {
                        "description": "The abstract of a work.",
                        "minLength": 1,
                        "type": "string"
                     },
                     "authors": {
                        "description": "The author(s) of a work.",
                        "items": {
                           "anyOf": [
                              {
                                 "$ref": "#/definitions/person"
                              },
                              {
                                 "$ref": "#/definitions/entity"
                              }
                           ]
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                     },
                     "collection-doi": {
                        "$ref": "#/definitions/doi",
                        "description": "The DOI of a collection containing the work."
                     },
                     "collection-title": {
                        "description": "The title of a collection or proceedings.",
                        "minLength": 1,
                        "type": "string"
                     },
                     "collection-type": {
                        "description": "The type of a collection.",
                        "minLength": 1,
                        "type": "string"
                     },
                     "commit": {
                        "$ref": "#/definitions/commit"
                     },
                     "conference": {
                        "$ref": "#/definitions/entity",
                        "description": "The conference where the work was presented."
                     },
                     "contact": {
                        "description": "The contact person, group, company, etc. for a work.",
                        "items": {
                           "anyOf": [
                              {
                                 "$ref": "#/definitions/person"
                              },
                              {
                                 "$ref": "#/definitions/entity"
                              }
                           ]
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                     },
                     "copyright": {
                        "description": "The copyright information pertaining to the work.",
                        "minLength": 1,
                        "type": "string"
                     },
                     "data-type": {
                        "description": "The data type of a data set.",
                        "minLength": 1,
                        "type": "string"
                     },
                     "database": {
                        "description": "The name of the database where a work was accessed/is stored.",
                        "minLength": 1,
                        "type": "string"
                     },
                     "database-provider": {
                        "$ref": "#/definitions/entity",
                        "description": "The provider of the database where a work was accessed/is stored."
                     },
                     "date-accessed": {
                        "$ref": "#/definitions/date",
                        "description": "The date the work was accessed."
                     },
                     "date-downloaded": {
                        "$ref": "#/definitions/date",
                        "description": "The date the work has been downloaded."
                     },
                     "date-published": {
                        "$ref": "#/definitions/date",
                        "description": "The date the work has been published."
                     },
                     "date-released": {
                        "$ref": "#/definitions/date",
                        "description": "The date the work has been released."
                     },
                     "department": {
                        "description": "The department where a work has been produced.",
                        "minLength": 1,
                        "type": "string"
                     },
                     "doi": {
                        "$ref": "#/definitions/doi",
                        "description": "The DOI of the work."
                     },
                     "edition": {
                        "description": "The edition of the work.",
                        "minLength": 1,
                        "type": "string"
                     },
                     "editors": {
                        "description": "The editor(s) of a work.",
                        "items": {
                           "anyOf": [
                              {
                                 "$ref": "#/definitions/person"
                              },
                              {
                                 "$ref": "#/definitions/entity"
                              }
                           ]
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                     },
                     "editors-series": {
                        "description": "The editor(s) of a series in which a work has been published.",
                        "items": {
                           "anyOf": [
                              {
                                 "$ref": "#/definitions/person"
                              },
                              {
                                 "$ref": "#/definitions/entity"
                              }
                           ]
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                     },
                     "end": {
                        "anyOf": [
                           {
                              "type": "integer"
                           },
                           {
                              "minLength": 1,
                              "type": "string"
                           }
                        ],
                        "description": "The end page of the work."
                     },
                     "entry": {
                        "description": "An entry in the collection that constitutes the work.",
                        "minLength": 1,
                        "type": "string"
                     },
                     "filename": {
                        "description": "The name of the electronic file containing the work.",
                        "minLength": 1,
                        "type": "string"
                     },
                     "format": {
                        "description": "The format in which a work is represented.",
                        "minLength": 1,
                        "type": "string"
                     },
                     "identifiers": {
                        "description": "The identifier(s) of the work.",
                        "items": {
                           "$ref": "#/definitions/identifier"
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                     },
                     "institution": {
                        "$ref": "#/definitions/entity",
                        "description": "The institution where a work has been produced or published."
                     },
                     "isbn": {
                        "description": "The ISBN of the work.",
                        "pattern": "^[0-9\\- ]{10,17}X?$",
                        "type": "string"
                     },
                     "issn": {
                        "description": "The ISSN of the work.",
                        "pattern": "^\\d{4}-\\d{3}[\\dxX]$",
                        "type": "string"
                     },
                     "issue": {
                        "anyOf": [
                           {
                              "minLength": 1,
                              "type": "string"
                           },
                           {
                              "type": "number"
                           }
                        ],
                        "description": "The issue of a periodical in which a work appeared."
                     },
                     "issue-date": {
                        "description": "The publication date of the issue of a periodical in which a work appeared.",
                        "minLength": 1,
                        "type": "string"
                     },
                     "issue-title": {
                        "description": "The name of the issue of a periodical in which the work appeared.",
                        "minLength": 1,
                        "type": "string"
                     },
                     "journal": {
                        "description": "The name of the journal/magazine/newspaper/periodical where the work was published.",
                        "minLength": 1,
                        "type": "string"
                     },
                     "keywords": {
                        "description": "Keywords pertaining to the work.",
                        "items": {
                           "minLength": 1,
                           "type": "string"
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                     },
                     "languages": {
                        "description": "The language identifier(s) of the work according to ISO 639 language strings.",
                        "items": {
                           "maxLength": 3,
                           "minLength": 2,
                           "pattern": "^[a-z]{2,3}$",
                           "type": "string"
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                     },
                     "license": {
                        "$ref": "#/definitions/license"
                     },
                     "license-url": {
                        "$ref": "#/definitions/url",
                        "description": "The URL of the license text under which the work is licensed (only for non-standard licenses not included in the SPDX License List)."
                     },
                     "loc-end": {
                        "anyOf": [
                           {
                              "type": "integer"
                           },
                           {
                              "minLength": 1,
                              "type": "string"
                           }
                        ],
                        "description": "The line of code in the file where the work ends."
                     },
                     "loc-start": {
                        "anyOf": [
                           {
                              "type": "integer"
                           },
                           {
                              "minLength": 1,
                              "type": "string"
                           }
                        ],
                        "description": "The line of code in the file where the work starts."
                     },
                     "location": {
                        "$ref": "#/definitions/entity",
                        "description": "The location of the work."
                     },
                     "medium": {
                        "description": "The medium of the work.",
                        "minLength": 1,
                        "type": "string"
                     },
                     "month": {
                        "anyOf": [
                           {
                              "maximum": 12,
                              "minimum": 1,
                              "type": "integer"
                           },
                           {
                              "enum": [
                                 "1",
                                 "2",
                                 "3",
                                 "4",
                                 "5",
                                 "6",
                                 "7",
                                 "8",
                                 "9",
                                 "10",
                                 "11",
                                 "12"
                              ],
                              "type": "string"
                           }
                        ],
                        "description": "The month in which a work has been published."
                     },
                     "nihmsid": {
                        "description": "The NIHMSID of a work.",
                        "minLength": 1,
                        "type": "string"
                     },
                     "notes": {
                        "description": "Notes pertaining to the work.",
                        "minLength": 1,
                        "type": "string"
                     },
                     "number": {
                        "anyOf": [
                           {
                              "minLength": 1,
                              "type": "string"
                           },
                           {
                              "type": "number"
                           }
                        ],
                        "description": "The accession number for a work."
                     },
                     "number-volumes": {
                        "anyOf": [
                           {
                              "type": "integer"
                           },
                           {
                              "minLength": 1,
                              "type": "string"
                           }
                        ],
                        "description": "The number of volumes making up the collection in which the work has been published."
                     },
                     "pages": {
                        "anyOf": [
                           {
                              "type": "integer"
                           },
                           {
                              "minLength": 1,
                              "type": "string"
                           }
                        ],
                        "description": "The number of pages of the work."
                     },
                     "patent-states": {
                        "description": "The states for which a patent is granted.",
                        "items": {
                           "minLength": 1,
                           "type": "string"
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                     },
                     "pmcid": {
                        "description": "The PMCID of a work.",
                        "pattern": "^PMC[0-9]{7}$",
                        "type": "string"
                     },
                     "publisher": {
                        "$ref": "#/definitions/entity",
                        "description": "The publisher who has published the work."
                     },
                     "recipients": {
                        "description": "The recipient(s) of a personal communication.",
                        "items": {
                           "anyOf": [
                              {
                                 "$ref": "#/definitions/entity"
                              },
                              {
                                 "$ref": "#/definitions/person"
                              }
                           ]
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                     },
                     "repository": {
                        "$ref": "#/definitions/url",
                        "description": "The URL of the work in a repository (when the repository is neither a source code repository nor a build artifact repository)."
                     },
                     "repository-artifact": {
                        "$ref": "#/definitions/url",
                        "description": "The URL of the work in a build artifact/binary repository."
                     },
                     "repository-code": {
                        "$ref": "#/definitions/url",
                        "description": "The URL of the work in a source code repository."
                     },
                     "scope": {
                        "description": "The scope of the reference, e.g., the section of the work it adheres to.",
                        "minLength": 1,
                        "type": "string"
                     },
                     "section": {
                        "anyOf": [
                           {
                              "minLength": 1,
                              "type": "string"
                           },
                           {
                              "type": "number"
                           }
                        ],
                        "description": "The section of a work that is referenced."
                     },
                     "senders": {
                        "description": "The sender(s) of a personal communication.",
                        "items": {
                           "anyOf": [
                              {
                                 "$ref": "#/definitions/entity"
                              },
                              {
                                 "$ref": "#/definitions/person"
                              }
                           ]
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                     },
                     "start": {
                        "anyOf": [
                           {
                              "type": "integer"
                           },
                           {
                              "minLength": 1,
                              "type": "string"
                           }
                        ],
                        "description": "The start page of the work."
                     },
                     "status": {
                        "description": "The publication status of the work.",
                        "enum": [
                           "abstract",
                           "advance-online",
                           "in-preparation",
                           "in-press",
                           "preprint",
                           "submitted"
                        ],
                        "type": "string"
                     },
                     "term": {
                        "description": "The term being referenced if the work is a dictionary or encyclopedia.",
                        "minLength": 1,
                        "type": "string"
                     },
                     "thesis-type": {
                        "description": "The type of the thesis that is the work.",
                        "minLength": 1,
                        "type": "string"
                     },
                     "title": {
                        "description": "The title of the work.",
                        "minLength": 1,
                        "type": "string"
                     },
                     "translators": {
                        "description": "The translator(s) of a work.",
                        "items": {
                           "anyOf": [
                              {
                                 "$ref": "#/definitions/entity"
                              },
                              {
                                 "$ref": "#/definitions/person"
                              }
                           ]
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                     },
                     "type": {
                        "description": "The type of the work.",
                        "enum": [
                           "art",
                           "article",
                           "audiovisual",
                           "bill",
                           "blog",
                           "book",
                           "catalogue",
                           "conference-paper",
                           "conference",
                           "data",
                           "database",
                           "dictionary",
                           "edited-work",
                           "encyclopedia",
                           "film-broadcast",
                           "generic",
                           "government-document",
                           "grant",
                           "hearing",
                           "historical-work",
                           "legal-case",
                           "legal-rule",
                           "magazine-article",
                           "manual",
                           "map",
                           "multimedia",
                           "music",
                           "newspaper-article",
                           "pamphlet",
                           "patent",
                           "personal-communication",
                           "proceedings",
                           "report",
                           "serial",
                           "slides",
                           "software-code",
                           "software-container",
                           "software-executable",
                           "software-virtual-machine",
                           "software",
                           "sound-recording",
                           "standard",
                           "statute",
                           "thesis",
                           "unpublished",
                           "video",
                           "website"
                        ],
                        "type": "string"
                     },
                     "url": {
                        "$ref": "#/definitions/url",
                        "description": "The URL of the work."
                     },
                     "version": {
                        "$ref": "#/definitions/version",
                        "description": "The version of the work."
                     },
                     "volume": {
                        "anyOf": [
                           {
                              "type": "integer"
                           },
                           {
                              "minLength": 1,
                              "type": "string"
                           }
                        ],
                        "description": "The volume of the periodical in which a work appeared."
                     },
                     "volume-title": {
                        "description": "The title of the volume in which the work appeared.",
                        "minLength": 1,
                        "type": "string"
                     },
                     "year": {
                        "anyOf": [
                           {
                              "type": "integer"
                           },
                           {
                              "minLength": 1,
                              "type": "string"
                           }
                        ],
                        "description": "The year in which a work has been published."
                     },
                     "year-original": {
                        "anyOf": [
                           {
                              "type": "integer"
                           },
                           {
                              "minLength": 1,
                              "type": "string"
                           }
                        ],
                        "description": "The year of the original publication."
                     }
                  },
                  "required": [
                     "authors",
                     "title",
                     "type"
                  ],
                  "type": "object"
               },
               "region": {
                  "description": "A region.",
                  "minLength": 1,
                  "type": "string"
               },
               "swh-identifier": {
                  "$comment": "Software Heritage identifiers are documented here: https://docs.softwareheritage.org/devel/swh-model/persistent-identifiers.html.",
                  "description": "The Software Heritage identifier (without further qualifiers such as origin, visit, anchor, path).",
                  "examples": [
                     "swh:1:cnt:94a9ed024d3859793618152ea559a168bbcbb5e2",
                     "swh:1:dir:d198bc9d7a6bcf6db04f476d29314f157507d505",
                     "swh:1:rev:309cf2674ee7a0749978cf8265ab91a60aea0f7d",
                     "swh:1:rel:22ece559cc7cc2364edc5e5593d63ae8bd229f9f",
                     "swh:1:snp:c7c108084bc0bf3d81436bf980b46e98bd338453"
                  ],
                  "pattern": "^swh:1:(snp|rel|rev|dir|cnt):[0-9a-fA-F]{40}$",
                  "type": "string"
               },
               "tel": {
                  "description": "A phone number.",
                  "minLength": 1,
                  "type": "string"
               },
               "url": {
                  "format": "uri",
                  "pattern": "^(https|http|ftp|sftp)://.+",
                  "type": "string"
               },
               "version": {
                  "anyOf": [
                     {
                        "minLength": 1,
                        "type": "string"
                     },
                     {
                        "type": "number"
                     }
                  ]
               }
            },
            "description": "A file with citation metadata for software or datasets.",
            "properties": {
               "abstract": {
                  "description": "A description of the software or dataset.",
                  "minLength": 1,
                  "type": "string"
               },
               "authors": {
                  "description": "The author(s) of the software or dataset.",
                  "items": {
                     "anyOf": [
                        {
                           "$ref": "#/definitions/person"
                        },
                        {
                           "$ref": "#/definitions/entity"
                        }
                     ]
                  },
                  "minItems": 1,
                  "type": "array",
                  "uniqueItems": true
               },
               "cff-version": {
                  "description": "The version of CFF used for providing the citation metadata.",
                  "examples": [
                     "1.2.0"
                  ],
                  "pattern": "^1\\.2\\.0$",
                  "type": "string"
               },
               "commit": {
                  "$ref": "#/definitions/commit"
               },
               "contact": {
                  "description": "The contact person, group, company, etc. for the software or dataset.",
                  "items": {
                     "anyOf": [
                        {
                           "$ref": "#/definitions/person"
                        },
                        {
                           "$ref": "#/definitions/entity"
                        }
                     ]
                  },
                  "minItems": 1,
                  "type": "array",
                  "uniqueItems": true
               },
               "date-released": {
                  "$ref": "#/definitions/date",
                  "description": "The date the work has been released."
               },
               "doi": {
                  "$ref": "#/definitions/doi"
               },
               "identifiers": {
                  "description": "The identifiers of the software or dataset.",
                  "items": {
                     "$ref": "#/definitions/identifier"
                  },
                  "minItems": 1,
                  "type": "array",
                  "uniqueItems": true
               },
               "keywords": {
                  "description": "Keywords that describe the work.",
                  "items": {
                     "minLength": 1,
                     "type": "string"
                  },
                  "minItems": 1,
                  "type": "array",
                  "uniqueItems": true
               },
               "license": {
                  "$ref": "#/definitions/license"
               },
               "license-url": {
                  "$ref": "#/definitions/url",
                  "description": "The URL of the license text under which the software or dataset is licensed (only for non-standard licenses not included in the SPDX License List)."
               },
               "message": {
                  "default": "If you use this software, please cite it using the metadata from this file.",
                  "description": "A message to the human reader of the file to let them know what to do with the citation metadata.",
                  "examples": [
                     "If you use this software, please cite it using the metadata from this file.",
                     "Please cite this software using these metadata.",
                     "Please cite this software using the metadata from 'preferred-citation'."
                  ],
                  "minLength": 1,
                  "type": "string"
               },
               "preferred-citation": {
                  "$ref": "#/definitions/reference",
                  "description": "A reference to another work that should be cited instead of the software or dataset itself."
               },
               "references": {
                  "description": "Reference(s) to other creative works.",
                  "items": {
                     "$ref": "#/definitions/reference"
                  },
                  "minItems": 1,
                  "type": "array",
                  "uniqueItems": true
               },
               "repository": {
                  "$ref": "#/definitions/url",
                  "description": "The URL of the software or dataset in a repository (when the repository is neither a source code repository nor a build artifact repository).",
                  "examples": [
                     "https://edoc.hu-berlin.de/handle/18452/23016",
                     "https://ascl.net/2105.013"
                  ]
               },
               "repository-artifact": {
                  "$ref": "#/definitions/url",
                  "description": "The URL of the software in a build artifact/binary repository."
               },
               "repository-code": {
                  "$ref": "#/definitions/url",
                  "description": "The URL of the software or dataset in a source code repository."
               },
               "title": {
                  "description": "The name of the software or dataset.",
                  "minLength": 1,
                  "type": "string"
               },
               "type": {
                  "default": "software",
                  "description": "The type of the work.",
                  "enum": [
                     "dataset",
                     "software"
                  ],
                  "type": "string"
               },
               "url": {
                  "$ref": "#/definitions/url",
                  "description": "The URL of a landing page/website for the software or dataset."
               },
               "version": {
                  "$ref": "#/definitions/version",
                  "description": "The version of the software or dataset."
               }
            },
            "required": [
               "authors",
               "cff-version",
               "message",
               "title"
            ],
            "title": "Citation File Format",
            "type": "object"
         }
      },
      "name": "CFF Citation",
      "path": "CITATION.cff",
      "status": "active",
      "summary": "[`CITATION.cff`](https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-citation-files) file.",
      "type": "yaml",
      "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/CITATION.cff"
   },
   "file_codeowners": {
      "content": "",
      "content_setting": {
         "prefix": "",
         "separator": "\n",
         "suffix": ""
      },
      "description": "If present, a CODEOWNERS file is automatically maintained at the given [`path`](#ccc-code-owners-path),\nusing file ownership information defined for team members.\nFor each pull request, GitHub will then automatically add the owners of each\nmodified file in that pull request as reviewers.\nNote that you can also assign issue-form-specific review tasks to each role\n(cf. [`ccc.role.*.assignment.review`](#ccc-role---assignment-review)).\n\n:::{admonition} Considerations\n:class: important\n\n- Code owners must have write permissions to the repository.\n- For code owners to be automatically requested for reviews, protection rules for\n  [requiring pull request reviews](https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches#require-pull-request-reviews-before-merging)\n  must be enabled.\n:::\n",
      "file_setting": {
         "eof_newline": true,
         "json": {
            "end_of_file_newline": true,
            "indent": 3,
            "sort_keys": true
         },
         "md": {
            "heading_number": false,
            "target": "github"
         },
         "sort_keys": true,
         "yaml": {
            "block_string": true,
            "end_of_file_newline": true,
            "mapping_indent": 2,
            "remove_top_level_indent": true,
            "sequence_indent": 4,
            "sequence_indent_offset": 2,
            "sort_keys": true
         }
      },
      "name": "CODEOWNERS",
      "path": ".github/CODEOWNERS",
      "path_schema": {
         "description": "The file must be named `CODEOWNERS` (case-sensitive, without extension)\nand placed either in the `.github` directory, the `docs` directory,\nor the root of the repository.\n",
         "enum": [
            "CODEOWNERS",
            ".github/CODEOWNERS",
            "docs/CODEOWNERS"
         ],
         "pattern": "^(?:|.github/|docs/)CODEOWNERS$"
      },
      "status": "inactive",
      "summary": "[`CODEOWNERS`](https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-code-owners) file.",
      "type": "txt",
      "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.github/CODEOWNERS"
   },
   "file_funding_github": {
      "content": {
         "github": [
            "RepoDynamics"
         ]
      },
      "content_setting": {
         "prefix": "",
         "separator": "\n",
         "suffix": ""
      },
      "description": "Configurations for GitHub to display a sponsor button in the repository.\nClicking on the button opens the ***Sponsor this project*** section,\nwhere a list of links to the specified funding platforms is displayed to the user.\n",
      "file_setting": {
         "eof_newline": true,
         "json": {
            "end_of_file_newline": true,
            "indent": 3,
            "sort_keys": true
         },
         "md": {
            "heading_number": false,
            "target": "github"
         },
         "sort_keys": true,
         "yaml": {
            "block_string": true,
            "end_of_file_newline": true,
            "mapping_indent": 2,
            "remove_top_level_indent": true,
            "sequence_indent": 4,
            "sequence_indent_offset": 2,
            "sort_keys": true
         }
      },
      "jsonschema": {
         "fill_defaults": false,
         "schema": {
            "$ref": "https://jsonschemata.repodynamics.com/config/github/funding"
         }
      },
      "name": "GitHub Funding",
      "path": ".github/FUNDING.yml",
      "path_schema": {
         "description": "GitHub only recognizes this file at `.github/FUNDING.yml`.\n",
         "pattern": "^\\.github/FUNDING\\.yml$"
      },
      "status": "inactive",
      "summary": "GitHub [`FUNDING.yml`](https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/displaying-a-sponsor-button-in-your-repository) file.",
      "type": "yaml",
      "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/.github/FUNDING.yml"
   },
   "file_pixi_manifest": {
      "content": {
         "environments": {
            "prod-py312": {
               "features": [],
               "solve-group": ""
            }
         },
         "project": {
            "authors": [
               "Armin Ariamajd <armiariam@gmail.com>"
            ],
            "channels": [
               "conda-forge"
            ],
            "description": "Cloud-Native Continuous Software Engineering Automation for Python Packages on GitHub",
            "documentation": "https://pypackit.repodynamics.com",
            "homepage": "https://pypackit.repodynamics.com",
            "license": "AGPL-3.0-or-later",
            "license-file": "LICENSE-AGPL-3-0-or-later.md",
            "name": "PyPackIT",
            "platforms": [
               "win-64",
               "linux-64",
               "osx-64",
               "osx-arm64"
            ],
            "readme": "README.md",
            "repository": "https://github.com/RepoDynamics/PyPackIT",
            "version": "0.0.0"
         }
      },
      "content_setting": {
         "filter": {
            "no_value": {
               "function": "lambda value: value is None",
               "inplace": true,
               "jsonpath": "$.project.*"
            }
         },
         "prefix": "",
         "separator": "\n",
         "suffix": ""
      },
      "file_setting": {
         "eof_newline": true,
         "json": {
            "end_of_file_newline": true,
            "indent": 3,
            "sort_keys": true
         },
         "md": {
            "heading_number": false,
            "target": "github"
         },
         "sort_keys": true,
         "yaml": {
            "block_string": true,
            "end_of_file_newline": true,
            "mapping_indent": 2,
            "remove_top_level_indent": true,
            "sequence_indent": 4,
            "sequence_indent_offset": 2,
            "sort_keys": true
         }
      },
      "name": "Pixi Manifest",
      "path": "pixi.toml",
      "status": "active",
      "summary": "The Pixi manifest file in TOML format.\n",
      "type": "toml",
      "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/pixi.toml"
   },
   "file_sphinx_conf": {
      "content": {
         "author": "RepoDynamics",
         "bibtex_bibfiles": [
            "refs.bib"
         ],
         "bibtex_default_style": "plain",
         "bibtex_reference_style": "label",
         "blog_authors": {
            "aariam": [
               "Armin Ariamajd",
               "https://github.com/AAriam"
            ],
            "owner": [
               "RepoDynamics",
               "https://repodynamics.com"
            ]
         },
         "blog_baseurl": "https://pypackit.repodynamics.com",
         "blog_default_author": "owner",
         "blog_feed_archives": true,
         "blog_path": "news/list",
         "blog_post_pattern": [
            "news/post/*.md"
         ],
         "blog_title": "PyPackIT News",
         "exclude_patterns": [
            "Thumbs.db",
            ".DS_Store",
            ".ipynb_checkpoints",
            "README.md"
         ],
         "extensions": [
            "sphinx.ext.duration",
            "sphinx.ext.graphviz",
            "sphinx.ext.inheritance_diagram",
            "sphinx.ext.intersphinx",
            "sphinx.ext.linkcode",
            "myst_nb",
            "sphinx_design",
            "sphinx_external_toc",
            "ablog",
            "sphinx.ext.intersphinx",
            "sphinx_copybutton",
            "sphinxext.opengraph",
            "sphinxcontrib.bibtex",
            "sphinx_togglebutton",
            "sphinxcontrib.mermaid",
            "sphinx_thebe",
            "sphinx_last_updated_by_git",
            "sphinxcontrib.rsvgconverter",
            "sphinx_tippy",
            "notfound.extension",
            "jsonschema_autodoc.sphinx"
         ],
         "external_toc_exclude_missing": false,
         "external_toc_path": ".toc.yaml",
         "fontawesome_included": true,
         "html_baseurl": "https://pypackit.repodynamics.com",
         "html_context": {
            "default_mode": "auto",
            "doc_path": "docs/website/source",
            "github_repo": "PyPackIT",
            "github_user": "RepoDynamics",
            "github_version": "main",
            "pp_title_sep": ".\u2002"
         },
         "html_css_files": [
            "https://cdn.jsdelivr.net/npm/choices.js/public/assets/styles/choices.min.css"
         ],
         "html_extra_path": [],
         "html_favicon": "_media/logo/favicon.svg",
         "html_js_files": [
            "https://cdn.jsdelivr.net/npm/choices.js/public/assets/scripts/choices.min.js"
         ],
         "html_last_updated_fmt": "%b %d, %Y",
         "html_math_renderer": "mathjax",
         "html_secnumber_suffix": ".\u2002",
         "html_short_title": "PyPackIT",
         "html_show_sphinx": false,
         "html_sidebars": {
            "news/**": [
               "ablog/postcard.html",
               "ablog/recentposts.html",
               "ablog/tagcloud.html",
               "ablog/categories.html",
               "ablog/archives.html",
               "ablog/authors.html"
            ]
         },
         "html_static_path": [
            "_static",
            "_media/logo/simple_light.svg",
            "_media/logo/simple_dark.svg"
         ],
         "html_theme": "pydata_sphinx_theme",
         "html_theme_options": {
            "analytics": {
               "google_analytics_id": "G-0X66W6TGL2"
            },
            "announcement": "https://raw.githubusercontent.com/RepoDynamics/PyPackIT/main/docs/website/announcement.html",
            "article_footer_items": [],
            "article_header_end": [],
            "article_header_start": [
               "breadcrumbs"
            ],
            "back_to_top_button": true,
            "content_footer_items": [
               "user_login_dialog"
            ],
            "footer_center": [],
            "footer_end": [
               "quicklinks"
            ],
            "footer_start": [
               "footer_badges"
            ],
            "header_links_before_dropdown": 7,
            "icon_links": [
               {
                  "icon": "fa-brands fa-github",
                  "name": "Source Repository",
                  "url": "https://github.com/RepoDynamics/PyPackIT"
               },
               {
                  "icon": "fa-regular fa-circle-dot",
                  "name": "Issues",
                  "url": "https://github.com/RepoDynamics/PyPackIT/issues"
               },
               {
                  "icon": "fa-solid fa-code-pull-request",
                  "name": "Pull Requests",
                  "url": "https://github.com/RepoDynamics/PyPackIT/pulls"
               },
               {
                  "icon": "fa-solid fa-comments",
                  "name": "Discussions",
                  "url": "https://github.com/RepoDynamics/PyPackIT/discussions"
               },
               {
                  "icon": "fa-solid fa-copyright",
                  "name": "License",
                  "url": "https://pypackit.repodynamics.com/about/license"
               }
            ],
            "icon_links_label": "External links",
            "logo": {
               "alt_text": "PyPackIT",
               "image_dark": "_static/simple_dark.svg",
               "image_light": "_static/simple_light.svg"
            },
            "navbar_align": "left",
            "navbar_center": [
               "navbar-nav"
            ],
            "navbar_end": [
               "navbar-icon-links"
            ],
            "navbar_persistent": [
               "search-button",
               "theme-switcher",
               "user_login_button"
            ],
            "navbar_start": [
               "navbar-logo"
            ],
            "navigation_depth": 5,
            "primary_sidebar_end": [],
            "pygments_dark_style": "monokai",
            "pygments_light_style": "default",
            "search_bar_text": "Search PyPackIT",
            "secondary_sidebar_items": [
               "page-toc",
               "last-updated",
               "edit-this-page"
            ],
            "show_nav_level": 1,
            "show_prev_next": true,
            "show_toc_level": 5,
            "sidebar_includehidden": true,
            "sidebarwidth": 270,
            "use_edit_page_button": true
         },
         "html_title": "PyPackIT",
         "html_use_opensearch": "https://pypackit.repodynamics.com",
         "intersphinx_mapping": {
            "matplotlib": null,
            "numpy": null,
            "python": [
               "https://docs.python.org/3/",
               null
            ],
            "scipy": null
         },
         "language": "en",
         "latex_elements": {
            "figure_align": "htbp",
            "fncychap": "\\usepackage[Bjornstrup]{fncychap}",
            "fontpkg": "\\setmainfont{DejaVu Serif}\n\\setsansfont{DejaVu Sans}\n\\setmonofont{DejaVu Sans Mono}\n",
            "papersize": "a4paper",
            "pointsize": "11pt",
            "preamble": "\\usepackage[titles]{tocloft}\n\\usepackage{fontspec}\n\\cftsetpnumwidth {1.25cm}\\cftsetrmarg{1.5cm}\n\\setlength{\\cftchapnumwidth}{0.75cm}\n\\setlength{\\cftsecindent}{\\cftchapnumwidth}\n\\setlength{\\cftsecnumwidth}{1.25cm}\n",
            "printindex": "\\footnotesize\\raggedright\\printindex"
         },
         "latex_engine": "lualatex",
         "latex_logo": "_media/logo/full_light.png",
         "latex_show_pagerefs": true,
         "latex_show_urls": "footnote",
         "latex_theme": "manual",
         "math_eqref_format": "Eq. {number}",
         "math_number_all": true,
         "math_numfig": true,
         "math_numsep": ".",
         "maximum_signature_line_length": 80,
         "myst_enable_extensions": [
            "amsmath",
            "attrs_inline",
            "attrs_block",
            "colon_fence",
            "deflist",
            "dollarmath",
            "fieldlist",
            "html_admonition",
            "html_image",
            "linkify",
            "replacements",
            "smartquotes",
            "substitution",
            "tasklist"
         ],
         "myst_fence_as_directive": [
            "mermaid"
         ],
         "myst_heading_anchors": 6,
         "myst_linkify_fuzzy_links": false,
         "myst_links_external_new_tab": true,
         "needs_sphinx": "8.1",
         "nitpicky": true,
         "notfound_urls_prefix": "/PyPackIT/",
         "numfig": true,
         "numfig_format": {
            "code-block": "Code %s",
            "figure": "Figure %s",
            "section": "Section",
            "table": "Table %s"
         },
         "numfig_secnum_depth": 3,
         "ogp_enable_meta_description": true,
         "ogp_site_url": "https://pypackit.repodynamics.com",
         "ogp_social_cards": {
            "image": "_static/simple_light.svg",
            "line_color": "rgb(0 85 0)"
         },
         "ogp_use_first_image": true,
         "post_always_section": true,
         "post_auto_image": 1,
         "post_show_prev_next": false,
         "project": "PyPackIT",
         "project_copyright": "\u00a9 2023\u20132025 RepoDynamics",
         "pygment_style": "default",
         "python_display_short_literal_types": true,
         "python_maximum_signature_line_length": 80,
         "root_doc": "index",
         "sd_fontawesome_latex": true,
         "show_authors": true,
         "show_warning_types": true,
         "suppress_warnings": [
            "etoc.toctree"
         ],
         "templates_path": [
            "_templates"
         ],
         "tippy_props": {
            "delay": [
               200,
               500
            ],
            "duration": [
               200,
               100
            ],
            "interactive": true,
            "maxWidth": 500,
            "placement": "auto-start",
            "theme": "material"
         },
         "today_fmt": "%b %d, %Y",
         "togglebutton_hint": "show details",
         "togglebutton_hint_hide": "hide details",
         "trim_footnote_reference_space": true
      },
      "content_setting": {
         "prefix": "",
         "separator": "\n",
         "suffix": ""
      },
      "file_setting": {
         "eof_newline": true,
         "json": {
            "end_of_file_newline": true,
            "indent": 3,
            "sort_keys": true
         },
         "md": {
            "heading_number": false,
            "target": "github"
         },
         "sort_keys": true,
         "yaml": {
            "block_string": true,
            "end_of_file_newline": true,
            "mapping_indent": 2,
            "remove_top_level_indent": true,
            "sequence_indent": 4,
            "sequence_indent_offset": 2,
            "sort_keys": true
         }
      },
      "jsonschema": {
         "fill_defaults": false,
         "schema": {
            "$ref": "https://jsonschemata.repodynamics.com/config/sphinx"
         }
      },
      "name": "Sphinx Configuration",
      "path": "docs/website/source/conf.json",
      "status": "active",
      "summary": "Sphinx configuration file for the website.",
      "type": "json",
      "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/docs/website/source/conf.json"
   },
   "file_web_toc": {
      "content": {
         "defaults": {
            "hidden": true
         },
         "entries": [
            {
               "entries": [
                  {
                     "file": "intro/motivation/index"
                  },
                  {
                     "file": "intro/overview/index"
                  },
                  {
                     "entries": [
                        {
                           "file": "intro/background/methodologies/index"
                        },
                        {
                           "file": "intro/background/github/index"
                        },
                        {
                           "entries": [
                              {
                                 "file": "intro/background/python/pypi/index"
                              },
                              {
                                 "file": "intro/background/python/pip/index"
                              },
                              {
                                 "file": "intro/background/python/packaging/index"
                              },
                              {
                                 "file": "intro/background/python/governance/index"
                              }
                           ],
                           "file": "intro/background/python/index"
                        },
                        {
                           "entries": [
                              {
                                 "file": "intro/background/conda/packaging/index"
                              }
                           ],
                           "file": "intro/background/conda/index"
                        },
                        {
                           "file": "intro/background/versioning/index"
                        },
                        {
                           "file": "intro/background/jsonpath/index"
                        },
                        {
                           "file": "intro/background/yaml/index"
                        },
                        {
                           "file": "intro/background/toml/index"
                        },
                        {
                           "file": "intro/background/jinja/index"
                        },
                        {
                           "file": "intro/background/markdown/index"
                        }
                     ],
                     "file": "intro/background/index"
                  },
                  {
                     "file": "intro/glossary/index"
                  },
                  {
                     "file": "intro/references/index"
                  }
               ],
               "file": "intro/index",
               "options": {
                  "numbered": true
               },
               "title": "Intro"
            },
            {
               "entries": [
                  {
                     "entries": [
                        {
                           "file": "manual/install/new/index"
                        },
                        {
                           "file": "manual/install/existing/index"
                        },
                        {
                           "file": "manual/install/upgrade/index"
                        },
                        {
                           "file": "manual/install/common/index"
                        }
                     ],
                     "file": "manual/install/index"
                  },
                  {
                     "file": "manual/quickstart/index"
                  },
                  {
                     "entries": [
                        {
                           "file": "manual/config/location/index"
                        },
                        {
                           "file": "manual/config/structure/index"
                        },
                        {
                           "file": "manual/config/options/index"
                        },
                        {
                           "file": "manual/config/synchronization/index"
                        },
                        {
                           "file": "manual/config/outputs/index"
                        },
                        {
                           "file": "manual/config/templating/index"
                        },
                        {
                           "file": "manual/config/inheritance/index"
                        },
                        {
                           "file": "manual/config/hooks/index"
                        },
                        {
                           "file": "manual/config/caching/index"
                        }
                     ],
                     "file": "manual/config/index"
                  }
               ],
               "file": "manual/index",
               "options": {
                  "numbered": true
               },
               "title": "Manual"
            },
            {
               "entries": [
                  {
                     "file": "api/metadata/index"
                  },
                  {
                     "file": "api/local/index"
                  },
                  {
                     "file": "api/changelog/index"
                  },
                  {
                     "file": "api/variables/index"
                  },
                  {
                     "file": "api/contributors/index"
                  },
                  {
                     "file": "api/cache/index"
                  },
                  {
                     "file": "api/refs/index"
                  }
               ],
               "file": "api/index",
               "title": "API"
            },
            {
               "entries": [
                  {
                     "glob": "news/post/**"
                  }
               ],
               "file": "news/index",
               "title": "News"
            },
            {
               "entries": [
                  {
                     "entries": [
                        {
                           "file": "contribute/feedback/security/index"
                        },
                        {
                           "file": "contribute/feedback/bug/index"
                        }
                     ],
                     "file": "contribute/feedback/index"
                  },
                  {
                     "file": "contribute/develop/index"
                  },
                  {
                     "file": "contribute/support/index"
                  }
               ],
               "file": "contribute/index",
               "options": {
                  "numbered": true
               },
               "title": "Contribute"
            },
            {
               "entries": [
                  {
                     "file": "about/citation/index"
                  },
                  {
                     "file": "about/contact/index"
                  },
                  {
                     "entries": [
                        {
                           "glob": "about/license/*/index"
                        }
                     ],
                     "file": "about/license/index"
                  }
               ],
               "file": "about/index",
               "options": {
                  "numbered": true
               },
               "title": "About"
            },
            {
               "entries": [
                  {
                     "entries": [
                        {
                           "file": "help/website/tips/index"
                        },
                        {
                           "file": "help/website/api/index"
                        }
                     ],
                     "file": "help/website/index"
                  }
               ],
               "file": "help/index",
               "options": {
                  "numbered": true
               },
               "title": "Help"
            }
         ],
         "root": "index"
      },
      "content_setting": {
         "prefix": "",
         "separator": "\n",
         "suffix": ""
      },
      "data": {
         "rel_path": ".toc.yaml"
      },
      "description": "This file is used by the\n[Sphinx-External-TOC](https://github.com/executablebooks/sphinx-external-toc)\nextension to define the structure of the website.\n",
      "file_setting": {
         "eof_newline": true,
         "json": {
            "end_of_file_newline": true,
            "indent": 3,
            "sort_keys": true
         },
         "md": {
            "heading_number": false,
            "target": "github"
         },
         "sort_keys": true,
         "yaml": {
            "block_string": true,
            "end_of_file_newline": true,
            "mapping_indent": 2,
            "remove_top_level_indent": true,
            "sequence_indent": 4,
            "sequence_indent_offset": 2,
            "sort_keys": true
         }
      },
      "name": "Website Table of Contents",
      "path": "docs/website/source/.toc.yaml",
      "status": "active",
      "summary": "Central table of contents definition for the entire website.",
      "type": "yaml",
      "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/docs/website/source/.toc.yaml"
   },
   "highlights": [
      {
         "description": "PyPackIT is fully preconfigured and easily installable\nin both new and existing repositories via a GitHub repository template.\nMost users only need to invest a few minutes filling project-specific information\nin the provided configuration files.\nPyPackIT then takes over, setting up the repository\nand generating a complete infrastructure and fully automated development workflow for the project.\nThis leaves users with only few tasks throughout the software development life cycle,\nsuch as adding application code, unit-tests, and minimal documentation content.\n",
         "title": "Ready to Use"
      },
      {
         "description": "PyPackIT is a cloud-based solution that integrates with GitHub\nand uses GitHub Actions to automate the entire software development process.\nIt provides a cloud-native development environment that\neliminates the need for initial setup and configuration,\nenabling users to immediately begin with the actual\nimplementation of software, even directly from the web browser.\nAll integration, testing, and deployment tasks are automatically carried out on the cloud,\nfacilitating Agile development and ensuring the consistent enforcement of best practices.\n",
         "title": "Cloud Native Development"
      },
      {
         "description": "PyPackIT offers a centralized user interface\nfor automatic configuration, customization, and management\nof the entire project, and even multiple projects at once.\nBased on DevOps practices like Infrastructure-as-Code,\nPyPackIT's control center consolidates all project configurations\ninto a unified data structure, supporting both declarative definitions\nand dynamic data generation at runtime via built-in templating, scripting,\nand online retrieval features.\nConfigurations are automatically applied to related components,\neliminating redundancy and rendering the entire project dynamic.\n",
         "title": "Continuous Configuration Automation"
      },
      {
         "description": "PyPackIT's CI/CD pipelines automate tasks such as code analysis,\nstyle formatting, type checking, refactoring, testing, dependency monitoring,\nversioning, build, containerization, release, and distribution,\nwith support for multiple indexing repositories including PyPI, Anaconda,\nZenodo, GitHub Releases, and all Docker registries.\nThese Continuous software engineering pipelines eliminate the need for dedicated integration\nand deployment teams, while increasing control, integrity, scalability, security,\nand transparency of the Agile development process.\n",
         "title": "Continuous Integration & Deployment"
      },
      {
         "description": "PyPackIT provides Continuous pipelines that\nperiodically perform automated testing, refactoring, and maintenance tasks\nsuch as testing previous releases with up-to-date dependencies,\nrefactoring code according to the latest standards,\nupgrading development tools and project infrastructure,\nand cleaning up the repository and its development environment.\nPyPackIT can automatically submit issue tickets and pull requests\nfor applying updates and fixes, thus maintaining\nthe health of the project and ensuring its long-term sustainability.\n",
         "title": "Continuous Refactoring & Testing"
      },
      {
         "description": "PyPackIT automatically maintains the project's issue tracking system,\nproviding type-specific submission forms that are\nkept up-to-date with project information.\nThese collect user inputs in a structured format,\nallowing PyPackIT to automate issue management activities\nsuch as ticket formatting, labeling, bug triage, task assignment,\ndocumentation, issue\u2013commit linkage, and progress reports.\nUsers can also command PyPackIT to perform specific tasks using semantic comments and labels,\neliminating all repetitive issue management activities.\n",
         "title": "Issue Management"
      },
      {
         "description": "PyPackIT fully integrates with Git and GitHub\nto automate version control tasks like branching,\nversioning, tagging, commit management, and merging.\nBased on well-established models such as Git Flow,\nPyPackIT adopts a specialized branching strategy and version scheme\nfor simultaneous development and deployment of multiple orthogonal release candidates,\nPyPackIT's strategy enables rapid project evolution according to Agile\nand Continuous software engineering methodologies,\nwhile ensuring availability and long-term support of earlier releases.\n",
         "title": "Version Control"
      },
      {
         "description": "PyPackIT supports Python applications with extension modules and non-Python dependencies.\nIt enables deployment as a Python package, a Conda package,\nand/or a Docker image to cloud services such as PyPI,\nAnaconda, Docker registries, and BinderHub instances.\nPyPackIT includes a build-ready package skeleton with essential source files\nand automatically maintained configuration files customized for the project.\nUsers only need to add application code in the provided source files,\nwhile PyPackIT automates all integration, packaging, and deployment tasks.\n",
         "title": "Python Application"
      },
      {
         "description": "PyPackIT's fully automated testing infrastructure enables the\nimmediate adoption of test-driven development methodologies,\nrequiring users to only provide test cases in the provided skeleton files.\nTesting is then automatically performed at various phases of the development life cycle,\nwhile generating comprehensive reports and coverage metrics\nto improve awareness of software health status.\nThe test suite is automatically packaged and distributed along each release,\nallowing for local verification of software functionality and performance by its users.\n",
         "title": "Test Suite"
      },
      {
         "description": "PyPackIT includes a fully designed website\nfilled with automatically generated documentation such as\nproject information, package metadata, installation guides,\nAPI reference, changelogs, release notes,\ncontribution guides, and citation data.\nThe website is automatically deployed to GitHub Pages and Read The Docs platforms,\nand can be easily customized via the control center with no web development knowledge.\nPyPackIT can also dynamically generate standalone documents in various Markdown formats,\nsuch as READMEs for different repositories.\n",
         "title": "Documentation Website"
      },
      {
         "description": "PyPackIT incorporates the System Package Data Exchange (SPDX) license standard\nand supports all SPDX License List licenses and exceptions, as well as user-defined ones.\nProjects can define complex licenses simply by providing an SPDX license expression.\nPyPackIT will then automatically retrieve\nthe necessary data from the SPDX database,\ncustomize it with project-specific information,\ngenerate visually appealing and syntactically valid license files and copyright notices,\nand integrate license information into all project components and releases.\n",
         "title": "Copyright & Licensing"
      },
      {
         "description": "PyPackIT improves project security while supporting community collaboration\nby incorporating security measures like branch and tag protection rulesets,\nvulnerability scanning, dependency monitoring, and private security advisories.\nAll provided GitHub Actions workflows and applications are developed\naccording to the latest security standards\nto prevent unauthorized access, data breaches, and code injection attacks.\nTo ensure that PyPackIT is highly secure and transparent,\nmost of its infrastructure is natively implemented and self-contained.\n",
         "title": "Security & Transparency"
      }
   ],
   "issue": {
      "__data__": {
         "agreements": [
            {
               "attributes": {
                  "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
               },
               "type": "markdown"
            },
            {
               "attributes": {
                  "value": "### \u2705\u2002Agreements"
               },
               "type": "markdown"
            },
            {
               "attributes": {
                  "label": "To submit an issue, please agree to the following terms and conditions:",
                  "options": [
                     {
                        "label": "I confirm that I am following PyPackIT's [Contribution Guidelines](https://pypackit.repodynamics.com/contribute).",
                        "required": true
                     },
                     {
                        "label": "I agree to follow PyPackIT's [Code of Conduct](https://github.com/RepoDynamics/PyPackIT/blob/main/CODE_OF_CONDUCT.md).",
                        "required": true
                     }
                  ]
               },
               "id": "terms",
               "type": "checkboxes"
            },
            {
               "attributes": {
                  "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
               },
               "type": "markdown"
            },
            {
               "attributes": {
                  "label": "Thank you again for filling out this issue ticket.\nIf you are willing to collaborate on its design and implementation,\nplease select the option below.\n",
                  "options": [
                     {
                        "label": "I am willing to collaborate on this issue and submit a pull request.",
                        "required": false
                     }
                  ]
               },
               "id": "collab",
               "type": "checkboxes"
            }
         ],
         "custom_pkg_api": {
            "pkg_entry_description": "Python application programming interface",
            "pkg_entry_name": "API",
            "pkg_name": "PyPackIT",
            "python_api_names": [
               "pypackit"
            ]
         },
         "custom_pkg_cli": {
            "cli_names": [
               "pypackit"
            ],
            "pkg_entry_description": "command-line interface",
            "pkg_entry_name": "CLI",
            "pkg_name": "PyPackIT"
         },
         "custom_pkg_gui": {
            "gui_names": [],
            "pkg_entry_description": "graphical user interface",
            "pkg_entry_name": "GUI",
            "pkg_name": "PyPackIT"
         },
         "custom_test_api": {
            "pkg_entry_description": "Python application programming interface",
            "pkg_entry_name": "API",
            "pkg_name": "PyPackIT-TestSuite",
            "python_api_names": [
               "pypackit_testsuite"
            ]
         },
         "custom_test_cli": {
            "cli_names": [
               "PyPackIT-TestSuite"
            ],
            "pkg_entry_description": "command-line interface",
            "pkg_entry_name": "CLI",
            "pkg_name": "PyPackIT-TestSuite"
         },
         "custom_test_gui": {
            "gui_names": [],
            "pkg_entry_description": "graphical user interface",
            "pkg_entry_name": "GUI",
            "pkg_name": "PyPackIT-TestSuite"
         },
         "environment": [
            {
               "attributes": {
                  "value": "<br>\n\n## \ud83c\udf9b\u2002Environment Specifications\n"
               },
               "type": "markdown"
            },
            {
               "attributes": {
                  "description": "Please select all operating systems on which you have encountered the bug.\n",
                  "label": "Operating System",
                  "multiple": true,
                  "options": [
                     "Linux (arm64)",
                     "Linux (x64)",
                     "Windows (x64)",
                     "macOS (arm64)",
                     "macOS (x64)"
                  ]
               },
               "id": "os",
               "type": "dropdown",
               "validations": {
                  "required": true
               }
            },
            {
               "attributes": {
                  "default": 0,
                  "description": "Please select all Python versions in which you have encountered the bug.\n",
                  "label": "Python Version",
                  "multiple": true,
                  "options": [
                     "3.13",
                     "3.12",
                     "3.11",
                     "3.10"
                  ]
               },
               "id": "python_versions",
               "type": "dropdown",
               "validations": {
                  "required": true
               }
            },
            {
               "attributes": {
                  "default": 0,
                  "description": "Please select the package manager used to download and install PyPackIT.\n",
                  "label": "Package Manager",
                  "multiple": false,
                  "options": [
                     "conda",
                     "pip"
                  ]
               },
               "id": "package_manager",
               "type": "dropdown",
               "validations": {
                  "required": true
               }
            },
            {
               "attributes": {
                  "description": "Please provide the details of all installed packages and their exact versions in the environment where you have encountered the bug. Follow the instructions below based on the package manager you have selected:\n1. **`pip`**: Run `pip freeze > requirements.txt` in your terminal within the environment, and copy the contents of the generated `requirements.txt` file here.\n2. **`conda`**: Run `conda env export > environment.yml` in your terminal within the environment (or alternatively `conda env export -n {YOUR_ENVIRONMENT_NAME} > environment.yml`), and copy the contents of the generated `environment.yml` file here.",
                  "label": "Environment",
                  "render": "yaml"
               },
               "id": "environment",
               "type": "textarea",
               "validations": {
                  "required": true
               }
            }
         ],
         "heading_bug_report": {
            "attributes": {
               "value": "<br>\n\n## \ud83d\udc1e\u2002Bug Report\n"
            },
            "type": "markdown"
         },
         "heading_change_request": {
            "attributes": {
               "value": "<br>\n\n## \ud83d\udca5\u2002Change Request\n"
            },
            "type": "markdown"
         },
         "heading_feature_request": {
            "attributes": {
               "value": "<br>\n\n## \u2728\u2002Feature Request\n"
            },
            "type": "markdown"
         },
         "issue_summary": {
            "attributes": {
               "description": "Please provide a summary of the issue.",
               "label": "Summary"
            },
            "changelog": true,
            "id": "summary",
            "type": "textarea",
            "validations": {
               "required": true
            }
         },
         "mre_generic": {
            "attributes": {
               "description": "Please provide an exact step-by-step instruction to reproduce the problem. You can also include screenshots/recordings by dragging and dropping them here.",
               "label": "Minimal Reproducible Example (MRE)",
               "placeholder": "1. ...\n2. ...\n3. ...\n"
            },
            "id": "mre",
            "type": "textarea",
            "validations": {
               "required": true
            }
         },
         "proposal": {
            "attributes": {
               "description": "Please describe your proposal in detail.",
               "label": "Proposal"
            },
            "changelog": true,
            "id": "proposal",
            "type": "textarea",
            "validations": {
               "required": true
            }
         },
         "stderr_optional": {
            "attributes": {
               "description": "If applicable, provide the full traceback of the error message.",
               "label": "Error Message",
               "render": "shell"
            },
            "id": "stderr",
            "type": "textarea",
            "validations": {
               "required": false
            }
         },
         "title_api": "\u2002\ud83d\udda5\u2002API",
         "title_breaking": "\u2002\ud83d\udca5\u2002Change Request",
         "title_bug": "\u2002\ud83d\udc1e\u2002Bug Report",
         "title_cli": "\u2002\u2328\ufe0f\u2002CLI",
         "title_doc": "\u2002\ud83d\udcda\u2002Docs",
         "title_feat": "\u2002\u2728\u2002Feature Request",
         "title_gui": "\u2002\ud83d\uddb1\u2002GUI",
         "title_pkg": "\u2002\ud83d\udce6\u2002App",
         "title_setup": "\u2002\u2699\ufe0f\u2002Setup",
         "title_test": "\u2002\ud83e\uddea\u2002Tests",
         "verify_bug": {
            "attributes": {
               "value": "### \u26a0\ufe0f\u2002Verifying the Bug\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://pypackit.repodynamics.com/contribute\">Bug Report Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">The issue you are experiencing is in fact a bug, and not a documented expected behavior.</p>\n- <p align=\"justify\">The bug is reproducible in the latest version of the release, and has not yet been reported.</p>\n"
            },
            "type": "markdown"
         },
         "verify_change": {
            "attributes": {
               "value": "### \u26a0\ufe0f\u2002Verifying the Request\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://pypackit.repodynamics.com/contribute\">Change Request Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">Your request is for a backward-incompatible change, and not a new feature, improvement, or bug fix.</p>\n- <p align=\"justify\">The request is not implemented in the latest version of the release, and has not yet been filed.</p>\n"
            },
            "type": "markdown"
         },
         "verify_feat": {
            "attributes": {
               "value": "### \u26a0\ufe0f\u2002Verifying the Request\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://pypackit.repodynamics.com/contribute\">Feature Request Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">Your request is for a backward-compatible change, and not a breaking change or a bug fix.</p>\n- <p align=\"justify\">The request is not implemented in the latest version of the release, and has not yet been filed.</p>\n"
            },
            "type": "markdown"
         },
         "version": {
            "attributes": {
               "default": 0,
               "description": "Please select all relevant PyPackIT versions.\n",
               "label": "Version",
               "multiple": true,
               "options": [
                  "0.0.0"
               ]
            },
            "id": "version",
            "type": "dropdown",
            "validations": {
               "required": true
            }
         }
      },
      "blank_enabled": false,
      "contact_links": [
         {
            "about": "Not sure where to start? Read our contribution guide to learn more.",
            "name": "\ud83c\udf93\ufe0f\u2002 Learn More",
            "url": "https://pypackit.repodynamics.com/contribute"
         },
         {
            "about": "Have another inquiry or need help? Contact us directly!",
            "name": "\ud83d\udcac\u2002 Contact Us",
            "url": "https://pypackit.repodynamics.com/about/contact"
         }
      ],
      "forms": [
         {
            "__data__": {
               "pkg_entry_description": "Python application programming interface",
               "pkg_entry_name": "API",
               "pkg_name": "PyPackIT",
               "python_api_names": [
                  "pypackit"
               ]
            },
            "active": true,
            "body": [
               {
                  "active": true,
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on PyPackIT;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for reporting a <b>non-security-related bug in PyPackIT's API</b>, i.e. an unexpected behavior or result in PyPackIT's Python application programming interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/RepoDynamics/PyPackIT/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/RepoDynamics/PyPackIT/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Bug\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://pypackit.repodynamics.com/contribute\">Bug Report Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">The issue you are experiencing is in fact a bug, and not a documented expected behavior.</p>\n- <p align=\"justify\">The bug is reproducible in the latest version of the release, and has not yet been reported.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following PyPackIT's [Contribution Guidelines](https://pypackit.repodynamics.com/contribute).",
                           "required": true
                        },
                        {
                           "label": "I agree to follow PyPackIT's [Code of Conduct](https://github.com/RepoDynamics/PyPackIT/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "Thank you again for filling out this issue ticket.\nIf you are willing to collaborate on its design and implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83c\udf9b\u2002Environment Specifications\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please select all operating systems on which you have encountered the bug.\n",
                     "label": "Operating System",
                     "multiple": true,
                     "options": [
                        "Linux (arm64)",
                        "Linux (x64)",
                        "Windows (x64)",
                        "macOS (arm64)",
                        "macOS (x64)"
                     ]
                  },
                  "changelog": false,
                  "id": "os",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all Python versions in which you have encountered the bug.\n",
                     "label": "Python Version",
                     "multiple": true,
                     "options": [
                        "3.13",
                        "3.12",
                        "3.11",
                        "3.10"
                     ]
                  },
                  "changelog": false,
                  "id": "python_versions",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select the package manager used to download and install PyPackIT.\n",
                     "label": "Package Manager",
                     "multiple": false,
                     "options": [
                        "conda",
                        "pip"
                     ]
                  },
                  "changelog": false,
                  "id": "package_manager",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide the details of all installed packages and their exact versions in the environment where you have encountered the bug. Follow the instructions below based on the package manager you have selected:\n1. **`pip`**: Run `pip freeze > requirements.txt` in your terminal within the environment, and copy the contents of the generated `requirements.txt` file here.\n2. **`conda`**: Run `conda env export > environment.yml` in your terminal within the environment (or alternatively `conda env export -n {YOUR_ENVIRONMENT_NAME} > environment.yml`), and copy the contents of the generated `environment.yml` file here.",
                     "label": "Environment",
                     "render": "yaml"
                  },
                  "changelog": false,
                  "id": "environment",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udc1e\u2002Bug Report\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant PyPackIT versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "changelog": false,
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select the relevant API entry point.",
                     "label": "API Entry Point",
                     "multiple": false,
                     "options": [
                        "pypackit"
                     ]
                  },
                  "changelog": false,
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide the fully qualified name (minus the entry point) of the relevant API endpoint. For example, for a method at `pypackit.module_name.ClassName.method_name` in the entry point `pypackit`, you should write `module_name.ClassName.method_name`.",
                     "label": "Fully Qualified Name",
                     "placeholder": "module_name.ClassName.method_name"
                  },
                  "changelog": false,
                  "id": "endpoint",
                  "type": "input",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "changelog": true,
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide a [test case](https://docs.pytest.org/en/stable/getting-started.html) that demonstrates the bug:\n- At the top of the code block below, add the minimum number of imports required to reproduce the bug.\n- Replace the ellipsis (`...`) in the `test` function with a [Minimal Reproducible Example](https://stackoverflow.com/help/minimal-reproducible-example) (MRE). Use [`assert` statements](https://docs.pytest.org/en/stable/how-to/assert.html) to specify the expected results.",
                     "label": "Test Case",
                     "render": "python",
                     "value": "import pypackit\n\n\ndef test():\n    ...\n"
                  },
                  "changelog": false,
                  "id": "test_case",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "commit": "pkg_api_fix",
            "description": "Report problems and errors in PyPackIT's API.",
            "id": "pkg_api_fix",
            "id_labels": [
               [
                  "type",
                  "fix"
               ],
               [
                  "scope",
                  "pkg"
               ],
               [
                  "component",
                  "api"
               ]
            ],
            "labels": [
               [
                  "commit",
                  "pkg_api_fix"
               ],
               [
                  "release",
                  "patch"
               ]
            ],
            "name": "\u2002\ud83d\udce6\u2002App\u2002\ud83d\udda5\u2002API\u2002\ud83d\udc1e\u2002Bug Report"
         },
         {
            "__data__": {
               "cli_names": [
                  "pypackit"
               ],
               "pkg_entry_description": "command-line interface",
               "pkg_entry_name": "CLI",
               "pkg_name": "PyPackIT"
            },
            "active": true,
            "body": [
               {
                  "active": true,
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on PyPackIT;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for reporting a <b>non-security-related bug in PyPackIT's CLI</b>, i.e. an unexpected behavior or result in PyPackIT's command-line interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/RepoDynamics/PyPackIT/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/RepoDynamics/PyPackIT/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Bug\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://pypackit.repodynamics.com/contribute\">Bug Report Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">The issue you are experiencing is in fact a bug, and not a documented expected behavior.</p>\n- <p align=\"justify\">The bug is reproducible in the latest version of the release, and has not yet been reported.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following PyPackIT's [Contribution Guidelines](https://pypackit.repodynamics.com/contribute).",
                           "required": true
                        },
                        {
                           "label": "I agree to follow PyPackIT's [Code of Conduct](https://github.com/RepoDynamics/PyPackIT/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "Thank you again for filling out this issue ticket.\nIf you are willing to collaborate on its design and implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83c\udf9b\u2002Environment Specifications\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please select all operating systems on which you have encountered the bug.\n",
                     "label": "Operating System",
                     "multiple": true,
                     "options": [
                        "Linux (arm64)",
                        "Linux (x64)",
                        "Windows (x64)",
                        "macOS (arm64)",
                        "macOS (x64)"
                     ]
                  },
                  "changelog": false,
                  "id": "os",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all Python versions in which you have encountered the bug.\n",
                     "label": "Python Version",
                     "multiple": true,
                     "options": [
                        "3.13",
                        "3.12",
                        "3.11",
                        "3.10"
                     ]
                  },
                  "changelog": false,
                  "id": "python_versions",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select the package manager used to download and install PyPackIT.\n",
                     "label": "Package Manager",
                     "multiple": false,
                     "options": [
                        "conda",
                        "pip"
                     ]
                  },
                  "changelog": false,
                  "id": "package_manager",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide the details of all installed packages and their exact versions in the environment where you have encountered the bug. Follow the instructions below based on the package manager you have selected:\n1. **`pip`**: Run `pip freeze > requirements.txt` in your terminal within the environment, and copy the contents of the generated `requirements.txt` file here.\n2. **`conda`**: Run `conda env export > environment.yml` in your terminal within the environment (or alternatively `conda env export -n {YOUR_ENVIRONMENT_NAME} > environment.yml`), and copy the contents of the generated `environment.yml` file here.",
                     "label": "Environment",
                     "render": "yaml"
                  },
                  "changelog": false,
                  "id": "environment",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udc1e\u2002Bug Report\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant PyPackIT versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "changelog": false,
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select the relevant CLI entry point.",
                     "label": "CLI Entry Point",
                     "multiple": false,
                     "options": [
                        "pypackit"
                     ]
                  },
                  "changelog": false,
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "changelog": true,
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide a [test case](https://docs.pytest.org/en/stable/getting-started.html) that demonstrates the bug:\n- In the `test` function below, replace the value of `command` with the exact command that is causing the problem.\n- Replace the value of `expected_return_code` with the expected return code of the command.\n- Replace the value of `expected_output` with the expected output of the command. Use [`assert` statements](https://docs.pytest.org/en/stable/how-to/assert.html) to specify the expected results.\n- If the command has side effects, add further [`assert` statements](https://docs.pytest.org/en/stable/how-to/assert.html) to specify the expected results.",
                     "label": "Test Case",
                     "render": "python",
                     "value": "import subprocess\n\n\ndef test():\n    command = \"\"\n    expected_return_code = 0\n    expected_output = b\"\"\n\n    result = subprocess.run(command, stdout=subprocess.PIPE, shell=True)\n    assert result.returncode == expected_return_code\n    assert result.stdout == expected_output\n"
                  },
                  "changelog": false,
                  "id": "test_case",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "commit": "pkg_cli_fix",
            "description": "Report problems and errors in PyPackIT's CLI.",
            "id": "pkg_cli_fix",
            "id_labels": [
               [
                  "type",
                  "fix"
               ],
               [
                  "scope",
                  "pkg"
               ],
               [
                  "component",
                  "cli"
               ]
            ],
            "labels": [
               [
                  "commit",
                  "pkg_cli_fix"
               ],
               [
                  "release",
                  "patch"
               ]
            ],
            "name": "\u2002\ud83d\udce6\u2002App\u2002\u2328\ufe0f\u2002CLI\u2002\ud83d\udc1e\u2002Bug Report"
         },
         {
            "__data__": {
               "gui_names": [],
               "pkg_entry_description": "graphical user interface",
               "pkg_entry_name": "GUI",
               "pkg_name": "PyPackIT"
            },
            "active": false,
            "body": [
               {
                  "active": true,
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on PyPackIT;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for reporting a <b>non-security-related bug in PyPackIT's GUI</b>, i.e. an unexpected behavior or result in PyPackIT's graphical user interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/RepoDynamics/PyPackIT/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/RepoDynamics/PyPackIT/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Bug\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://pypackit.repodynamics.com/contribute\">Bug Report Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">The issue you are experiencing is in fact a bug, and not a documented expected behavior.</p>\n- <p align=\"justify\">The bug is reproducible in the latest version of the release, and has not yet been reported.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following PyPackIT's [Contribution Guidelines](https://pypackit.repodynamics.com/contribute).",
                           "required": true
                        },
                        {
                           "label": "I agree to follow PyPackIT's [Code of Conduct](https://github.com/RepoDynamics/PyPackIT/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "Thank you again for filling out this issue ticket.\nIf you are willing to collaborate on its design and implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83c\udf9b\u2002Environment Specifications\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please select all operating systems on which you have encountered the bug.\n",
                     "label": "Operating System",
                     "multiple": true,
                     "options": [
                        "Linux (arm64)",
                        "Linux (x64)",
                        "Windows (x64)",
                        "macOS (arm64)",
                        "macOS (x64)"
                     ]
                  },
                  "changelog": false,
                  "id": "os",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all Python versions in which you have encountered the bug.\n",
                     "label": "Python Version",
                     "multiple": true,
                     "options": [
                        "3.13",
                        "3.12",
                        "3.11",
                        "3.10"
                     ]
                  },
                  "changelog": false,
                  "id": "python_versions",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select the package manager used to download and install PyPackIT.\n",
                     "label": "Package Manager",
                     "multiple": false,
                     "options": [
                        "conda",
                        "pip"
                     ]
                  },
                  "changelog": false,
                  "id": "package_manager",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide the details of all installed packages and their exact versions in the environment where you have encountered the bug. Follow the instructions below based on the package manager you have selected:\n1. **`pip`**: Run `pip freeze > requirements.txt` in your terminal within the environment, and copy the contents of the generated `requirements.txt` file here.\n2. **`conda`**: Run `conda env export > environment.yml` in your terminal within the environment (or alternatively `conda env export -n {YOUR_ENVIRONMENT_NAME} > environment.yml`), and copy the contents of the generated `environment.yml` file here.",
                     "label": "Environment",
                     "render": "yaml"
                  },
                  "changelog": false,
                  "id": "environment",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udc1e\u2002Bug Report\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant PyPackIT versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "changelog": false,
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select the affected GUI entry point.",
                     "label": "GUI Entry Point",
                     "multiple": false,
                     "options": []
                  },
                  "changelog": false,
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "changelog": true,
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide an exact step-by-step instruction to reproduce the problem. You can also include screenshots/recordings by dragging and dropping them here.",
                     "label": "Minimal Reproducible Example (MRE)",
                     "placeholder": "1. ...\n2. ...\n3. ...\n"
                  },
                  "changelog": false,
                  "id": "mre",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "If applicable, provide the full traceback of the error message.",
                     "label": "Error Message",
                     "render": "shell"
                  },
                  "changelog": false,
                  "id": "stderr",
                  "type": "textarea",
                  "validations": {
                     "required": false
                  }
               }
            ],
            "commit": "pkg_gui_fix",
            "description": "Report problems and errors in PyPackIT's GUI.",
            "id": "pkg_gui_fix",
            "id_labels": [
               [
                  "type",
                  "fix"
               ],
               [
                  "scope",
                  "pkg"
               ],
               [
                  "component",
                  "gui"
               ]
            ],
            "labels": [
               [
                  "commit",
                  "pkg_gui_fix"
               ],
               [
                  "release",
                  "patch"
               ]
            ],
            "name": "\u2002\ud83d\udce6\u2002App\u2002\ud83d\uddb1\u2002GUI\u2002\ud83d\udc1e\u2002Bug Report"
         },
         {
            "active": true,
            "body": [
               {
                  "active": true,
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on PyPackIT;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for reporting a <b>non-security-related bug in PyPackIT's setup process</b>, i.e. an unexpected behavior that occurs during the download, installation, or initialization of the application.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/RepoDynamics/PyPackIT/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/RepoDynamics/PyPackIT/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Bug\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://pypackit.repodynamics.com/contribute\">Bug Report Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">The issue you are experiencing is in fact a bug, and not a documented expected behavior.</p>\n- <p align=\"justify\">The bug is reproducible in the latest version of the release, and has not yet been reported.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following PyPackIT's [Contribution Guidelines](https://pypackit.repodynamics.com/contribute).",
                           "required": true
                        },
                        {
                           "label": "I agree to follow PyPackIT's [Code of Conduct](https://github.com/RepoDynamics/PyPackIT/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "Thank you again for filling out this issue ticket.\nIf you are willing to collaborate on its design and implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83c\udf9b\u2002Environment Specifications\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please select all operating systems on which you have encountered the bug.\n",
                     "label": "Operating System",
                     "multiple": true,
                     "options": [
                        "Linux (arm64)",
                        "Linux (x64)",
                        "Windows (x64)",
                        "macOS (arm64)",
                        "macOS (x64)"
                     ]
                  },
                  "changelog": false,
                  "id": "os",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all Python versions in which you have encountered the bug.\n",
                     "label": "Python Version",
                     "multiple": true,
                     "options": [
                        "3.13",
                        "3.12",
                        "3.11",
                        "3.10"
                     ]
                  },
                  "changelog": false,
                  "id": "python_versions",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select the package manager used to download and install PyPackIT.\n",
                     "label": "Package Manager",
                     "multiple": false,
                     "options": [
                        "conda",
                        "pip"
                     ]
                  },
                  "changelog": false,
                  "id": "package_manager",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide the details of all installed packages and their exact versions in the environment where you have encountered the bug. Follow the instructions below based on the package manager you have selected:\n1. **`pip`**: Run `pip freeze > requirements.txt` in your terminal within the environment, and copy the contents of the generated `requirements.txt` file here.\n2. **`conda`**: Run `conda env export > environment.yml` in your terminal within the environment (or alternatively `conda env export -n {YOUR_ENVIRONMENT_NAME} > environment.yml`), and copy the contents of the generated `environment.yml` file here.",
                     "label": "Environment",
                     "render": "yaml"
                  },
                  "changelog": false,
                  "id": "environment",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udc1e\u2002Bug Report\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant PyPackIT versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "changelog": false,
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "changelog": true,
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide an exact step-by-step instruction to reproduce the problem. You can also include screenshots/recordings by dragging and dropping them here.",
                     "label": "Minimal Reproducible Example (MRE)",
                     "placeholder": "1. ...\n2. ...\n3. ...\n"
                  },
                  "changelog": false,
                  "id": "mre",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "If applicable, provide the full traceback of the error message.",
                     "label": "Error Message",
                     "render": "shell"
                  },
                  "changelog": false,
                  "id": "stderr",
                  "type": "textarea",
                  "validations": {
                     "required": false
                  }
               }
            ],
            "commit": "pkg_build_fix",
            "description": "Report problems in downloading, installation, or initialization of PyPackIT.",
            "id": "pkg_build_fix",
            "id_labels": [
               [
                  "type",
                  "fix"
               ],
               [
                  "scope",
                  "pkg"
               ],
               [
                  "component",
                  "build"
               ]
            ],
            "labels": [
               [
                  "commit",
                  "pkg_build_fix"
               ],
               [
                  "release",
                  "patch"
               ]
            ],
            "name": "\u2002\ud83d\udce6\u2002App\u2002\u2699\ufe0f\u2002Setup\u2002\ud83d\udc1e\u2002Bug Report"
         },
         {
            "__data__": {
               "pkg_entry_description": "Python application programming interface",
               "pkg_entry_name": "API",
               "pkg_name": "PyPackIT",
               "python_api_names": [
                  "pypackit"
               ]
            },
            "active": true,
            "body": [
               {
                  "active": true,
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on PyPackIT;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>backward-compatible improvement</b> or <b>new functionality</b> in PyPackIT's API, i.e. a non-breaking change (that is not a bug fix) in PyPackIT's Python application programming interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/RepoDynamics/PyPackIT/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/RepoDynamics/PyPackIT/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Request\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://pypackit.repodynamics.com/contribute\">Feature Request Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">Your request is for a backward-compatible change, and not a breaking change or a bug fix.</p>\n- <p align=\"justify\">The request is not implemented in the latest version of the release, and has not yet been filed.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following PyPackIT's [Contribution Guidelines](https://pypackit.repodynamics.com/contribute).",
                           "required": true
                        },
                        {
                           "label": "I agree to follow PyPackIT's [Code of Conduct](https://github.com/RepoDynamics/PyPackIT/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "Thank you again for filling out this issue ticket.\nIf you are willing to collaborate on its design and implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \u2728\u2002Feature Request\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant PyPackIT versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "changelog": false,
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select the relevant API entry point.",
                     "label": "API Entry Point",
                     "multiple": false,
                     "options": [
                        "pypackit"
                     ]
                  },
                  "changelog": false,
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide the fully qualified name (minus the entry point) of the relevant API endpoint. For example, for a method at `pypackit.module_name.ClassName.method_name` in the entry point `pypackit`, you should write `module_name.ClassName.method_name`.",
                     "label": "Fully Qualified Name",
                     "placeholder": "module_name.ClassName.method_name"
                  },
                  "changelog": false,
                  "id": "endpoint",
                  "type": "input",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "changelog": true,
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "changelog": true,
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "commit": "pkg_api_feat",
            "description": "Request backward-compatible improvements and new functionalities in PyPackIT's API.",
            "id": "pkg_api_feat",
            "id_labels": [
               [
                  "type",
                  "feat"
               ],
               [
                  "scope",
                  "pkg"
               ],
               [
                  "component",
                  "api"
               ]
            ],
            "labels": [
               [
                  "commit",
                  "pkg_api_feat"
               ],
               [
                  "release",
                  "minor"
               ]
            ],
            "name": "\u2002\ud83d\udce6\u2002App\u2002\ud83d\udda5\u2002API\u2002\u2728\u2002Feature Request"
         },
         {
            "__data__": {
               "cli_names": [
                  "pypackit"
               ],
               "pkg_entry_description": "command-line interface",
               "pkg_entry_name": "CLI",
               "pkg_name": "PyPackIT"
            },
            "active": true,
            "body": [
               {
                  "active": true,
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on PyPackIT;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>backward-compatible improvement</b> or <b>new functionality</b> in PyPackIT's CLI, i.e. a non-breaking change (that is not a bug fix) in PyPackIT's command-line interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/RepoDynamics/PyPackIT/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/RepoDynamics/PyPackIT/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Request\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://pypackit.repodynamics.com/contribute\">Feature Request Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">Your request is for a backward-compatible change, and not a breaking change or a bug fix.</p>\n- <p align=\"justify\">The request is not implemented in the latest version of the release, and has not yet been filed.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following PyPackIT's [Contribution Guidelines](https://pypackit.repodynamics.com/contribute).",
                           "required": true
                        },
                        {
                           "label": "I agree to follow PyPackIT's [Code of Conduct](https://github.com/RepoDynamics/PyPackIT/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "Thank you again for filling out this issue ticket.\nIf you are willing to collaborate on its design and implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \u2728\u2002Feature Request\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant PyPackIT versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "changelog": false,
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select the relevant CLI entry point.",
                     "label": "CLI Entry Point",
                     "multiple": false,
                     "options": [
                        "pypackit"
                     ]
                  },
                  "changelog": false,
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "changelog": true,
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "changelog": true,
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "commit": "pkg_cli_feat",
            "description": "Request backward-compatible improvements and new functionalities in PyPackIT's CLI.",
            "id": "pkg_cli_feat",
            "id_labels": [
               [
                  "type",
                  "feat"
               ],
               [
                  "scope",
                  "pkg"
               ],
               [
                  "component",
                  "cli"
               ]
            ],
            "labels": [
               [
                  "commit",
                  "pkg_cli_feat"
               ],
               [
                  "release",
                  "minor"
               ]
            ],
            "name": "\u2002\ud83d\udce6\u2002App\u2002\u2328\ufe0f\u2002CLI\u2002\u2728\u2002Feature Request"
         },
         {
            "__data__": {
               "gui_names": [],
               "pkg_entry_description": "graphical user interface",
               "pkg_entry_name": "GUI",
               "pkg_name": "PyPackIT"
            },
            "active": false,
            "body": [
               {
                  "active": true,
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on PyPackIT;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>backward-compatible improvement</b> or <b>new functionality</b> in PyPackIT's GUI, i.e. a non-breaking change (that is not a bug fix) in PyPackIT's graphical user interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/RepoDynamics/PyPackIT/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/RepoDynamics/PyPackIT/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Request\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://pypackit.repodynamics.com/contribute\">Feature Request Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">Your request is for a backward-compatible change, and not a breaking change or a bug fix.</p>\n- <p align=\"justify\">The request is not implemented in the latest version of the release, and has not yet been filed.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following PyPackIT's [Contribution Guidelines](https://pypackit.repodynamics.com/contribute).",
                           "required": true
                        },
                        {
                           "label": "I agree to follow PyPackIT's [Code of Conduct](https://github.com/RepoDynamics/PyPackIT/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "Thank you again for filling out this issue ticket.\nIf you are willing to collaborate on its design and implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \u2728\u2002Feature Request\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant PyPackIT versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "changelog": false,
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select the affected GUI entry point.",
                     "label": "GUI Entry Point",
                     "multiple": false,
                     "options": []
                  },
                  "changelog": false,
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "changelog": true,
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "changelog": true,
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "commit": "pkg_gui_feat",
            "description": "Request backward-compatible improvements and new functionalities in PyPackIT's GUI.",
            "id": "pkg_gui_feat",
            "id_labels": [
               [
                  "type",
                  "feat"
               ],
               [
                  "scope",
                  "pkg"
               ],
               [
                  "component",
                  "gui"
               ]
            ],
            "labels": [
               [
                  "commit",
                  "pkg_gui_feat"
               ],
               [
                  "release",
                  "minor"
               ]
            ],
            "name": "\u2002\ud83d\udce6\u2002App\u2002\ud83d\uddb1\u2002GUI\u2002\u2728\u2002Feature Request"
         },
         {
            "__data__": {
               "pkg_entry_description": "Python application programming interface",
               "pkg_entry_name": "API",
               "pkg_name": "PyPackIT",
               "python_api_names": [
                  "pypackit"
               ]
            },
            "active": true,
            "body": [
               {
                  "active": true,
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on PyPackIT;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>backward-incompatible change</b> in PyPackIT's API, i.e. a breaking change in behaviour or functionalities of PyPackIT's Python application programming interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/RepoDynamics/PyPackIT/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/RepoDynamics/PyPackIT/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Request\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://pypackit.repodynamics.com/contribute\">Change Request Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">Your request is for a backward-incompatible change, and not a new feature, improvement, or bug fix.</p>\n- <p align=\"justify\">The request is not implemented in the latest version of the release, and has not yet been filed.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following PyPackIT's [Contribution Guidelines](https://pypackit.repodynamics.com/contribute).",
                           "required": true
                        },
                        {
                           "label": "I agree to follow PyPackIT's [Code of Conduct](https://github.com/RepoDynamics/PyPackIT/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "Thank you again for filling out this issue ticket.\nIf you are willing to collaborate on its design and implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udca5\u2002Change Request\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant PyPackIT versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "changelog": false,
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select the relevant API entry point.",
                     "label": "API Entry Point",
                     "multiple": false,
                     "options": [
                        "pypackit"
                     ]
                  },
                  "changelog": false,
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide the fully qualified name (minus the entry point) of the relevant API endpoint. For example, for a method at `pypackit.module_name.ClassName.method_name` in the entry point `pypackit`, you should write `module_name.ClassName.method_name`.",
                     "label": "Fully Qualified Name",
                     "placeholder": "module_name.ClassName.method_name"
                  },
                  "changelog": false,
                  "id": "endpoint",
                  "type": "input",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "changelog": true,
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "changelog": true,
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "commit": "pkg_api_change",
            "description": "Request backward-incompatible changes to PyPackIT's API.",
            "id": "pkg_api_change",
            "id_labels": [
               [
                  "type",
                  "change"
               ],
               [
                  "scope",
                  "pkg"
               ],
               [
                  "component",
                  "api"
               ]
            ],
            "labels": [
               [
                  "commit",
                  "pkg_api_change"
               ],
               [
                  "release",
                  "major"
               ]
            ],
            "name": "\u2002\ud83d\udce6\u2002App\u2002\ud83d\udda5\u2002API\u2002\ud83d\udca5\u2002Change Request"
         },
         {
            "__data__": {
               "cli_names": [
                  "pypackit"
               ],
               "pkg_entry_description": "command-line interface",
               "pkg_entry_name": "CLI",
               "pkg_name": "PyPackIT"
            },
            "active": true,
            "body": [
               {
                  "active": true,
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on PyPackIT;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>backward-incompatible change</b> in PyPackIT's CLI, i.e. a breaking change in behaviour or functionalities of PyPackIT's command-line interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/RepoDynamics/PyPackIT/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/RepoDynamics/PyPackIT/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Request\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://pypackit.repodynamics.com/contribute\">Change Request Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">Your request is for a backward-incompatible change, and not a new feature, improvement, or bug fix.</p>\n- <p align=\"justify\">The request is not implemented in the latest version of the release, and has not yet been filed.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following PyPackIT's [Contribution Guidelines](https://pypackit.repodynamics.com/contribute).",
                           "required": true
                        },
                        {
                           "label": "I agree to follow PyPackIT's [Code of Conduct](https://github.com/RepoDynamics/PyPackIT/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "Thank you again for filling out this issue ticket.\nIf you are willing to collaborate on its design and implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udca5\u2002Change Request\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant PyPackIT versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "changelog": false,
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select the relevant CLI entry point.",
                     "label": "CLI Entry Point",
                     "multiple": false,
                     "options": [
                        "pypackit"
                     ]
                  },
                  "changelog": false,
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "changelog": true,
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "changelog": true,
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "commit": "pkg_cli_change",
            "description": "Request backward-incompatible changes to PyPackIT's CLI.",
            "id": "pkg_cli_change",
            "id_labels": [
               [
                  "type",
                  "change"
               ],
               [
                  "scope",
                  "pkg"
               ],
               [
                  "component",
                  "cli"
               ]
            ],
            "labels": [
               [
                  "commit",
                  "pkg_cli_change"
               ],
               [
                  "release",
                  "major"
               ]
            ],
            "name": "\u2002\ud83d\udce6\u2002App\u2002\u2328\ufe0f\u2002CLI\u2002\ud83d\udca5\u2002Change Request"
         },
         {
            "__data__": {
               "gui_names": [],
               "pkg_entry_description": "graphical user interface",
               "pkg_entry_name": "GUI",
               "pkg_name": "PyPackIT"
            },
            "active": false,
            "body": [
               {
                  "active": true,
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on PyPackIT;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>backward-incompatible change</b> in PyPackIT's GUI, i.e. a breaking change in behaviour or functionalities of PyPackIT's graphical user interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/RepoDynamics/PyPackIT/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/RepoDynamics/PyPackIT/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Request\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://pypackit.repodynamics.com/contribute\">Change Request Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">Your request is for a backward-incompatible change, and not a new feature, improvement, or bug fix.</p>\n- <p align=\"justify\">The request is not implemented in the latest version of the release, and has not yet been filed.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following PyPackIT's [Contribution Guidelines](https://pypackit.repodynamics.com/contribute).",
                           "required": true
                        },
                        {
                           "label": "I agree to follow PyPackIT's [Code of Conduct](https://github.com/RepoDynamics/PyPackIT/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "Thank you again for filling out this issue ticket.\nIf you are willing to collaborate on its design and implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udca5\u2002Change Request\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant PyPackIT versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "changelog": false,
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select the affected GUI entry point.",
                     "label": "GUI Entry Point",
                     "multiple": false,
                     "options": []
                  },
                  "changelog": false,
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "changelog": true,
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "changelog": true,
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "commit": "pkg_gui_change",
            "description": "Request backward-incompatible changes to PyPackIT's GUI.",
            "id": "pkg_gui_change",
            "id_labels": [
               [
                  "type",
                  "change"
               ],
               [
                  "scope",
                  "pkg"
               ],
               [
                  "component",
                  "gui"
               ]
            ],
            "labels": [
               [
                  "commit",
                  "pkg_gui_change"
               ],
               [
                  "release",
                  "major"
               ]
            ],
            "name": "\u2002\ud83d\udce6\u2002App\u2002\ud83d\uddb1\u2002GUI\u2002\ud83d\udca5\u2002Change Request"
         },
         {
            "active": true,
            "body": [
               {
                  "active": true,
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on PyPackIT;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for reporting a <b>non-security-related bug in PyPackIT's website and documentation materials</b>, e.g. misspellings and other mechanical errors, broken links and images, layout issues, etc.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/RepoDynamics/PyPackIT/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/RepoDynamics/PyPackIT/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Bug\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://pypackit.repodynamics.com/contribute\">Bug Report Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">The issue you are experiencing is in fact a bug, and not a documented expected behavior.</p>\n- <p align=\"justify\">The bug is reproducible in the latest version of the release, and has not yet been reported.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following PyPackIT's [Contribution Guidelines](https://pypackit.repodynamics.com/contribute).",
                           "required": true
                        },
                        {
                           "label": "I agree to follow PyPackIT's [Code of Conduct](https://github.com/RepoDynamics/PyPackIT/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "Thank you again for filling out this issue ticket.\nIf you are willing to collaborate on its design and implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udc1e\u2002Bug Report\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant PyPackIT versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "changelog": false,
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide the URL of the relevant web page or repository file.",
                     "label": "URL",
                     "placeholder": "https://pypackit.repodynamics.com"
                  },
                  "changelog": false,
                  "id": "url",
                  "type": "input",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "changelog": true,
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide an exact step-by-step instruction to reproduce the problem. You can also include screenshots/recordings by dragging and dropping them here.",
                     "label": "Minimal Reproducible Example (MRE)",
                     "placeholder": "1. ...\n2. ...\n3. ...\n"
                  },
                  "changelog": false,
                  "id": "mre",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "commit": "docs_fix",
            "description": "Report problems and errors in PyPackIT's website and documentation materials.",
            "id": "docs_fix",
            "id_labels": [
               [
                  "type",
                  "fix"
               ],
               [
                  "scope",
                  "docs"
               ]
            ],
            "labels": [
               [
                  "commit",
                  "docs_fix"
               ],
               [
                  "release",
                  "post"
               ]
            ],
            "name": "\u2002\ud83d\udcda\u2002Docs\u2002\ud83d\udc1e\u2002Bug Report"
         },
         {
            "active": true,
            "body": [
               {
                  "active": true,
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on PyPackIT;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>backward-compatible improvement</b> or <b>new content</b> in PyPackIT's website and documentation materials</b>, i.e. a change that is not a bug fix and does not break existing references or functionalities.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/RepoDynamics/PyPackIT/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/RepoDynamics/PyPackIT/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Request\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://pypackit.repodynamics.com/contribute\">Feature Request Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">Your request is for a backward-compatible change, and not a breaking change or a bug fix.</p>\n- <p align=\"justify\">The request is not implemented in the latest version of the release, and has not yet been filed.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following PyPackIT's [Contribution Guidelines](https://pypackit.repodynamics.com/contribute).",
                           "required": true
                        },
                        {
                           "label": "I agree to follow PyPackIT's [Code of Conduct](https://github.com/RepoDynamics/PyPackIT/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "Thank you again for filling out this issue ticket.\nIf you are willing to collaborate on its design and implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \u2728\u2002Feature Request\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant PyPackIT versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "changelog": false,
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide the URL of the relevant web page or repository file.",
                     "label": "URL",
                     "placeholder": "https://pypackit.repodynamics.com"
                  },
                  "changelog": false,
                  "id": "url",
                  "type": "input",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "changelog": true,
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "changelog": true,
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "commit": "docs_feat",
            "description": "Request backward-compatible improvements and new content in PyPackIT's website and documentation materials.",
            "id": "docs_feat",
            "id_labels": [
               [
                  "type",
                  "feat"
               ],
               [
                  "scope",
                  "docs"
               ]
            ],
            "labels": [
               [
                  "commit",
                  "docs_feat"
               ],
               [
                  "release",
                  "post"
               ]
            ],
            "name": "\u2002\ud83d\udcda\u2002Docs\u2002\u2728\u2002Feature Request"
         },
         {
            "active": true,
            "body": [
               {
                  "active": true,
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on PyPackIT;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>backward-incompatible change</b> in PyPackIT's website and documentation materials</b>, i.e. a change that breaks existing references or functionalities.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/RepoDynamics/PyPackIT/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/RepoDynamics/PyPackIT/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Request\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://pypackit.repodynamics.com/contribute\">Change Request Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">Your request is for a backward-incompatible change, and not a new feature, improvement, or bug fix.</p>\n- <p align=\"justify\">The request is not implemented in the latest version of the release, and has not yet been filed.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following PyPackIT's [Contribution Guidelines](https://pypackit.repodynamics.com/contribute).",
                           "required": true
                        },
                        {
                           "label": "I agree to follow PyPackIT's [Code of Conduct](https://github.com/RepoDynamics/PyPackIT/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "Thank you again for filling out this issue ticket.\nIf you are willing to collaborate on its design and implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udca5\u2002Change Request\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant PyPackIT versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "changelog": false,
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide the URL of the relevant web page or repository file.",
                     "label": "URL",
                     "placeholder": "https://pypackit.repodynamics.com"
                  },
                  "changelog": false,
                  "id": "url",
                  "type": "input",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "changelog": true,
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "changelog": true,
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "commit": "docs_change",
            "description": "Request backward-incompatible changes to PyPackIT's website and documentation materials.",
            "id": "docs_change",
            "id_labels": [
               [
                  "type",
                  "change"
               ],
               [
                  "scope",
                  "docs"
               ]
            ],
            "labels": [
               [
                  "commit",
                  "docs_change"
               ],
               [
                  "release",
                  "post"
               ]
            ],
            "name": "\u2002\ud83d\udcda\u2002Docs\u2002\ud83d\udca5\u2002Change Request"
         },
         {
            "__data__": {
               "pkg_entry_description": "Python application programming interface",
               "pkg_entry_name": "API",
               "pkg_name": "PyPackIT-TestSuite",
               "python_api_names": [
                  "pypackit_testsuite"
               ]
            },
            "active": true,
            "body": [
               {
                  "active": true,
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on PyPackIT;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for reporting a <b>non-security-related bug in PyPackIT-TestSuite's API</b>, i.e. an unexpected behavior or result in PyPackIT-TestSuite's Python application programming interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/RepoDynamics/PyPackIT/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/RepoDynamics/PyPackIT/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Bug\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://pypackit.repodynamics.com/contribute\">Bug Report Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">The issue you are experiencing is in fact a bug, and not a documented expected behavior.</p>\n- <p align=\"justify\">The bug is reproducible in the latest version of the release, and has not yet been reported.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following PyPackIT's [Contribution Guidelines](https://pypackit.repodynamics.com/contribute).",
                           "required": true
                        },
                        {
                           "label": "I agree to follow PyPackIT's [Code of Conduct](https://github.com/RepoDynamics/PyPackIT/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "Thank you again for filling out this issue ticket.\nIf you are willing to collaborate on its design and implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83c\udf9b\u2002Environment Specifications\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please select all operating systems on which you have encountered the bug.\n",
                     "label": "Operating System",
                     "multiple": true,
                     "options": [
                        "Linux (arm64)",
                        "Linux (x64)",
                        "Windows (x64)",
                        "macOS (arm64)",
                        "macOS (x64)"
                     ]
                  },
                  "changelog": false,
                  "id": "os",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all Python versions in which you have encountered the bug.\n",
                     "label": "Python Version",
                     "multiple": true,
                     "options": [
                        "3.13",
                        "3.12",
                        "3.11",
                        "3.10"
                     ]
                  },
                  "changelog": false,
                  "id": "python_versions",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select the package manager used to download and install PyPackIT.\n",
                     "label": "Package Manager",
                     "multiple": false,
                     "options": [
                        "conda",
                        "pip"
                     ]
                  },
                  "changelog": false,
                  "id": "package_manager",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide the details of all installed packages and their exact versions in the environment where you have encountered the bug. Follow the instructions below based on the package manager you have selected:\n1. **`pip`**: Run `pip freeze > requirements.txt` in your terminal within the environment, and copy the contents of the generated `requirements.txt` file here.\n2. **`conda`**: Run `conda env export > environment.yml` in your terminal within the environment (or alternatively `conda env export -n {YOUR_ENVIRONMENT_NAME} > environment.yml`), and copy the contents of the generated `environment.yml` file here.",
                     "label": "Environment",
                     "render": "yaml"
                  },
                  "changelog": false,
                  "id": "environment",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udc1e\u2002Bug Report\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant PyPackIT versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "changelog": false,
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select the relevant API entry point.",
                     "label": "API Entry Point",
                     "multiple": false,
                     "options": [
                        "pypackit_testsuite"
                     ]
                  },
                  "changelog": false,
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide the fully qualified name (minus the entry point) of the relevant API endpoint. For example, for a method at `pypackit_testsuite.module_name.ClassName.method_name` in the entry point `pypackit_testsuite`, you should write `module_name.ClassName.method_name`.",
                     "label": "Fully Qualified Name",
                     "placeholder": "module_name.ClassName.method_name"
                  },
                  "changelog": false,
                  "id": "endpoint",
                  "type": "input",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "changelog": true,
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide a [test case](https://docs.pytest.org/en/stable/getting-started.html) that demonstrates the bug:\n- At the top of the code block below, add the minimum number of imports required to reproduce the bug.\n- Replace the ellipsis (`...`) in the `test` function with a [Minimal Reproducible Example](https://stackoverflow.com/help/minimal-reproducible-example) (MRE). Use [`assert` statements](https://docs.pytest.org/en/stable/how-to/assert.html) to specify the expected results.",
                     "label": "Test Case",
                     "render": "python",
                     "value": "import pypackit_testsuite\n\n\ndef test():\n    ...\n"
                  },
                  "changelog": false,
                  "id": "test_case",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "commit": "test_api_fix",
            "description": "Report problems and errors in PyPackIT-TestSuite's API.",
            "id": "test_api_fix",
            "id_labels": [
               [
                  "type",
                  "fix"
               ],
               [
                  "scope",
                  "test"
               ],
               [
                  "scope",
                  "test-api"
               ]
            ],
            "labels": [
               [
                  "commit",
                  "test_api_fix"
               ],
               [
                  "release",
                  "post"
               ]
            ],
            "name": "\u2002\ud83e\uddea\u2002Tests\u2002\ud83d\udda5\u2002API\u2002\ud83d\udc1e\u2002Bug Report"
         },
         {
            "__data__": {
               "cli_names": [
                  "PyPackIT-TestSuite"
               ],
               "pkg_entry_description": "command-line interface",
               "pkg_entry_name": "CLI",
               "pkg_name": "PyPackIT-TestSuite"
            },
            "active": true,
            "body": [
               {
                  "active": true,
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on PyPackIT;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for reporting a <b>non-security-related bug in PyPackIT-TestSuite's CLI</b>, i.e. an unexpected behavior or result in PyPackIT-TestSuite's command-line interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/RepoDynamics/PyPackIT/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/RepoDynamics/PyPackIT/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Bug\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://pypackit.repodynamics.com/contribute\">Bug Report Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">The issue you are experiencing is in fact a bug, and not a documented expected behavior.</p>\n- <p align=\"justify\">The bug is reproducible in the latest version of the release, and has not yet been reported.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following PyPackIT's [Contribution Guidelines](https://pypackit.repodynamics.com/contribute).",
                           "required": true
                        },
                        {
                           "label": "I agree to follow PyPackIT's [Code of Conduct](https://github.com/RepoDynamics/PyPackIT/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "Thank you again for filling out this issue ticket.\nIf you are willing to collaborate on its design and implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83c\udf9b\u2002Environment Specifications\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please select all operating systems on which you have encountered the bug.\n",
                     "label": "Operating System",
                     "multiple": true,
                     "options": [
                        "Linux (arm64)",
                        "Linux (x64)",
                        "Windows (x64)",
                        "macOS (arm64)",
                        "macOS (x64)"
                     ]
                  },
                  "changelog": false,
                  "id": "os",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all Python versions in which you have encountered the bug.\n",
                     "label": "Python Version",
                     "multiple": true,
                     "options": [
                        "3.13",
                        "3.12",
                        "3.11",
                        "3.10"
                     ]
                  },
                  "changelog": false,
                  "id": "python_versions",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select the package manager used to download and install PyPackIT.\n",
                     "label": "Package Manager",
                     "multiple": false,
                     "options": [
                        "conda",
                        "pip"
                     ]
                  },
                  "changelog": false,
                  "id": "package_manager",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide the details of all installed packages and their exact versions in the environment where you have encountered the bug. Follow the instructions below based on the package manager you have selected:\n1. **`pip`**: Run `pip freeze > requirements.txt` in your terminal within the environment, and copy the contents of the generated `requirements.txt` file here.\n2. **`conda`**: Run `conda env export > environment.yml` in your terminal within the environment (or alternatively `conda env export -n {YOUR_ENVIRONMENT_NAME} > environment.yml`), and copy the contents of the generated `environment.yml` file here.",
                     "label": "Environment",
                     "render": "yaml"
                  },
                  "changelog": false,
                  "id": "environment",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udc1e\u2002Bug Report\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant PyPackIT versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "changelog": false,
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select the relevant CLI entry point.",
                     "label": "CLI Entry Point",
                     "multiple": false,
                     "options": [
                        "PyPackIT-TestSuite"
                     ]
                  },
                  "changelog": false,
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "changelog": true,
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide a [test case](https://docs.pytest.org/en/stable/getting-started.html) that demonstrates the bug:\n- In the `test` function below, replace the value of `command` with the exact command that is causing the problem.\n- Replace the value of `expected_return_code` with the expected return code of the command.\n- Replace the value of `expected_output` with the expected output of the command. Use [`assert` statements](https://docs.pytest.org/en/stable/how-to/assert.html) to specify the expected results.\n- If the command has side effects, add further [`assert` statements](https://docs.pytest.org/en/stable/how-to/assert.html) to specify the expected results.",
                     "label": "Test Case",
                     "render": "python",
                     "value": "import subprocess\n\n\ndef test():\n    command = \"\"\n    expected_return_code = 0\n    expected_output = b\"\"\n\n    result = subprocess.run(command, stdout=subprocess.PIPE, shell=True)\n    assert result.returncode == expected_return_code\n    assert result.stdout == expected_output\n"
                  },
                  "changelog": false,
                  "id": "test_case",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "commit": "test_cli_fix",
            "description": "Report problems and errors in PyPackIT-TestSuite's CLI.",
            "id": "test_cli_fix",
            "id_labels": [
               [
                  "type",
                  "fix"
               ],
               [
                  "scope",
                  "test"
               ],
               [
                  "component",
                  "cli"
               ]
            ],
            "labels": [
               [
                  "commit",
                  "test_cli_fix"
               ],
               [
                  "release",
                  "post"
               ]
            ],
            "name": "\u2002\ud83e\uddea\u2002Tests\u2002\u2328\ufe0f\u2002CLI\u2002\ud83d\udc1e\u2002Bug Report"
         },
         {
            "__data__": {
               "gui_names": [],
               "pkg_entry_description": "graphical user interface",
               "pkg_entry_name": "GUI",
               "pkg_name": "PyPackIT-TestSuite"
            },
            "active": false,
            "body": [
               {
                  "active": true,
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on PyPackIT;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for reporting a <b>non-security-related bug in PyPackIT-TestSuite's GUI</b>, i.e. an unexpected behavior or result in PyPackIT-TestSuite's graphical user interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/RepoDynamics/PyPackIT/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/RepoDynamics/PyPackIT/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Bug\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://pypackit.repodynamics.com/contribute\">Bug Report Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">The issue you are experiencing is in fact a bug, and not a documented expected behavior.</p>\n- <p align=\"justify\">The bug is reproducible in the latest version of the release, and has not yet been reported.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following PyPackIT's [Contribution Guidelines](https://pypackit.repodynamics.com/contribute).",
                           "required": true
                        },
                        {
                           "label": "I agree to follow PyPackIT's [Code of Conduct](https://github.com/RepoDynamics/PyPackIT/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "Thank you again for filling out this issue ticket.\nIf you are willing to collaborate on its design and implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83c\udf9b\u2002Environment Specifications\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please select all operating systems on which you have encountered the bug.\n",
                     "label": "Operating System",
                     "multiple": true,
                     "options": [
                        "Linux (arm64)",
                        "Linux (x64)",
                        "Windows (x64)",
                        "macOS (arm64)",
                        "macOS (x64)"
                     ]
                  },
                  "changelog": false,
                  "id": "os",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all Python versions in which you have encountered the bug.\n",
                     "label": "Python Version",
                     "multiple": true,
                     "options": [
                        "3.13",
                        "3.12",
                        "3.11",
                        "3.10"
                     ]
                  },
                  "changelog": false,
                  "id": "python_versions",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select the package manager used to download and install PyPackIT.\n",
                     "label": "Package Manager",
                     "multiple": false,
                     "options": [
                        "conda",
                        "pip"
                     ]
                  },
                  "changelog": false,
                  "id": "package_manager",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide the details of all installed packages and their exact versions in the environment where you have encountered the bug. Follow the instructions below based on the package manager you have selected:\n1. **`pip`**: Run `pip freeze > requirements.txt` in your terminal within the environment, and copy the contents of the generated `requirements.txt` file here.\n2. **`conda`**: Run `conda env export > environment.yml` in your terminal within the environment (or alternatively `conda env export -n {YOUR_ENVIRONMENT_NAME} > environment.yml`), and copy the contents of the generated `environment.yml` file here.",
                     "label": "Environment",
                     "render": "yaml"
                  },
                  "changelog": false,
                  "id": "environment",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udc1e\u2002Bug Report\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant PyPackIT versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "changelog": false,
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select the affected GUI entry point.",
                     "label": "GUI Entry Point",
                     "multiple": false,
                     "options": []
                  },
                  "changelog": false,
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "changelog": true,
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide an exact step-by-step instruction to reproduce the problem. You can also include screenshots/recordings by dragging and dropping them here.",
                     "label": "Minimal Reproducible Example (MRE)",
                     "placeholder": "1. ...\n2. ...\n3. ...\n"
                  },
                  "changelog": false,
                  "id": "mre",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "If applicable, provide the full traceback of the error message.",
                     "label": "Error Message",
                     "render": "shell"
                  },
                  "changelog": false,
                  "id": "stderr",
                  "type": "textarea",
                  "validations": {
                     "required": false
                  }
               }
            ],
            "commit": "test_gui_fix",
            "description": "Report problems and errors in PyPackIT-TestSuite's GUI.",
            "id": "test_gui_fix",
            "id_labels": [
               [
                  "type",
                  "fix"
               ],
               [
                  "scope",
                  "test"
               ],
               [
                  "component",
                  "gui"
               ]
            ],
            "labels": [
               [
                  "commit",
                  "test_gui_fix"
               ],
               [
                  "release",
                  "post"
               ]
            ],
            "name": "\u2002\ud83e\uddea\u2002Tests\u2002\ud83d\uddb1\u2002GUI\u2002\ud83d\udc1e\u2002Bug Report"
         },
         {
            "active": true,
            "body": [
               {
                  "active": true,
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on PyPackIT;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for reporting a <b>non-security-related bug in PyPackIT's setup process</b>, i.e. an unexpected behavior that occurs during the download, installation, or initialization of the application.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/RepoDynamics/PyPackIT/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/RepoDynamics/PyPackIT/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Bug\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://pypackit.repodynamics.com/contribute\">Bug Report Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">The issue you are experiencing is in fact a bug, and not a documented expected behavior.</p>\n- <p align=\"justify\">The bug is reproducible in the latest version of the release, and has not yet been reported.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following PyPackIT's [Contribution Guidelines](https://pypackit.repodynamics.com/contribute).",
                           "required": true
                        },
                        {
                           "label": "I agree to follow PyPackIT's [Code of Conduct](https://github.com/RepoDynamics/PyPackIT/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "Thank you again for filling out this issue ticket.\nIf you are willing to collaborate on its design and implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83c\udf9b\u2002Environment Specifications\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please select all operating systems on which you have encountered the bug.\n",
                     "label": "Operating System",
                     "multiple": true,
                     "options": [
                        "Linux (arm64)",
                        "Linux (x64)",
                        "Windows (x64)",
                        "macOS (arm64)",
                        "macOS (x64)"
                     ]
                  },
                  "changelog": false,
                  "id": "os",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all Python versions in which you have encountered the bug.\n",
                     "label": "Python Version",
                     "multiple": true,
                     "options": [
                        "3.13",
                        "3.12",
                        "3.11",
                        "3.10"
                     ]
                  },
                  "changelog": false,
                  "id": "python_versions",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select the package manager used to download and install PyPackIT.\n",
                     "label": "Package Manager",
                     "multiple": false,
                     "options": [
                        "conda",
                        "pip"
                     ]
                  },
                  "changelog": false,
                  "id": "package_manager",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide the details of all installed packages and their exact versions in the environment where you have encountered the bug. Follow the instructions below based on the package manager you have selected:\n1. **`pip`**: Run `pip freeze > requirements.txt` in your terminal within the environment, and copy the contents of the generated `requirements.txt` file here.\n2. **`conda`**: Run `conda env export > environment.yml` in your terminal within the environment (or alternatively `conda env export -n {YOUR_ENVIRONMENT_NAME} > environment.yml`), and copy the contents of the generated `environment.yml` file here.",
                     "label": "Environment",
                     "render": "yaml"
                  },
                  "changelog": false,
                  "id": "environment",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udc1e\u2002Bug Report\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant PyPackIT versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "changelog": false,
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "changelog": true,
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide an exact step-by-step instruction to reproduce the problem. You can also include screenshots/recordings by dragging and dropping them here.",
                     "label": "Minimal Reproducible Example (MRE)",
                     "placeholder": "1. ...\n2. ...\n3. ...\n"
                  },
                  "changelog": false,
                  "id": "mre",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "If applicable, provide the full traceback of the error message.",
                     "label": "Error Message",
                     "render": "shell"
                  },
                  "changelog": false,
                  "id": "stderr",
                  "type": "textarea",
                  "validations": {
                     "required": false
                  }
               }
            ],
            "commit": "test_build_fix",
            "description": "Report problems in downloading, installation, or initialization of PyPackIT-TestSuite.",
            "id": "test_build_fix",
            "id_labels": [
               [
                  "type",
                  "fix"
               ],
               [
                  "scope",
                  "test"
               ],
               [
                  "component",
                  "build"
               ]
            ],
            "labels": [
               [
                  "commit",
                  "test_build_fix"
               ],
               [
                  "release",
                  "post"
               ]
            ],
            "name": "\u2002\ud83e\uddea\u2002Tests\u2002\u2699\ufe0f\u2002Setup\u2002\ud83d\udc1e\u2002Bug Report"
         },
         {
            "__data__": {
               "pkg_entry_description": "Python application programming interface",
               "pkg_entry_name": "API",
               "pkg_name": "PyPackIT-TestSuite",
               "python_api_names": [
                  "pypackit_testsuite"
               ]
            },
            "active": true,
            "body": [
               {
                  "active": true,
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on PyPackIT;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>backward-compatible improvement</b> or <b>new functionality</b> in PyPackIT-TestSuite's API, i.e. a non-breaking change (that is not a bug fix) in PyPackIT-TestSuite's Python application programming interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/RepoDynamics/PyPackIT/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/RepoDynamics/PyPackIT/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Request\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://pypackit.repodynamics.com/contribute\">Feature Request Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">Your request is for a backward-compatible change, and not a breaking change or a bug fix.</p>\n- <p align=\"justify\">The request is not implemented in the latest version of the release, and has not yet been filed.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following PyPackIT's [Contribution Guidelines](https://pypackit.repodynamics.com/contribute).",
                           "required": true
                        },
                        {
                           "label": "I agree to follow PyPackIT's [Code of Conduct](https://github.com/RepoDynamics/PyPackIT/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "Thank you again for filling out this issue ticket.\nIf you are willing to collaborate on its design and implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \u2728\u2002Feature Request\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant PyPackIT versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "changelog": false,
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select the relevant API entry point.",
                     "label": "API Entry Point",
                     "multiple": false,
                     "options": [
                        "pypackit_testsuite"
                     ]
                  },
                  "changelog": false,
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide the fully qualified name (minus the entry point) of the relevant API endpoint. For example, for a method at `pypackit_testsuite.module_name.ClassName.method_name` in the entry point `pypackit_testsuite`, you should write `module_name.ClassName.method_name`.",
                     "label": "Fully Qualified Name",
                     "placeholder": "module_name.ClassName.method_name"
                  },
                  "changelog": false,
                  "id": "endpoint",
                  "type": "input",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "changelog": true,
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "changelog": true,
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "commit": "test_api_feat",
            "description": "Request backward-compatible improvements and new functionalities in PyPackIT-TestSuite's API.",
            "id": "test_api_feat",
            "id_labels": [
               [
                  "type",
                  "feat"
               ],
               [
                  "scope",
                  "test"
               ],
               [
                  "component",
                  "api"
               ]
            ],
            "labels": [
               [
                  "commit",
                  "test_api_feat"
               ],
               [
                  "release",
                  "post"
               ]
            ],
            "name": "\u2002\ud83e\uddea\u2002Tests\u2002\ud83d\udda5\u2002API\u2002\u2728\u2002Feature Request"
         },
         {
            "__data__": {
               "cli_names": [
                  "PyPackIT-TestSuite"
               ],
               "pkg_entry_description": "command-line interface",
               "pkg_entry_name": "CLI",
               "pkg_name": "PyPackIT-TestSuite"
            },
            "active": true,
            "body": [
               {
                  "active": true,
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on PyPackIT;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>backward-compatible improvement</b> or <b>new functionality</b> in PyPackIT-TestSuite's CLI, i.e. a non-breaking change (that is not a bug fix) in PyPackIT-TestSuite's command-line interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/RepoDynamics/PyPackIT/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/RepoDynamics/PyPackIT/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Request\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://pypackit.repodynamics.com/contribute\">Feature Request Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">Your request is for a backward-compatible change, and not a breaking change or a bug fix.</p>\n- <p align=\"justify\">The request is not implemented in the latest version of the release, and has not yet been filed.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following PyPackIT's [Contribution Guidelines](https://pypackit.repodynamics.com/contribute).",
                           "required": true
                        },
                        {
                           "label": "I agree to follow PyPackIT's [Code of Conduct](https://github.com/RepoDynamics/PyPackIT/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "Thank you again for filling out this issue ticket.\nIf you are willing to collaborate on its design and implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \u2728\u2002Feature Request\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant PyPackIT versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "changelog": false,
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select the relevant CLI entry point.",
                     "label": "CLI Entry Point",
                     "multiple": false,
                     "options": [
                        "PyPackIT-TestSuite"
                     ]
                  },
                  "changelog": false,
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "changelog": true,
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "changelog": true,
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "commit": "test_cli_feat",
            "description": "Request backward-compatible improvements and new functionalities in PyPackIT-TestSuite's CLI.",
            "id": "test_cli_feat",
            "id_labels": [
               [
                  "type",
                  "feat"
               ],
               [
                  "scope",
                  "test"
               ],
               [
                  "component",
                  "cli"
               ]
            ],
            "labels": [
               [
                  "commit",
                  "test_cli_feat"
               ],
               [
                  "release",
                  "post"
               ]
            ],
            "name": "\u2002\ud83e\uddea\u2002Tests\u2002\u2328\ufe0f\u2002CLI\u2002\u2728\u2002Feature Request"
         },
         {
            "__data__": {
               "gui_names": [],
               "pkg_entry_description": "graphical user interface",
               "pkg_entry_name": "GUI",
               "pkg_name": "PyPackIT-TestSuite"
            },
            "active": false,
            "body": [
               {
                  "active": true,
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on PyPackIT;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>backward-compatible improvement</b> or <b>new functionality</b> in PyPackIT-TestSuite's GUI, i.e. a non-breaking change (that is not a bug fix) in PyPackIT-TestSuite's graphical user interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/RepoDynamics/PyPackIT/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/RepoDynamics/PyPackIT/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Request\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://pypackit.repodynamics.com/contribute\">Feature Request Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">Your request is for a backward-compatible change, and not a breaking change or a bug fix.</p>\n- <p align=\"justify\">The request is not implemented in the latest version of the release, and has not yet been filed.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following PyPackIT's [Contribution Guidelines](https://pypackit.repodynamics.com/contribute).",
                           "required": true
                        },
                        {
                           "label": "I agree to follow PyPackIT's [Code of Conduct](https://github.com/RepoDynamics/PyPackIT/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "Thank you again for filling out this issue ticket.\nIf you are willing to collaborate on its design and implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \u2728\u2002Feature Request\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant PyPackIT versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "changelog": false,
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select the affected GUI entry point.",
                     "label": "GUI Entry Point",
                     "multiple": false,
                     "options": []
                  },
                  "changelog": false,
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "changelog": true,
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "changelog": true,
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "commit": "test_gui_feat",
            "description": "Request backward-compatible improvements and new functionalities in PyPackIT-TestSuite's GUI.",
            "id": "test_gui_feat",
            "id_labels": [
               [
                  "type",
                  "feat"
               ],
               [
                  "scope",
                  "test"
               ],
               [
                  "component",
                  "gui"
               ]
            ],
            "labels": [
               [
                  "commit",
                  "test_gui_feat"
               ],
               [
                  "release",
                  "post"
               ]
            ],
            "name": "\u2002\ud83e\uddea\u2002Tests\u2002\ud83d\uddb1\u2002GUI\u2002\u2728\u2002Feature Request"
         },
         {
            "__data__": {
               "pkg_entry_description": "Python application programming interface",
               "pkg_entry_name": "API",
               "pkg_name": "PyPackIT-TestSuite",
               "python_api_names": [
                  "pypackit_testsuite"
               ]
            },
            "active": true,
            "body": [
               {
                  "active": true,
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on PyPackIT;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>backward-incompatible change</b> in PyPackIT-TestSuite's API, i.e. a breaking change in behaviour or functionalities of PyPackIT-TestSuite's Python application programming interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/RepoDynamics/PyPackIT/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/RepoDynamics/PyPackIT/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Request\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://pypackit.repodynamics.com/contribute\">Change Request Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">Your request is for a backward-incompatible change, and not a new feature, improvement, or bug fix.</p>\n- <p align=\"justify\">The request is not implemented in the latest version of the release, and has not yet been filed.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following PyPackIT's [Contribution Guidelines](https://pypackit.repodynamics.com/contribute).",
                           "required": true
                        },
                        {
                           "label": "I agree to follow PyPackIT's [Code of Conduct](https://github.com/RepoDynamics/PyPackIT/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "Thank you again for filling out this issue ticket.\nIf you are willing to collaborate on its design and implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udca5\u2002Change Request\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant PyPackIT versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "changelog": false,
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select the relevant API entry point.",
                     "label": "API Entry Point",
                     "multiple": false,
                     "options": [
                        "pypackit_testsuite"
                     ]
                  },
                  "changelog": false,
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide the fully qualified name (minus the entry point) of the relevant API endpoint. For example, for a method at `pypackit_testsuite.module_name.ClassName.method_name` in the entry point `pypackit_testsuite`, you should write `module_name.ClassName.method_name`.",
                     "label": "Fully Qualified Name",
                     "placeholder": "module_name.ClassName.method_name"
                  },
                  "changelog": false,
                  "id": "endpoint",
                  "type": "input",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "changelog": true,
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "changelog": true,
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "commit": "test_api_change",
            "description": "Request backward-incompatible changes to PyPackIT-TestSuite's API.",
            "id": "test_api_change",
            "id_labels": [
               [
                  "type",
                  "change"
               ],
               [
                  "scope",
                  "test"
               ],
               [
                  "component",
                  "api"
               ]
            ],
            "labels": [
               [
                  "commit",
                  "test_api_change"
               ],
               [
                  "release",
                  "post"
               ]
            ],
            "name": "\u2002\ud83e\uddea\u2002Tests\u2002\ud83d\udda5\u2002API\u2002\ud83d\udca5\u2002Change Request"
         },
         {
            "__data__": {
               "cli_names": [
                  "PyPackIT-TestSuite"
               ],
               "pkg_entry_description": "command-line interface",
               "pkg_entry_name": "CLI",
               "pkg_name": "PyPackIT-TestSuite"
            },
            "active": true,
            "body": [
               {
                  "active": true,
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on PyPackIT;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>backward-incompatible change</b> in PyPackIT-TestSuite's CLI, i.e. a breaking change in behaviour or functionalities of PyPackIT-TestSuite's command-line interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/RepoDynamics/PyPackIT/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/RepoDynamics/PyPackIT/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Request\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://pypackit.repodynamics.com/contribute\">Change Request Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">Your request is for a backward-incompatible change, and not a new feature, improvement, or bug fix.</p>\n- <p align=\"justify\">The request is not implemented in the latest version of the release, and has not yet been filed.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following PyPackIT's [Contribution Guidelines](https://pypackit.repodynamics.com/contribute).",
                           "required": true
                        },
                        {
                           "label": "I agree to follow PyPackIT's [Code of Conduct](https://github.com/RepoDynamics/PyPackIT/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "Thank you again for filling out this issue ticket.\nIf you are willing to collaborate on its design and implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udca5\u2002Change Request\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant PyPackIT versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "changelog": false,
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select the relevant CLI entry point.",
                     "label": "CLI Entry Point",
                     "multiple": false,
                     "options": [
                        "PyPackIT-TestSuite"
                     ]
                  },
                  "changelog": false,
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "changelog": true,
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "changelog": true,
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "commit": "test_cli_change",
            "description": "Request backward-incompatible changes to PyPackIT-TestSuite's CLI.",
            "id": "test_cli_change",
            "id_labels": [
               [
                  "type",
                  "change"
               ],
               [
                  "scope",
                  "test"
               ],
               [
                  "component",
                  "cli"
               ]
            ],
            "labels": [
               [
                  "commit",
                  "test_cli_change"
               ],
               [
                  "release",
                  "post"
               ]
            ],
            "name": "\u2002\ud83e\uddea\u2002Tests\u2002\u2328\ufe0f\u2002CLI\u2002\ud83d\udca5\u2002Change Request"
         },
         {
            "__data__": {
               "gui_names": [],
               "pkg_entry_description": "graphical user interface",
               "pkg_entry_name": "GUI",
               "pkg_name": "PyPackIT-TestSuite"
            },
            "active": false,
            "body": [
               {
                  "active": true,
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on PyPackIT;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>backward-incompatible change</b> in PyPackIT-TestSuite's GUI, i.e. a breaking change in behaviour or functionalities of PyPackIT-TestSuite's graphical user interface.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/RepoDynamics/PyPackIT/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/RepoDynamics/PyPackIT/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26a0\ufe0f\u2002Verifying the Request\n\n<p align=\"justify\">\n  Before submitting a report, please make sure that you are following our\n  <a href=\"https://pypackit.repodynamics.com/contribute\">Change Request Guidelines</a> to verify that:\n</p>\n\n- <p align=\"justify\">Your request is for a backward-incompatible change, and not a new feature, improvement, or bug fix.</p>\n- <p align=\"justify\">The request is not implemented in the latest version of the release, and has not yet been filed.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following PyPackIT's [Contribution Guidelines](https://pypackit.repodynamics.com/contribute).",
                           "required": true
                        },
                        {
                           "label": "I agree to follow PyPackIT's [Code of Conduct](https://github.com/RepoDynamics/PyPackIT/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "Thank you again for filling out this issue ticket.\nIf you are willing to collaborate on its design and implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udca5\u2002Change Request\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant PyPackIT versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "changelog": false,
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select the affected GUI entry point.",
                     "label": "GUI Entry Point",
                     "multiple": false,
                     "options": []
                  },
                  "changelog": false,
                  "id": "entrypoint",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "changelog": true,
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "changelog": true,
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "commit": "test_gui_change",
            "description": "Request backward-incompatible changes to PyPackIT-TestSuite's GUI.",
            "id": "test_gui_change",
            "id_labels": [
               [
                  "type",
                  "change"
               ],
               [
                  "scope",
                  "test"
               ],
               [
                  "component",
                  "gui"
               ]
            ],
            "labels": [
               [
                  "commit",
                  "test_gui_change"
               ],
               [
                  "release",
                  "post"
               ]
            ],
            "name": "\u2002\ud83e\uddea\u2002Tests\u2002\ud83d\uddb1\u2002GUI\u2002\ud83d\udca5\u2002Change Request"
         },
         {
            "active": true,
            "body": [
               {
                  "active": true,
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on PyPackIT;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>code formatting and refactoring</b> in PyPackIT's source files, i.e. a change that improves the code quality, readability, and maintainability, without affecting the code's runtime behavior.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/RepoDynamics/PyPackIT/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/RepoDynamics/PyPackIT/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following PyPackIT's [Contribution Guidelines](https://pypackit.repodynamics.com/contribute).",
                           "required": true
                        },
                        {
                           "label": "I agree to follow PyPackIT's [Code of Conduct](https://github.com/RepoDynamics/PyPackIT/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "Thank you again for filling out this issue ticket.\nIf you are willing to collaborate on its design and implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udca5\u2002Change Request\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant PyPackIT versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "changelog": false,
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "changelog": true,
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "changelog": true,
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "commit": "refactor",
            "description": "Request code formatting and refactoring in PyPackIT's source files.",
            "id": "refactor",
            "id_labels": [
               [
                  "type",
                  "refactor"
               ]
            ],
            "labels": [
               [
                  "scope",
                  "repo"
               ],
               [
                  "commit",
                  "refactor"
               ],
               [
                  "release",
                  "post"
               ]
            ],
            "name": "\u2002\ud83e\uddf9\ufe0f\u2002Refactoring Request"
         },
         {
            "active": true,
            "body": [
               {
                  "active": true,
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on PyPackIT;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>reconfiguration</b> in PyPackIT's metadata and settings, such as project information and other options that do not fall under other issue categories.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/RepoDynamics/PyPackIT/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/RepoDynamics/PyPackIT/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following PyPackIT's [Contribution Guidelines](https://pypackit.repodynamics.com/contribute).",
                           "required": true
                        },
                        {
                           "label": "I agree to follow PyPackIT's [Code of Conduct](https://github.com/RepoDynamics/PyPackIT/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "Thank you again for filling out this issue ticket.\nIf you are willing to collaborate on its design and implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udca5\u2002Change Request\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant PyPackIT versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "changelog": false,
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide the URL of the relevant configuration file in the repository.",
                     "label": "URL",
                     "placeholder": "https://github.com/RepoDynamics/PyPackIT/blob/main/.control/control.yaml"
                  },
                  "changelog": false,
                  "id": "url",
                  "type": "input",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide the JSONPath expression to the relevant configuration field.",
                     "label": "Path",
                     "placeholder": "$.license.expression"
                  },
                  "changelog": false,
                  "id": "jsonpath",
                  "type": "input",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "changelog": true,
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "changelog": true,
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "commit": "config",
            "description": "Request a change in PyPackIT's metadata and settings.",
            "id": "config",
            "id_labels": [
               [
                  "type",
                  "config"
               ]
            ],
            "labels": [
               [
                  "scope",
                  "repo"
               ],
               [
                  "commit",
                  "config"
               ],
               [
                  "release",
                  "local"
               ]
            ],
            "name": "\u2002\ud83d\udee0\ufe0f\u2002Configuration Request"
         },
         {
            "active": true,
            "body": [
               {
                  "active": true,
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on PyPackIT;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>change in PyPackIT's automated workflows and development environment</b>, such as CI/CD pipelines, testing, and deployment configurations.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/RepoDynamics/PyPackIT/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/RepoDynamics/PyPackIT/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following PyPackIT's [Contribution Guidelines](https://pypackit.repodynamics.com/contribute).",
                           "required": true
                        },
                        {
                           "label": "I agree to follow PyPackIT's [Code of Conduct](https://github.com/RepoDynamics/PyPackIT/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "Thank you again for filling out this issue ticket.\nIf you are willing to collaborate on its design and implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udca5\u2002Change Request\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant PyPackIT versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "changelog": false,
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide the URL of the relevant configuration file in the repository.",
                     "label": "URL",
                     "placeholder": "https://github.com/RepoDynamics/PyPackIT/blob/main/.control/control.yaml"
                  },
                  "changelog": false,
                  "id": "url",
                  "type": "input",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide the JSONPath expression to the relevant configuration field.",
                     "label": "Path",
                     "placeholder": "$.license.expression"
                  },
                  "changelog": false,
                  "id": "jsonpath",
                  "type": "input",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "changelog": true,
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "changelog": true,
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "commit": "ci",
            "description": "Request a change in PyPackIT's automated workflows and development environment.",
            "id": "ci",
            "id_labels": [
               [
                  "type",
                  "ci"
               ]
            ],
            "labels": [
               [
                  "scope",
                  "repo"
               ],
               [
                  "commit",
                  "ci"
               ],
               [
                  "release",
                  "local"
               ]
            ],
            "name": "\u2002\ud83e\udd16\ufe0f\u2002DevOps Request"
         },
         {
            "active": true,
            "body": [
               {
                  "active": true,
                  "attributes": {
                     "value": "<p align=\"justify\">\n  Thank you for providing feedback on PyPackIT;\n  we greatly appreciate your contribution!\n  Before submitting a ticket,\n  please take a moment to review and accept our terms and conditions.\n</p>"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83e\udd1d\u2002Terms and Conditions\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u26d4\u2002Choosing the Right Form\n\n<p align=\"justify\">\n  Please note that this form is specifically for requesting a <b>maintenance job</b> in PyPackIT, such as file cleanup and other tasks that do not fall under other issue categories.,\n  For other types of issues and requests, select the appropriate form\n  from the <a href=\"https://github.com/RepoDynamics/PyPackIT/issues/new/choose\">issue template chooser</a>.\n  If you are unsure about which form to choose or have another inquiry,\n  please open a discussion in our <a href=\"https://github.com/RepoDynamics/PyPackIT/discussions\">discussion forum</a>.\n</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2139\ufe0f\u2002Choosing the Right Title\n\n<p align=\"justify\">Please write a concise and descriptive title and\nuse relevant keywords to help others find the issue.</p>\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \u2705\u2002Agreements"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "To submit an issue, please agree to the following terms and conditions:",
                     "options": [
                        {
                           "label": "I confirm that I am following PyPackIT's [Contribution Guidelines](https://pypackit.repodynamics.com/contribute).",
                           "required": true
                        },
                        {
                           "label": "I agree to follow PyPackIT's [Code of Conduct](https://github.com/RepoDynamics/PyPackIT/blob/main/CODE_OF_CONDUCT.md).",
                           "required": true
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "terms",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "### \ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Collaboration"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "label": "Thank you again for filling out this issue ticket.\nIf you are willing to collaborate on its design and implementation,\nplease select the option below.\n",
                     "options": [
                        {
                           "label": "I am willing to collaborate on this issue and submit a pull request.",
                           "required": false
                        }
                     ]
                  },
                  "changelog": false,
                  "id": "collab",
                  "type": "checkboxes"
               },
               {
                  "active": true,
                  "attributes": {
                     "value": "<br>\n\n## \ud83d\udca5\u2002Change Request\n"
                  },
                  "changelog": false,
                  "type": "markdown"
               },
               {
                  "active": true,
                  "attributes": {
                     "default": 0,
                     "description": "Please select all relevant PyPackIT versions.\n",
                     "label": "Version",
                     "multiple": true,
                     "options": [
                        "0.0.0"
                     ]
                  },
                  "changelog": false,
                  "id": "version",
                  "type": "dropdown",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please provide a summary of the issue.",
                     "label": "Summary"
                  },
                  "changelog": true,
                  "id": "summary",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               },
               {
                  "active": true,
                  "attributes": {
                     "description": "Please describe your proposal in detail.",
                     "label": "Proposal"
                  },
                  "changelog": true,
                  "id": "proposal",
                  "type": "textarea",
                  "validations": {
                     "required": true
                  }
               }
            ],
            "commit": "chore",
            "description": "Request a maintenance job in PyPackIT.",
            "id": "chore",
            "id_labels": [
               [
                  "type",
                  "chore"
               ]
            ],
            "labels": [
               [
                  "scope",
                  "repo"
               ],
               [
                  "commit",
                  "chore"
               ],
               [
                  "release",
                  "local"
               ]
            ],
            "name": "\u2002\u267b\ufe0f\u2002Maintenance Request"
         }
      ],
      "protocol": {
         "as_comment": false,
         "config": {
            "default": {
               "pr_title": "{{ data.summary }}"
            },
            "end": "\n```\n\n</details>\n",
            "start": "<details id=\"config\"><summary>Config</summary>\n\n```yaml\n"
         },
         "data": {
            "description": {
               "changelog": true,
               "end": "<!-- END: data.description -->",
               "start": "<!-- BEGIN: data.description -->",
               "template_type": "append",
               "value": "\n\n\n"
            },
            "plan": {
               "end": "<!-- END: data.plan -->",
               "start": "<!-- BEGIN: data.plan -->",
               "template_type": "append",
               "value": "\n\n**TBD**\n\n"
            },
            "srs": {
               "end": "<!-- END: data.srs -->",
               "start": "<!-- BEGIN: data.srs -->",
               "template_type": "append",
               "value": "\n\n**TBD**\n\n"
            },
            "summary": {
               "changelog": true,
               "end": "<!-- END: data.summary -->",
               "start": "<!-- BEGIN: data.summary -->",
               "template_type": "append",
               "value": "\n\n**TBD**\n\n"
            },
            "timeline": {
               "end": "<!-- END: data.timeline -->",
               "start": "<!-- BEGIN: data.timeline -->",
               "template": "{%- macro make_entry(actor, description) -%}\n  | {{ now.strftime(\"%Y.%m.%d\") }} | {{ now.strftime(\"%H:%M:%S\") }} | {{ \"{:<32}\".format(actor) }} | {{ \"{:<53}\".format(description) }} |\n{%- endmacro -%}\n\n{%- macro make_description() -%}\n  {%- if action == \"assigned\" -%}\n    {%- if event == \"issues\" -%}\n      Issue assigned to {{ assignee.md_name }}.\n    {%- elif event == \"pull_request\" -%}\n      Pull request assigned to {{ assignee.md_name }}.\n    {%- endif -%}\n  {%- elif action == \"unassigned\" -%}\n    {%- if event == \"issues\" -%}\n      Issue unassigned from {{ assignee.md_name }}.\n    {%- elif event == \"pull_request\" -%}\n      Pull request unassigned from {{ assignee.md_name }}.\n    {%- endif -%}\n  {%- elif action == \"review_requested\" -%}\n    Review assigned to {{ requested_reviewer.md_name }}.\n  {%- elif action == \"review_request_removed\" -%}\n    Review unassigned from {{ requested_reviewer.md_name }}.\n  {%- elif action == \"synchronize\" -%}\n    New commits pushed to [{{ pull_request.head.name }}]({{ pull_request.head.url.homepage }}) (CI [{{ context.run_id }}]({{ context.run_url }})).\n  {%- elif action == \"labeled\" -%}\n    {%- set category = label.category -%}\n    {%- if category == \"type\" -%}\n        Type set to `{{ label.suffix }}`.\n    {%- elif category == \"scope\" -%}\n        Scope set to `{{ label.suffix }}`.\n    {%- elif category == \"version\" -%}\n          Target version set to `{{ label.suffix }}`.\n    {%- elif category == \"branch\" -%}\n          Target branch set to `{{ label.suffix }}`.\n    {%- elif category == \"status\" -%}\n      {%- set status = label.id or label.id -%}\n      {%- if status == \"triage\" -%}\n        Entered the triage phase.\n      {%- elif status == \"rejected\" -%}\n        Rejected and closed.\n      {%- elif status == \"duplicate\" -%}\n        Marked as duplicate and closed.\n      {%- elif status == \"invalid\" -%}\n        Marked as invalid and closed.\n      {%- elif status == \"planning\" -%}\n        Entered the planning phase.\n      {%- elif status == \"requirement_analysis\" -%}\n        Entered the requirement analysis phase.\n      {%- elif status == \"design\" -%}\n        Entered the design phase.\n      {%- elif status == \"implementation\" -%}\n        Entered the implementation phase.\n      {%- elif status == \"testing\" -%}\n        Entered the testing phase.\n      {%- elif status == \"deploy_alpha\" -%}\n        Deployed as alpha release.\n      {%- elif status == \"deploy_beta\" -%}\n        Deployed as beta release.\n      {%- elif status == \"deploy_rc\" -%}\n        Deployed as release candidate.\n      {%- elif status == \"deploy_final\" -%}\n        Deployed as final release.\n      {%- else -%}\n        Status changed to {{ status }}.\n      {%- endif -%}\n    {%- endif -%}\n  {%- elif action == \"opened\" -%}\n    {%- if event == \"issues\" -%}\n      Issue ticket #{{ issue.number }} submitted by {{ issue.user.md_name }}.\n    {%- elif event == \"pull_request\" -%}\n      Pull request #{{ pull_request.number }} opened from branch [{{ pull_request.head.name }}]({{ pull_request.head.url.homepage }}) to branch [{{ pull_request.base.name }}]({{ pull_request.base.url.homepage }}) by {{ pull_request.user.md_name }}.\n    {%- endif -%}\n  {%- endif -%}\n{%- endmacro -%}\n{%- set description = make_description() -%}\n{{ \"\\n\" ~ make_entry(sender.md_name, description) if description else \"\" -}}\n",
               "template_type": "append",
               "value": "\n|    Date    |   Time   |              Actor               |                      Description                      |\n| ---------- | -------- | -------------------------------- | ----------------------------------------------------- |"
            },
            "triage": {
               "end": "<!-- END: data.triage -->",
               "start": "<!-- BEGIN: data.triage -->",
               "template_type": "append",
               "value": "\n\n**TBD**\n\n"
            }
         },
         "inputs": {
            "end": "\nEND: inputs -->",
            "start": "<!-- BEGIN: inputs\n"
         },
         "tasklist": {
            "end": "\n\n<!-- END: tasklist -->",
            "start": "<!-- BEGIN: tasklist -->\n\n",
            "value": "- [ ] commit-type: Summary of task 1.\n  Description of task 1.\n  - [ ] Summary of subtask 1.1.\n    Description of subtask 1.1.\n- [ ] commit-type(scope): Summary of task 2.\n  Description of task 2.\n"
         },
         "template": {
            "body": [
               "{%- for label in form.id_labels + form.labels -%}\n{{\n  mdit.element.badge(\n    service=\"static\",\n    label=label.prefix,\n    args={\"message\": label.suffix if label.prefix else label.name},\n    style=ccc.theme.badge.style,\n    color=label.color,\n    label_color=ccc.theme.badge.color.grey,\n    height=ccc.theme.badge.height,\n  ).source()\n}}{{ \"&nbsp;\" * ccc.theme.badge.separator }}\n{%- endfor -%}\n{%- set versions = labels[\"version\"] | map(attribute='suffix') | join(' | ') -%}\n{{\n  mdit.element.badge(\n    service=\"static\",\n    label=labels[\"version\"][0].prefix,\n    args={\"message\": versions},\n    style=ccc.theme.badge.style,\n    color=labels[\"version\"][0].color,\n    label_color=ccc.theme.badge.color.grey,\n    height=ccc.theme.badge.height,\n  ).source()\n}}\n"
            ],
            "sections": [
               {
                  "body": [
                     {
                        "args": {
                           "kind": "issues",
                           "number": "{{ issue.number }}",
                           "repo": "PyPackIT",
                           "user": "RepoDynamics"
                        },
                        "class": "badges",
                        "height": "23px",
                        "items": [
                           {
                              "args": {
                                 "message": "{{ issue.state }}"
                              },
                              "color": "{{ ccc.theme.badge.color.green if issue.state == \"open\" else ccc.theme.badge.color.red }}",
                              "label": "State",
                              "service": "static"
                           },
                           {
                              "args": {
                                 "message": "{{ status_label.suffix }}"
                              },
                              "color": "{{ status_label.color if status_label.color is defined else ccc.label.status.color }}",
                              "label": "Last Status",
                              "service": "static",
                              "title": "{{ status_label.description }}"
                           },
                           {
                              "args": {
                                 "property": "last-update"
                              },
                              "endpoint": "issue_details",
                              "label": "Last Update",
                              "service": "github"
                           },
                           {
                              "args": {
                                 "property": "comments"
                              },
                              "endpoint": "issue_details",
                              "label": "Comments",
                              "service": "github"
                           }
                        ],
                        "label_color": "#494949",
                        "separator": 2,
                        "style": "flat-square"
                     },
                     "{%- for id in [\"triage\", \"planning\", \"requirement_analysis\", \"design\"] -%}\n- [{{ \"X\" if status_label.id > id else \" \" }}] {{ id.replace(\"_\", \" \").title() }}\n{% endfor -%}\n{%- if pull_requests %}\nThe implementation, testing, and deployment are tracked in the following PRs:\n{% for pull in pull_requests -%}\n- [{{ \"X\" if pull.merged else \" \" }}] #{{ pull.number }} (branch: [`{{ pull.head.name }}`]({{ pull.head.url.homepage }}))\n{% endfor -%}\n{%- endif -%}\n"
                  ],
                  "heading": "Status"
               },
               {
                  "body": [
                     {
                        "args": {
                           "kind": "issues",
                           "number": "{{ issue.number }}",
                           "repo": "PyPackIT",
                           "user": "RepoDynamics"
                        },
                        "class": "badges",
                        "height": "23px",
                        "items": [
                           {
                              "args": {
                                 "message": "{{ form.name }}"
                              },
                              "color": "#0B3C75",
                              "label": "Issue Type",
                              "service": "static",
                              "title": "{{ form.description }}"
                           },
                           {
                              "args": {
                                 "property": "age"
                              },
                              "color": "#0B3C75",
                              "endpoint": "issue_details",
                              "label": "Submitted",
                              "service": "github"
                           },
                           {
                              "args": {
                                 "message": "{{ issue.user.name.full }}"
                              },
                              "color": "#0B3C75",
                              "label": "Submitted By",
                              "link": "{{ issue.user.github.url }}",
                              "service": "static"
                           }
                        ],
                        "label_color": "#494949",
                        "separator": 2,
                        "style": "flat-square"
                     },
                     "### Summary\n\n{% if input.endpoint -%}\n{{\n  mdit.element.badge(\n    service=\"static\",\n    label=\"Endpoint\",\n    args={\"message\": input.entrypoint + \".\" + input.endpoint},\n    style=ccc.theme.badge.style,\n    color=ccc.theme.badge.color.blue,\n    label_color=ccc.theme.badge.color.grey,\n    height=ccc.theme.badge.height,\n  ).source()\n}}{{ \"&nbsp;\" * ccc.theme.badge.separator }}\n{%- elif input.entrypoint -%}\n{{\n  mdit.element.badge(\n    service=\"static\",\n    label=\"Endpoint\",\n    args={\"message\": input.entrypoint},\n    style=ccc.theme.badge.style,\n    color=ccc.theme.badge.color.blue,\n    label_color=ccc.theme.badge.color.grey,\n    height=ccc.theme.badge.height,\n  ).source()\n}}{{ \"&nbsp;\" * ccc.theme.badge.separator }}\n{%- endif -%}\n{%- if input.url %}\n{{\n  mdit.element.badge(\n    service=\"static\",\n    label=\"URL\",\n    args={\"message\": input.url},\n    style=ccc.theme.badge.style,\n    color=ccc.theme.badge.color.blue,\n    label_color=ccc.theme.badge.color.grey,\n    height=ccc.theme.badge.height,\n    link=input.url,\n  ).source()\n}}{{ \"&nbsp;\" * ccc.theme.badge.separator }}\n{%- endif %}\n{%- if input.jsonpath %}\n{{\n  mdit.element.badge(\n    service=\"static\",\n    label=\"JSON Path\",\n    args={\"message\": input.jsonpath},\n    style=ccc.theme.badge.style,\n    color=ccc.theme.badge.color.blue,\n    label_color=ccc.theme.badge.color.grey,\n    height=ccc.theme.badge.height,\n    link=input.url,\n  ).source()\n}}{{ \"&nbsp;\" * ccc.theme.badge.separator }}\n{%- endif %}\n\n{{ input.summary }}\n\n{% if input.proposal -%}\n### Proposal\n\n{{ input.proposal }}\n{%- endif %}\n\n{% if input.test_case -%}\n### Test Case\n\n```python\n{{ input.test_case }}\n```\n{%- endif %}\n\n{% if input.mre -%}\n### Minimal Reproducible Example\n\n{{ input.mre }}\n{%- endif %}\n\n{% if input.stderr -%}\n### Output Log\n\n```bash\n{{ input.stderr }}\n```\n{%- endif %}\n\n{% if input.environment -%}\n### Test Environment\n\n{%- set os_names = input.os | join(' | ') -%}\n{%- set py_vers = input.python_versions | join(' | ') -%}\n{{\n  mdit.element.badges(\n    service=\"static\",\n    style=ccc.theme.badge.style,\n    color=ccc.theme.badge.color.red,\n    label_color=ccc.theme.badge.color.grey,\n    height=ccc.theme.badge.height,\n    items=[\n      {\n        \"label\": \"\u2699\ufe0f Operating Systems\",\n        \"args\": {\"message\": os_names},\n      },\n      {\n        \"label\": \"Python Versions\",\n        \"args\": {\"message\": py_vers},\n        \"logo\": ccc.web.path.source + \"_media/logo_ext/python.svg\",\n        \"logo_type\": \"file\",\n        \"logo_media_type\": \"svg+xml\",\n      },\n      {\n        \"label\": ccc.theme.icon.pkg + \" Package Manager\",\n        \"args\": {\"message\": input.package_manager},\n      },\n    ]\n  )\n}}\n\n<details><summary><b>Environment</b></summary>\n\n```yaml\n{{ input.environment }}\n```\n\n</details>\n{%- endif %}\n"
                  ],
                  "heading": "User Requirements Document (URD)"
               },
               {
                  "body": "{{ data.triage }}\n",
                  "heading": "Triage"
               },
               {
                  "body": "{{ data.summary }}\n\n{{ data.description }}\n",
                  "heading": "Plan"
               },
               {
                  "body": "{{ data.srs }}\n",
                  "heading": "Software Requirements Specification (SRS)"
               },
               {
                  "body": "<div align=\"center\">\n\n{{ data.timeline }}\n\n</div>\n\n{{ config }}\n\n{{ inputs }}\n",
                  "heading": "Timeline"
               }
            ]
         }
      }
   },
   "keywords": [
      "Automation",
      "Cloud-Native Development",
      "Continuous Integration",
      "Continuous Delivery",
      "Continuous Deployment",
      "Continuous Testing",
      "Continuous Refactoring",
      "Continuous Configuration Automation",
      "Continuous Software Engineering",
      "DevOps",
      "Infrastructure as Code",
      "Agile",
      "Dynamic Project Management",
      "Template Repository",
      "Python Package Skeleton",
      "Sphinx Website",
      "Testing Infrastructure",
      "FAIR Software",
      "GitHub Actions",
      "Bot"
   ],
   "label": {
      "branch": {
         "color": "#0366d6",
         "description": "Related to branch {{ branch }} of the repository.",
         "label": {
            "main": {
               "description": "Related to branch main of the repository.",
               "name": "Branch: main",
               "suffix": "main"
            }
         },
         "prefix": "Branch",
         "separator": ": "
      },
      "commit": {
         "color": "#0366d6",
         "label": {
            "chore": {
               "description": "Perform general maintenance and housekeeping activities.",
               "name": "Commit: chore",
               "suffix": "chore"
            },
            "ci": {
               "description": "Change Continuous Integration and Deployment pipelines.",
               "name": "Commit: ci",
               "suffix": "ci"
            },
            "config": {
               "description": "Change project configurations and metadata.",
               "name": "Commit: config",
               "suffix": "config"
            },
            "docs_change": {
               "description": "Introduce backward-incompatible changes in PyPackIT's documentation.",
               "name": "Commit: change(docs)",
               "suffix": "change(docs)"
            },
            "docs_feat": {
               "description": "Add backward-compatible features to PyPackIT's documentation.",
               "name": "Commit: feat(docs)",
               "suffix": "feat(docs)"
            },
            "docs_fix": {
               "description": "Fix bugs in PyPackIT's documentation.",
               "name": "Commit: fix(docs)",
               "suffix": "fix(docs)"
            },
            "pkg_api_change": {
               "description": "Introduce backward-incompatible changes in PyPackIT's API.",
               "name": "Commit: change(pkg-api)",
               "suffix": "change(pkg-api)"
            },
            "pkg_api_feat": {
               "description": "Add backward-compatible features to PyPackIT's API.",
               "name": "Commit: feat(pkg-api)",
               "suffix": "feat(pkg-api)"
            },
            "pkg_api_fix": {
               "description": "Fix bugs in PyPackIT's API.",
               "name": "Commit: fix(pkg-api)",
               "suffix": "fix(pkg-api)"
            },
            "pkg_build_change": {
               "description": "Introduce backward-incompatible changes in PyPackIT's build system.",
               "name": "Commit: change(pkg-build)",
               "suffix": "change(pkg-build)"
            },
            "pkg_build_feat": {
               "description": "Add backward-compatible features to PyPackIT's build system.",
               "name": "Commit: feat(pkg-build)",
               "suffix": "feat(pkg-build)"
            },
            "pkg_build_fix": {
               "description": "Fix bugs in PyPackIT's build system.",
               "name": "Commit: fix(pkg-build)",
               "suffix": "fix(pkg-build)"
            },
            "pkg_cli_change": {
               "description": "Introduce backward-incompatible changes in PyPackIT's CLI.",
               "name": "Commit: change(pkg-cli)",
               "suffix": "change(pkg-cli)"
            },
            "pkg_cli_feat": {
               "description": "Add backward-compatible features to PyPackIT's CLI.",
               "name": "Commit: feat(pkg-cli)",
               "suffix": "feat(pkg-cli)"
            },
            "pkg_cli_fix": {
               "description": "Fix bugs in PyPackIT's CLI.",
               "name": "Commit: fix(pkg-cli)",
               "suffix": "fix(pkg-cli)"
            },
            "pkg_gui_change": {
               "description": "Introduce backward-incompatible changes in PyPackIT's GUI.",
               "name": "Commit: change(pkg-gui)",
               "suffix": "change(pkg-gui)"
            },
            "pkg_gui_feat": {
               "description": "Add backward-compatible features to PyPackIT's GUI.",
               "name": "Commit: feat(pkg-gui)",
               "suffix": "feat(pkg-gui)"
            },
            "pkg_gui_fix": {
               "description": "Fix bugs in PyPackIT's GUI.",
               "name": "Commit: fix(pkg-gui)",
               "suffix": "fix(pkg-gui)"
            },
            "refactor": {
               "description": "Refactor code in PyPackIT.",
               "name": "Commit: refactor",
               "suffix": "refactor"
            },
            "test_api_change": {
               "description": "Introduce backward-incompatible changes in PyPackIT-TestSuite's API.",
               "name": "Commit: change(test-api)",
               "suffix": "change(test-api)"
            },
            "test_api_feat": {
               "description": "Add backward-compatible features to PyPackIT-TestSuite's API.",
               "name": "Commit: feat(test-api)",
               "suffix": "feat(test-api)"
            },
            "test_api_fix": {
               "description": "Fix bugs in PyPackIT-TestSuite's API.",
               "name": "Commit: fix(test-api)",
               "suffix": "fix(test-api)"
            },
            "test_build_change": {
               "description": "Introduce backward-incompatible changes in PyPackIT-TestSuite's build system.",
               "name": "Commit: change(test-build)",
               "suffix": "change(test-build)"
            },
            "test_build_feat": {
               "description": "Add backward-compatible features to PyPackIT-TestSuite's build system.",
               "name": "Commit: feat(test-build)",
               "suffix": "feat(test-build)"
            },
            "test_build_fix": {
               "description": "Fix bugs in PyPackIT-TestSuite's build system.",
               "name": "Commit: fix(test-build)",
               "suffix": "fix(test-build)"
            },
            "test_cli_change": {
               "description": "Introduce backward-incompatible changes in PyPackIT-TestSuite's CLI.",
               "name": "Commit: change(test-cli)",
               "suffix": "change(test-cli)"
            },
            "test_cli_feat": {
               "description": "Add backward-compatible features to PyPackIT-TestSuite's CLI.",
               "name": "Commit: feat(test-cli)",
               "suffix": "feat(test-cli)"
            },
            "test_cli_fix": {
               "description": "Fix bugs in PyPackIT-TestSuite's CLI.",
               "name": "Commit: fix(test-cli)",
               "suffix": "fix(test-cli)"
            },
            "test_gui_change": {
               "description": "Introduce backward-incompatible changes in PyPackIT-TestSuite's GUI.",
               "name": "Commit: change(test-gui)",
               "suffix": "change(test-gui)"
            },
            "test_gui_feat": {
               "description": "Add backward-compatible features to PyPackIT-TestSuite's GUI.",
               "name": "Commit: feat(test-gui)",
               "suffix": "feat(test-gui)"
            },
            "test_gui_fix": {
               "description": "Fix bugs in PyPackIT-TestSuite's GUI.",
               "name": "Commit: fix(test-gui)",
               "suffix": "fix(test-gui)"
            }
         },
         "prefix": "Commit",
         "separator": ": "
      },
      "component": {
         "color": "#0366d6",
         "label": {
            "api": {
               "description": "Related to the Python application programming interface.",
               "name": "Component: \ud83d\udda5 API",
               "suffix": "\ud83d\udda5 API"
            },
            "build": {
               "description": "Related to the build and installation process.",
               "name": "Component: \u2699\ufe0f Build",
               "suffix": "\u2699\ufe0f Build"
            },
            "cli": {
               "description": "Related to the command-line interface.",
               "name": "Component: \u2328\ufe0f CLI",
               "suffix": "\u2328\ufe0f CLI"
            },
            "gui": {
               "description": "Related to the graphical user interface.",
               "name": "Component: \ud83d\uddb1 GUI",
               "suffix": "\ud83d\uddb1 GUI"
            }
         },
         "prefix": "Component",
         "separator": ": "
      },
      "release": {
         "color": "#0366d6",
         "label": {
            "local": {
               "description": "Publish a new local release.",
               "name": "Release: local",
               "suffix": "local"
            },
            "major": {
               "description": "Publish a new major release.",
               "name": "Release: major",
               "suffix": "major"
            },
            "minor": {
               "description": "Publish a new minor release.",
               "name": "Release: minor",
               "suffix": "minor"
            },
            "patch": {
               "description": "Publish a new patch release.",
               "name": "Release: patch",
               "suffix": "patch"
            },
            "post": {
               "description": "Publish a new post release.",
               "name": "Release: post",
               "suffix": "post"
            }
         },
         "prefix": "Release",
         "separator": ": "
      },
      "remark": {
         "color": "#0366d6",
         "label": {
            "discuss": {
               "description": "Requires more discussion.",
               "name": "Remark: Discuss",
               "suffix": "Discuss"
            },
            "need_volunteer": {
               "description": "Requires a volunteer.",
               "name": "Remark: Need Volunteer",
               "suffix": "Need Volunteer"
            },
            "queued": {
               "description": "Queued for processing.",
               "name": "Remark: Queued",
               "suffix": "Queued"
            }
         },
         "prefix": "Remark",
         "separator": ": "
      },
      "scope": {
         "color": "#A00000",
         "label": {
            "docs": {
               "description": "Related to PyPackIT documentation and website.",
               "name": "Scope: \ud83d\udcda docs",
               "suffix": "\ud83d\udcda docs"
            },
            "pkg": {
               "description": "Related to PyPackIT package.",
               "name": "Scope: \ud83d\udce6 app",
               "suffix": "\ud83d\udce6 app"
            },
            "repo": {
               "description": "Related to PyPackIT repository.",
               "name": "Scope: \ud83e\uddf0 repo",
               "suffix": "\ud83e\uddf0 repo"
            },
            "test": {
               "description": "Related to PyPackIT-TestSuite package.",
               "name": "Scope: \ud83e\uddea tests",
               "suffix": "\ud83e\uddea tests"
            }
         },
         "prefix": "Scope",
         "separator": ": "
      },
      "status": {
         "color": "#0366d6",
         "label": {
            "deploy_alpha": {
               "description": "Published as alpha release.",
               "name": "Status: alpha release",
               "suffix": "alpha release"
            },
            "deploy_beta": {
               "description": "Published as beta release.",
               "name": "Status: beta release",
               "suffix": "beta release"
            },
            "deploy_final": {
               "description": "Published as final release.",
               "name": "Status: final release",
               "suffix": "final release"
            },
            "deploy_rc": {
               "description": "Published as release candidate.",
               "name": "Status: release candidate",
               "suffix": "release candidate"
            },
            "design": {
               "description": "The issue is in the design phase.",
               "name": "Status: design",
               "suffix": "design"
            },
            "duplicate": {
               "description": "The issue has been marked as duplicate and closed.",
               "name": "Status: duplicate",
               "suffix": "duplicate"
            },
            "implementation": {
               "description": "The issue is in the implementation phase.",
               "name": "Status: implementation",
               "suffix": "implementation"
            },
            "invalid": {
               "description": "The issue has been marked as invalid and closed.",
               "name": "Status: invalid",
               "suffix": "invalid"
            },
            "planning": {
               "description": "The issue is in the planning phase.",
               "name": "Status: planning",
               "suffix": "planning"
            },
            "rejected": {
               "description": "The issue has been rejected and closed.",
               "name": "Status: rejected",
               "suffix": "rejected"
            },
            "requirement_analysis": {
               "description": "The issue is in the requirement analysis phase.",
               "name": "Status: requirement analysis",
               "suffix": "requirement analysis"
            },
            "testing": {
               "description": "The issue is in the testing phase.",
               "name": "Status: testing",
               "suffix": "testing"
            },
            "triage": {
               "description": "The issue has been submitted and is being triaged.",
               "name": "Status: triage",
               "suffix": "triage"
            }
         },
         "prefix": "Status",
         "separator": ": "
      },
      "type": {
         "color": "#A00000",
         "label": {
            "change": {
               "description": "Introduce a breaking change in a project component.",
               "name": "Type: \ud83d\udca5 breaking change",
               "suffix": "\ud83d\udca5 breaking change"
            },
            "chore": {
               "description": "Perform housekeeping tasks unrelated to project interfaces.",
               "name": "Type: \u267b\ufe0f maintenance",
               "suffix": "\u267b\ufe0f maintenance"
            },
            "ci": {
               "description": "Change automated workflows and development environments.",
               "name": "Type: \ud83e\udd16\ufe0f DevOps",
               "suffix": "\ud83e\udd16\ufe0f DevOps"
            },
            "config": {
               "description": "Change project configurations and metadata.",
               "name": "Type: \ud83d\udee0\ufe0f configuration",
               "suffix": "\ud83d\udee0\ufe0f configuration"
            },
            "feat": {
               "description": "Add a new feature to a project component.",
               "name": "Type: \u2728 new feature",
               "suffix": "\u2728 new feature"
            },
            "fix": {
               "description": "Fix a bug in a project component.",
               "name": "Type: \ud83d\udc1e bug fix",
               "suffix": "\ud83d\udc1e bug fix"
            },
            "refactor": {
               "description": "Refactor code without affecting project interfaces.",
               "name": "Type: \ud83e\uddf9\ufe0f refactoring",
               "suffix": "\ud83e\uddf9\ufe0f refactoring"
            }
         },
         "prefix": "Type",
         "separator": ": "
      },
      "version": {
         "color": "#0366d6",
         "description": "Related to version {{ version }} of the project.",
         "label": {
            "0.0.0": {
               "description": "Related to version 0.0.0 of the project.",
               "name": "Version: 0.0.0",
               "suffix": "0.0.0"
            }
         },
         "prefix": "Version",
         "separator": ": "
      }
   },
   "language": {
      "code": "eng",
      "name": "English"
   },
   "license": {
      "component": {
         "AGPL-3.0-or-later": {
            "alts": {
               "copyright": {
                  "match": ".+",
                  "text": "<year> <name of author>"
               },
               "description": {
                  "match": ".+",
                  "text": "<one line to give the program's name and\n        a brief idea of what it does.>"
               }
            },
            "comments": "This version was released: 19 November 2007. This license identifier refers to the choice to use code under AGPL-3.0-or-later (i.e., AGPL-3.0 or some later version), as distinguished from use of code under AGPL-3.0-only. The license notice (as seen in the Standard License Header field below) states which of these applies the code in the file. The example in the exhibit to the license shows the license notice for the \"or later\" approach.",
            "custom": false,
            "deprecated": false,
            "fsf_libre": true,
            "header_xml": "<?xml version='1.0' encoding='utf-8'?>\n<ns0:standardLicenseHeader xmlns:ns0=\"http://www.spdx.org/license\">\n      <ns0:p>\n        <ns0:alt name=\"description\" match=\".+\">&lt;one line to give the program's name and\n        a brief idea of what it does.&gt;</ns0:alt><ns0:br />\n        Copyright (C) <ns0:alt name=\"copyright\" match=\".+\">&lt;year&gt; &lt;name of author&gt;</ns0:alt>\n      </ns0:p>\n      <ns0:p>\n        This program is free software: you can redistribute it and/or\n        modify it under the terms of the GNU Affero General Public\n        License as published by the Free Software Foundation, either\n        version 3 of the License, or <ns0:optional>(at your option)</ns0:optional> any later version.\n      </ns0:p>\n      <ns0:p>\n        This program is distributed in the hope that it will be useful,\n        but WITHOUT ANY WARRANTY; without even the implied warranty\n        of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n        See the GNU Affero General Public License for more details.\n      </ns0:p>\n      <ns0:p>\n        You should have received a copy of the GNU Affero General\n\tPublic License along with this program. If not, see\n\t&lt;https://www.gnu.org/licenses/&gt;.\n      </ns0:p>\n      </ns0:standardLicenseHeader>",
            "id": "AGPL-3.0-or-later",
            "name": "GNU Affero General Public License v3.0 or later",
            "obsoleted_by": [],
            "optionals": [
               "<?xml version='1.0' encoding='utf-8'?>\n<ns0:optional xmlns:ns0=\"http://www.spdx.org/license\">\n      <ns0:p>\n        END OF TERMS AND CONDITIONS\n      </ns0:p>\n      <ns0:p>\n        How to Apply These Terms to Your New Programs\n      </ns0:p>\n      <ns0:p>\n        If you develop a new program, and you want it to be\n        of the greatest possible use to the public, the best\n        way to achieve this is to make it free software which\n        everyone can redistribute and change under these terms.\n      </ns0:p>\n      <ns0:p>\n        To do so, attach the following notices to the program. It is safest\n        to attach them to the start of each source file to most effectively\n        state the exclusion of warranty; and each file should have at least\n        the \"copyright\" line and a pointer to where the full notice is found.\n      </ns0:p>\n      <ns0:standardLicenseHeader>\n      <ns0:p>\n        <ns0:alt name=\"description\" match=\".+\">&lt;one line to give the program's name and\n        a brief idea of what it does.&gt;</ns0:alt><ns0:br />\n        Copyright (C) <ns0:alt name=\"copyright\" match=\".+\">&lt;year&gt; &lt;name of author&gt;</ns0:alt>\n      </ns0:p>\n      <ns0:p>\n        This program is free software: you can redistribute it and/or\n        modify it under the terms of the GNU Affero General Public\n        License as published by the Free Software Foundation, either\n        version 3 of the License, or <ns0:optional>(at your option)</ns0:optional> any later version.\n      </ns0:p>\n      <ns0:p>\n        This program is distributed in the hope that it will be useful,\n        but WITHOUT ANY WARRANTY; without even the implied warranty\n        of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n        See the GNU Affero General Public License for more details.\n      </ns0:p>\n      <ns0:p>\n        You should have received a copy of the GNU Affero General\n\tPublic License along with this program. If not, see\n\t&lt;https://www.gnu.org/licenses/&gt;.\n      </ns0:p>\n      </ns0:standardLicenseHeader>\n      <ns0:p>\n        Also add information on how to contact you by electronic and paper mail.\n      </ns0:p>\n      <ns0:p>\n        If your software can interact with users remotely through a\n        computer network, you should also make sure that it provides a\n        way for users to get its source. For example, if your program is\n        a web application, its interface could display a \"Source\" link\n        that leads users to an archive of the code. There are many ways\n        you could offer source, and different solutions will be better for\n        different programs; see section 13 for the specific requirements.\n      </ns0:p>\n      <ns0:p>\n        You should also get your employer (if you work as a programmer)\n        or school, if any, to sign a \"copyright disclaimer\" for\n        the program, if necessary. For more information on this,\n\tand how to apply and follow the GNU AGPL, see\n\t&lt;https://www.gnu.org/licenses/&gt;.\n      </ns0:p>\n    </ns0:optional>",
               "<?xml version='1.0' encoding='utf-8'?>\n<ns0:optional xmlns:ns0=\"http://www.spdx.org/license\">(at your option)</ns0:optional>"
            ],
            "osi_approved": true,
            "path": {
               "header_plain": "COPYRIGHT-AGPL-3-0-or-later.md",
               "text_plain": "LICENSE-AGPL-3-0-or-later.md"
            },
            "reference_num": 543,
            "text_xml": "<?xml version='1.0' encoding='utf-8'?>\n<ns0:text xmlns:ns0=\"http://www.spdx.org/license\">\n    <ns0:titleText>\n      <ns0:p>\n        GNU AFFERO GENERAL PUBLIC LICENSE<ns0:br />\n        Version 3, 19 November 2007\n      </ns0:p>\n    </ns0:titleText>\n    <ns0:p>\n      Copyright (C) 2007 Free Software Foundation, Inc.\n      &lt;https://fsf.org/&gt;\n    </ns0:p>\n    <ns0:p>\n      Everyone is permitted to copy and distribute verbatim copies\n      of this license document, but changing it is not allowed.\n    </ns0:p>\n    <ns0:p>\n      Preamble\n    </ns0:p>\n    <ns0:p>\n      The GNU Affero General Public License is a free, copyleft license for\n      software and other kinds of works, specifically designed to ensure\n      cooperation with the community in the case of network server software.\n    </ns0:p>\n    <ns0:p>\n      The licenses for most software and other practical works are\n      designed to take away your freedom to share and change the\n      works. By contrast, our General Public Licenses are intended\n      to guarantee your freedom to share and change all versions of a\n      program--to make sure it remains free software for all its users.\n    </ns0:p>\n    <ns0:p>\n      When we speak of free software, we are referring to freedom, not\n      price. Our General Public Licenses are designed to make sure that you\n      have the freedom to distribute copies of free software (and charge\n      for them if you wish), that you receive source code or can get it\n      if you want it, that you can change the software or use pieces of\n      it in new free programs, and that you know you can do these things.\n    </ns0:p>\n    <ns0:p>\n      Developers that use our General Public Licenses protect\n      your rights with two steps: (1) assert copyright on the\n      software, and (2) offer you this License which gives you legal\n      permission to copy, distribute and/or modify the software.\n    </ns0:p>\n    <ns0:p>\n      A secondary benefit of defending all users' freedom is that improvements\n      made in alternate versions of the program, if they receive widespread\n      use, become available for other developers to incorporate. Many\n      developers of free software are heartened and encouraged by the\n      resulting cooperation. However, in the case of software used on network\n      servers, this result may fail to come about. The GNU General Public\n      License permits making a modified version and letting the public access\n      it on a server without ever releasing its source code to the public.\n    </ns0:p>\n    <ns0:p>\n      The GNU Affero General Public License is designed specifically\n      to ensure that, in such cases, the modified source code becomes\n      available to the community. It requires the operator of a\n      network server to provide the source code of the modified version\n      running there to the users of that server. Therefore, public use\n      of a modified version, on a publicly accessible server, gives\n      the public access to the source code of the modified version.\n    </ns0:p>\n    <ns0:p>\n      An older license, called the Affero General Public License and published\n      by Affero, was designed to accomplish similar goals. This is a different\n      license, not a version of the Affero GPL, but Affero has released a new\n      version of the Affero GPL which permits relicensing under this license.\n    </ns0:p>\n    <ns0:p>\n      The precise terms and conditions for copying,\n      distribution and modification follow.\n    </ns0:p>\n    <ns0:p>\n      TERMS AND CONDITIONS\n    </ns0:p>\n    <ns0:list>\n      <ns0:item>\n        <ns0:bullet>0.</ns0:bullet>\n        Definitions.\n        <ns0:p>\n          \"This License\" refers to version 3 of\n          the GNU Affero General Public License.\n        </ns0:p>\n        <ns0:p>\n          \"Copyright\" also means copyright-like laws that apply\n          to other kinds of works, such as semiconductor masks.\n        </ns0:p>\n        <ns0:p>\n          \"The Program\" refers to any copyrightable work licensed under\n          this License. Each licensee is addressed as \"you\". \"Licensees\"\n          and \"recipients\" may be individuals or organizations.\n        </ns0:p>\n        <ns0:p>\n          To \"modify\" a work means to copy from or adapt all or part of the\n          work in a fashion requiring copyright permission, other than the\n          making of an exact copy. The resulting work is called a \"modified\n          version\" of the earlier work or a work \"based on\" the earlier work.\n        </ns0:p>\n        <ns0:p>\n          A \"covered work\" means either the unmodified\n          Program or a work based on the Program.\n        </ns0:p>\n        <ns0:p>\n          To \"propagate\" a work means to do anything with it that, without\n          permission, would make you directly or secondarily liable for\n          infringement under applicable copyright law, except executing it\n          on a computer or modifying a private copy. Propagation includes\n          copying, distribution (with or without modification), making available\n          to the public, and in some countries other activities as well.\n        </ns0:p>\n        <ns0:p>\n          To \"convey\" a work means any kind of propagation\n          that enables other parties to make or receive copies.\n          Mere interaction with a user through a computer\n          network, with no transfer of a copy, is not conveying.\n        </ns0:p>\n        <ns0:p>\n          An interactive user interface displays \"Appropriate Legal Notices\"\n          to the extent that it includes a convenient and prominently visible\n          feature that (1) displays an appropriate copyright notice, and (2)\n          tells the user that there is no warranty for the work (except to\n          the extent that warranties are provided), that licensees may convey\n          the work under this License, and how to view a copy of this License.\n          If the interface presents a list of user commands or options,\n          such as a menu, a prominent item in the list meets this criterion.\n        </ns0:p>\n      </ns0:item>\n      <ns0:item>\n        <ns0:bullet>1.</ns0:bullet>\n        Source Code.<ns0:br />\n        The \"source code\" for a work means the preferred\n        form of the work for making modifications to it.\n        \"Object code\" means any non-source form of a work.\n        <ns0:p>\n          A \"Standard Interface\" means an interface that either is an official\n          standard defined by a recognized standards body, or, in the case\n          of interfaces specified for a particular programming language,\n          one that is widely used among developers working in that language.\n        </ns0:p>\n        <ns0:p>\n          The \"System Libraries\" of an executable work include anything, other\n          than the work as a whole, that (a) is included in the normal form\n          of packaging a Major Component, but which is not part of that Major\n          Component, and (b) serves only to enable use of the work with that\n          Major Component, or to implement a Standard Interface for which an\n          implementation is available to the public in source code form. A\n          \"Major Component\", in this context, means a major essential component\n          (kernel, window system, and so on) of the specific operating system\n          (if any) on which the executable work runs, or a compiler used to\n          produce the work, or an object code interpreter used to run it.\n        </ns0:p>\n        <ns0:p>\n          The \"Corresponding Source\" for a work in object code form means\n          all the source code needed to generate, install, and (for an\n          executable work) run the object code and to modify the work,\n          including scripts to control those activities. However, it does\n          not include the work's System Libraries, or general-purpose tools\n          or generally available free programs which are used unmodified in\n          performing those activities but which are not part of the work.\n          For example, Corresponding Source includes interface definition\n          files associated with source files for the work, and the source\n          code for shared libraries and dynamically linked subprograms\n          that the work is specifically designed to require, such as by\n          intimate data communication or control flow between those<ns0:br />\n          subprograms and other parts of the work.\n        </ns0:p>\n        <ns0:p>\n          The Corresponding Source need not include anything that users can\n          regenerate automatically from other parts of the Corresponding Source.\n        </ns0:p>\n        <ns0:p>\n          The Corresponding Source for a work\n          in source code form is that same work.\n        </ns0:p>\n      </ns0:item>\n      <ns0:item>\n        <ns0:bullet>2.</ns0:bullet>\n        Basic Permissions.<ns0:br />\n        All rights granted under this License are granted for the term of\n        copyright on the Program, and are irrevocable provided the stated\n        conditions are met. This License explicitly affirms your unlimited\n        permission to run the unmodified Program. The output from running a\n        covered work is covered by this License only if the output, given its\n        content, constitutes a covered work. This License acknowledges your\n        rights of fair use or other equivalent, as provided by copyright law.\n        <ns0:p>\n          You may make, run and propagate covered works that you do not convey,\n          without conditions so long as your license otherwise remains in force.\n          You may convey covered works to others for the sole purpose of having\n          them make modifications exclusively for you, or provide you with\n          facilities for running those works, provided that you comply with\n          the terms of this License in conveying all material for which you do\n          not control copyright. Those thus making or running the covered works\n          for you must do so exclusively on your behalf, under your direction\n          and control, on terms that prohibit them from making any copies\n          of your copyrighted material outside their relationship with you.\n        </ns0:p>\n        <ns0:p>\n          Conveying under any other circumstances is permitted\n          solely under the conditions stated below. Sublicensing\n          is not allowed; section 10 makes it unnecessary.\n        </ns0:p>\n      </ns0:item>\n      <ns0:item>\n        <ns0:bullet>3.</ns0:bullet>\n        Protecting Users' Legal Rights From Anti-Circumvention Law.<ns0:br />\n        No covered work shall be deemed part of an effective technological\n        measure under any applicable law fulfilling obligations under article\n        11 of the WIPO copyright treaty adopted on 20 December 1996, or\n        similar laws prohibiting or restricting circumvention of such measures.\n        <ns0:p>\n          When you convey a covered work, you waive any legal power to\n          forbid circumvention of technological measures to the extent\n          such circumvention is effected by exercising rights under this\n          License with respect to the covered work, and you disclaim any\n          intention to limit operation or modification of the work as a means\n          of enforcing, against the work's users, your or third parties'\n          legal rights to forbid circumvention of technological measures.\n        </ns0:p>\n      </ns0:item>\n      <ns0:item>\n        <ns0:bullet>4.</ns0:bullet>\n        Conveying Verbatim Copies.<ns0:br />\n        You may convey verbatim copies of the Program's source code as\n        you receive it, in any medium, provided that you conspicuously\n        and appropriately publish on each copy an appropriate copyright\n        notice; keep intact all notices stating that this License and any\n        non-permissive terms added in accord with section 7 apply to the\n        code; keep intact all notices of the absence of any warranty; and\n        give all recipients a copy of this License along with the Program.\n        <ns0:p>\n          You may charge any price or no price for each copy that you\n          convey, and you may offer support or warranty protection for a fee.\n        </ns0:p>\n      </ns0:item>\n      <ns0:item>\n        <ns0:bullet>5.</ns0:bullet>\n        Conveying Modified Source Versions.<ns0:br />\n        You may convey a work based on the Program, or the modifications to\n        produce it from the Program, in the form of source code under the terms\n        of section 4, provided that you also meet all of these conditions:\n        <ns0:list>\n          <ns0:item>\n            <ns0:bullet>a)</ns0:bullet>\n            The work must carry prominent notices stating\n            that you modified it, and giving a relevant date.\n          </ns0:item>\n          <ns0:item>\n            <ns0:bullet>b)</ns0:bullet>\n            The work must carry prominent notices stating that\n            it is released under this License and any conditions\n            added under section 7. This requirement modifies the\n            requirement in section 4 to \"keep intact all notices\".\n          </ns0:item>\n          <ns0:item>\n            <ns0:bullet>c)</ns0:bullet>\n            You must license the entire work, as a whole, under this License\n            to anyone who comes into possession of a copy. This License\n            will therefore apply, along with any applicable section 7\n            additional terms, to the whole of the work, and all its parts,\n            regardless of how they are packaged. This License gives no\n            permission to license the work in any other way, but it does not\n            invalidate such permission if you have separately received it.\n          </ns0:item>\n          <ns0:item>\n            <ns0:bullet>d)</ns0:bullet>\n            If the work has interactive user interfaces, each must\n            display Appropriate Legal Notices; however, if the Program\n            has interactive interfaces that do not display Appropriate\n            Legal Notices, your work need not make them do so.\n          </ns0:item>\n        </ns0:list>\n        <ns0:p>\n          A compilation of a covered work with other separate and independent\n          works, which are not by their nature extensions of the covered\n          work, and which are not combined with it such as to form a larger\n          program, in or on a volume of a storage or distribution medium,\n          is called an \"aggregate\" if the compilation and its resulting\n          copyright are not used to limit the access or legal rights\n          of the compilation's users beyond what the individual works\n          permit. Inclusion of a covered work in an aggregate does not\n          cause this License to apply to the other parts of the aggregate.\n        </ns0:p>\n      </ns0:item>\n      <ns0:item>\n        <ns0:bullet>6.</ns0:bullet>\n        Conveying Non-Source Forms.<ns0:br />\n        You may convey a covered work in object code form\n        under the terms of sections 4 and 5, provided that you\n        also convey the machine-readable Corresponding Source\n        under the terms of this License, in one of these ways:\n        <ns0:list>\n          <ns0:item>\n            <ns0:bullet>a)</ns0:bullet>\n            Convey the object code in, or embodied in, a physical\n            product (including a physical distribution medium),\n            accompanied by the Corresponding Source fixed on a durable\n            physical medium customarily used for software interchange.\n          </ns0:item>\n          <ns0:item>\n            <ns0:bullet>b)</ns0:bullet>\n            Convey the object code in, or embodied in, a physical product\n            (including a physical distribution medium), accompanied by a\n            written offer, valid for at least three years and valid for\n            as long as you offer spare parts or customer support for that\n            product model, to give anyone who possesses the object code\n            either (1) a copy of the Corresponding Source for all the software\n            in the product that is covered by this License, on a durable\n            physical medium customarily used for software interchange,\n            for a price no more than your reasonable cost of physically\n            performing this conveying of source, or (2) access to copy\n            the Corresponding Source from a network server at no charge.\n          </ns0:item>\n          <ns0:item>\n            <ns0:bullet>c)</ns0:bullet>\n            Convey individual copies of the object code with a\n            copy of the written offer to provide the Corresponding\n            Source. This alternative is allowed only occasionally\n            and noncommercially, and only if you received the object\n            code with such an offer, in accord with subsection 6b.\n          </ns0:item>\n          <ns0:item>\n            <ns0:bullet>d)</ns0:bullet>\n            Convey the object code by offering access from a designated place\n            (gratis or for a charge), and offer equivalent access to the\n            Corresponding Source in the same way through the same place at\n            no further charge. You need not require recipients to copy the\n            Corresponding Source along with the object code. If the place\n            to copy the object code is a network server, the Corresponding\n            Source may be on a different server (operated by you or a third\n            party) that supports equivalent copying facilities, provided you\n            maintain clear directions next to the object code saying where\n            to find the Corresponding Source. Regardless of what server hosts\n            the Corresponding Source, you remain obligated to ensure that it\n            is available for as long as needed to satisfy these requirements.\n          </ns0:item>\n          <ns0:item>\n            <ns0:bullet>e)</ns0:bullet>\n            Convey the object code using peer-to-peer transmission,\n            provided you inform other peers where the object code\n            and Corresponding Source of the work are being offered\n            to the general public at no charge under subsection 6d.\n          </ns0:item>\n        </ns0:list>\n        <ns0:p>\n          A separable portion of the object code, whose source code is\n          excluded from the Corresponding Source as a System Library,\n          need not be included in conveying the object code work.\n        </ns0:p>\n        <ns0:p>\n          A \"User Product\" is either (1) a \"consumer product\", which means\n          any tangible personal property which is normally used for personal,\n          family, or household purposes, or (2) anything designed or sold\n          for incorporation into a dwelling. In determining whether a product\n          is a consumer product, doubtful cases shall be resolved in favor\n          of coverage. For a particular product received by a particular\n          user, \"normally used\" refers to a typical or common use of that\n          class of product, regardless of the status of the particular\n          user or of the way in which the particular user actually uses,\n          or expects or is expected to use, the product. A product is a\n          consumer product regardless of whether the product has substantial\n          commercial, industrial or non-consumer uses, unless such uses\n          represent the only significant mode of use of the product.\n        </ns0:p>\n        <ns0:p>\n          \"Installation Information\" for a User Product means any methods,\n          procedures, authorization keys, or other information required\n          to install and execute modified versions of a covered work in\n          that User Product from a modified version of its Corresponding\n          Source. The information must suffice to ensure that the continued\n          functioning of the modified object code is in no case prevented\n          or interfered with solely because modification has been made.\n        </ns0:p>\n        <ns0:p>\n          If you convey an object code work under this section in, or with,\n          or specifically for use in, a User Product, and the conveying\n          occurs as part of a transaction in which the right of possession\n          and use of the User Product is transferred to the recipient in\n          perpetuity or for a fixed term (regardless of how the transaction\n          is characterized), the Corresponding Source conveyed under this\n          section must be accompanied by the Installation Information.\n          But this requirement does not apply if neither you nor any third\n          party retains the ability to install modified object code on the\n          User Product (for example, the work has been installed in ROM).\n        </ns0:p>\n        <ns0:p>\n          The requirement to provide Installation Information does not\n          include a requirement to continue to provide support service,\n          warranty, or updates for a work that has been modified\n          or installed by the recipient, or for the User Product in\n          which it has been modified or installed. Access to a network\n          may be denied when the modification itself materially and\n          adversely affects the operation of the network or violates\n          the rules and protocols for communication across the network.\n        </ns0:p>\n        <ns0:p>\n          Corresponding Source conveyed, and Installation Information\n          provided, in accord with this section must be in a format that\n          is publicly documented (and with an implementation available\n          to the public in source code form), and must require no\n          special password or key for unpacking, reading or copying.\n        </ns0:p>\n      </ns0:item>\n      <ns0:item>\n        <ns0:bullet>7.</ns0:bullet>\n        Additional Terms.<ns0:br />\n        \"Additional permissions\" are terms that supplement the terms of this\n        License by making exceptions from one or more of its conditions.\n        Additional permissions that are applicable to the entire Program\n        shall be treated as though they were included in this License, to\n        the extent that they are valid under applicable law. If additional\n        permissions apply only to part of the Program, that part may be used\n        separately under those permissions, but the entire Program remains\n        governed by this License without regard to the additional permissions.\n        <ns0:p>\n          When you convey a copy of a covered work, you may at your option\n          remove any additional permissions from that copy, or from any part\n          of it. (Additional permissions may be written to require their own\n          removal in certain cases when you modify the work.) You may place\n          additional permissions on material, added by you to a covered work,\n          for which you have or can give appropriate copyright permission.\n        </ns0:p>\n        <ns0:p>\n          Notwithstanding any other provision of this License, for material you\n          add to a covered work, you may (if authorized by the copyright holders\n          of that material) supplement the terms of this License with terms:\n        </ns0:p>\n        <ns0:list>\n          <ns0:item>\n            <ns0:bullet>a)</ns0:bullet>\n            Disclaiming warranty or limiting liability differently\n            from the terms of sections 15 and 16 of this License; or\n          </ns0:item>\n          <ns0:item>\n            <ns0:bullet>b)</ns0:bullet>\n            Requiring preservation of specified reasonable legal\n            notices or author attributions in that material or in the\n            Appropriate Legal Notices displayed by works containing it; or\n          </ns0:item>\n          <ns0:item>\n            <ns0:bullet>c)</ns0:bullet>\n            Prohibiting misrepresentation of the origin of that material,\n            or requiring that modified versions of such material be marked\n            in reasonable ways as different from the original version; or\n          </ns0:item>\n          <ns0:item>\n            <ns0:bullet>d)</ns0:bullet>\n            Limiting the use for publicity purposes of names\n            of licensors or authors of the material; or\n          </ns0:item>\n          <ns0:item>\n            <ns0:bullet>e)</ns0:bullet>\n            Declining to grant rights under trademark law for use\n            of some trade names, trademarks, or service marks; or\n          </ns0:item>\n          <ns0:item>\n            <ns0:bullet>f)</ns0:bullet>\n            Requiring indemnification of licensors and authors of that\n            material by anyone who conveys the material (or modified\n            versions of it) with contractual assumptions of liability\n            to the recipient, for any liability that these contractual\n            assumptions directly impose on those licensors and authors.\n          </ns0:item>\n        </ns0:list>\n        <ns0:p>\n          All other non-permissive additional terms are considered \"further\n          restrictions\" within the meaning of section 10. If the Program\n          as you received it, or any part of it, contains a notice stating\n          that it is governed by this License along with a term that is\n          a further restriction, you may remove that term. If a license\n          document contains a further restriction but permits relicensing or\n          conveying under this License, you may add to a covered work material\n          governed by the terms of that license document, provided that the\n          further restriction does not survive such relicensing or conveying.\n        </ns0:p>\n        <ns0:p>\n          If you add terms to a covered work in accord with this\n          section, you must place, in the relevant source files, a\n          statement of the additional terms that apply to those files,\n          or a notice indicating where to find the applicable terms.\n        </ns0:p>\n        <ns0:p>\n          Additional terms, permissive or non-permissive, may be\n          stated in the form of a separately written license, or stated\n          as exceptions; the above requirements apply either way.\n        </ns0:p>\n      </ns0:item>\n      <ns0:item>\n        <ns0:bullet>8.</ns0:bullet>\n        Termination.\n        <ns0:p>\n          You may not propagate or modify a covered work except as\n          expressly provided under this License. Any attempt otherwise\n          to propagate or modify it is void, and will automatically\n          terminate your rights under this License (including any patent\n          licenses granted under the third paragraph of section 11).\n        </ns0:p>\n        <ns0:p>\n          However, if you cease all violation of this License, then your\n          license from a particular copyright holder is reinstated (a)\n          provisionally, unless and until the copyright holder explicitly\n          and finally terminates your license, and (b) permanently, if\n          the copyright holder fails to notify you of the violation by\n          some reasonable means prior to 60 days after the cessation.\n        </ns0:p>\n        <ns0:p>\n          Moreover, your license from a particular copyright holder is\n          reinstated permanently if the copyright holder notifies you\n          of the violation by some reasonable means, this is the first\n          time you have received notice of violation of this License\n          (for any work) from that copyright holder, and you cure the\n          violation prior to 30 days after your receipt of the notice.\n        </ns0:p>\n        <ns0:p>\n          Termination of your rights under this section does not\n          terminate the licenses of parties who have received copies or\n          rights from you under this License. If your rights have been\n          terminated and not permanently reinstated, you do not qualify\n          to receive new licenses for the same material under section 10.\n        </ns0:p>\n      </ns0:item>\n      <ns0:item>\n        <ns0:bullet>9.</ns0:bullet>\n        Acceptance Not Required for Having Copies.\n        <ns0:p>\n          You are not required to accept this License in order to receive or\n          run a copy of the Program. Ancillary propagation of a covered work\n          occurring solely as a consequence of using peer-to-peer transmission\n          to receive a copy likewise does not require acceptance. However,\n          nothing other than this License grants you permission to propagate\n          or modify any covered work. These actions infringe copyright if you\n          do not accept this License. Therefore, by modifying or propagating a\n          covered work, you indicate your acceptance of this License to do so.\n        </ns0:p>\n      </ns0:item>\n      <ns0:item>\n        <ns0:bullet>10.</ns0:bullet>\n        Automatic Licensing of Downstream Recipients.\n        <ns0:p>\n          Each time you convey a covered work, the recipient automatically\n          receives a license from the original licensors, to run, modify and\n          propagate that work, subject to this License. You are not responsible\n          for enforcing compliance by third parties with this License.\n        </ns0:p>\n        <ns0:p>\n          An \"entity transaction\" is a transaction transferring control of\n          an organization, or substantially all assets of one, or subdividing\n          an organization, or merging organizations. If propagation of a\n          covered work results from an entity transaction, each party to that\n          transaction who receives a copy of the work also receives whatever\n          licenses to the work the party's predecessor in interest had or could\n          give under the previous paragraph, plus a right to possession of the\n          Corresponding Source of the work from the predecessor in interest,\n          if the predecessor has it or can get it with reasonable efforts.\n        </ns0:p>\n        <ns0:p>\n          You may not impose any further restrictions on the exercise of the\n          rights granted or affirmed under this License. For example, you\n          may not impose a license fee, royalty, or other charge for exercise\n          of rights granted under this License, and you may not initiate\n          litigation (including a cross-claim or counterclaim in a lawsuit)\n          alleging that any patent claim is infringed by making, using, selling,\n          offering for sale, or importing the Program or any portion of it.\n        </ns0:p>\n      </ns0:item>\n      <ns0:item>\n        <ns0:bullet>11.</ns0:bullet>\n        Patents.\n        <ns0:p>\n          A \"contributor\" is a copyright holder who authorizes use under this\n          License of the Program or a work on which the Program is based. The\n          work thus licensed is called the contributor's \"contributor version\".\n        </ns0:p>\n        <ns0:p>\n          A contributor's \"essential patent claims\" are all patent\n          claims owned or controlled by the contributor, whether already\n          acquired or hereafter acquired, that would be infringed by some\n          manner, permitted by this License, of making, using, or selling\n          its contributor version, but do not include claims that would\n          be infringed only as a consequence of further modification\n          of the contributor version. For purposes of this definition,\n          \"control\" includes the right to grant patent sublicenses in\n          a manner consistent with the requirements of this License.\n        </ns0:p>\n        <ns0:p>\n          Each contributor grants you a non-exclusive, worldwide, royalty-free\n          patent license under the contributor's essential patent claims,\n          to make, use, sell, offer for sale, import and otherwise run,\n          modify and propagate the contents of its contributor version.\n        </ns0:p>\n        <ns0:p>\n          In the following three paragraphs, a \"patent license\" is any\n          express agreement or commitment, however denominated, not to\n          enforce a patent (such as an express permission to practice\n          a patent or covenant not to sue for patent infringement). To\n          \"grant\" such a patent license to a party means to make such an\n          agreement or commitment not to enforce a patent against the party.\n        </ns0:p>\n        <ns0:p>\n          If you convey a covered work, knowingly relying on a patent\n          license, and the Corresponding Source of the work is not available\n          for anyone to copy, free of charge and under the terms of this\n          License, through a publicly available network server or other\n          readily accessible means, then you must either (1) cause the\n          Corresponding Source to be so available, or (2) arrange to\n          deprive yourself of the benefit of the patent license for this\n          particular work, or (3) arrange, in a manner consistent with\n          the requirements of this License, to extend the patent<ns0:br />\n          license to downstream recipients. \"Knowingly relying\" means you have\n          actual knowledge that, but for the patent license, your conveying\n          the covered work in a country, or your recipient's use of the\n          covered work in a country, would infringe one or more identifiable\n          patents in that country that you have reason to believe are valid.\n        </ns0:p>\n        <ns0:p>\n          If, pursuant to or in connection with a single transaction or\n          arrangement, you convey, or propagate by procuring conveyance\n          of, a covered work, and grant a patent license to some of the\n          parties receiving the covered work authorizing them to use,\n          propagate, modify or convey a specific copy of the covered work,\n          then the patent license you grant is automatically extended\n          to all recipients of the covered work and works based on it.\n        </ns0:p>\n        <ns0:p>\n          A patent license is \"discriminatory\" if it does not include within the\n          scope of its coverage, prohibits the exercise of, or is conditioned\n          on the non-exercise of one or more of the rights that are specifically\n          granted under this License. You may not convey a covered work if\n          you are a party to an arrangement with a third party that is in the\n          business of distributing software, under which you make payment to\n          the third party based on the extent of your activity of conveying\n          the work, and under which the third party grants, to any of the\n          parties who would receive the covered work from you, a discriminatory\n          patent license (a) in connection with copies of the covered work\n          conveyed by you (or copies made from those copies), or (b) primarily\n          for and in connection with specific products or compilations that\n          contain the covered work, unless you entered into that arrangement,\n          or that patent license was granted, prior to 28 March 2007.\n        </ns0:p>\n        <ns0:p>\n          Nothing in this License shall be construed as excluding or\n          limiting any implied license or other defenses to infringement\n          that may otherwise be available to you under applicable patent law.\n        </ns0:p>\n      </ns0:item>\n      <ns0:item>\n        <ns0:bullet>12.</ns0:bullet>\n        No Surrender of Others' Freedom.\n        <ns0:p>\n          If conditions are imposed on you (whether by court order,\n          agreement or otherwise) that contradict the conditions of this\n          License, they do not excuse you from the conditions of this\n          License. If you cannot convey a covered work so as to satisfy\n          simultaneously your obligations under this License and any other\n          pertinent obligations, then as a consequence you may<ns0:br />\n          not convey it at all. For example, if you agree to terms\n          that obligate you to collect a royalty for further conveying\n          from those to whom you convey the Program, the only\n          way you could satisfy both those terms and this License\n          would be to refrain entirely from conveying the Program.\n        </ns0:p>\n      </ns0:item>\n      <ns0:item>\n        <ns0:bullet>13.</ns0:bullet>\n        Remote Network Interaction; Use with the GNU General Public License.\n        <ns0:p>\n          Notwithstanding any other provision of this License, if you modify\n          the Program, your modified version must prominently offer all users\n          interacting with it remotely through a computer network (if your\n          version supports such interaction) an opportunity to receive the\n          Corresponding Source of your version by providing access to the\n          Corresponding Source from a network server at no charge, through\n          some standard or customary means of facilitating copying of\n          software. This Corresponding Source shall include the Corresponding\n          Source for any work covered by version 3 of the GNU General Public\n          License that is incorporated pursuant to the following paragraph.\n        </ns0:p>\n        <ns0:p>\n          Notwithstanding any other provision of this License, you have\n          permission to link or combine any covered work with a work\n          licensed under version 3 of the GNU General Public License into\n          a single combined work, and to convey the resulting work. The\n          terms of this License will continue to apply to the part which\n          is the covered work, but the work with which it is combined will\n          remain governed by version 3 of the GNU General Public License.\n        </ns0:p>\n      </ns0:item>\n      <ns0:item>\n        <ns0:bullet>14.</ns0:bullet>\n        Revised Versions of this License.\n        <ns0:p>\n          The Free Software Foundation may publish revised and/or new versions\n          of the GNU Affero General Public License from time to time. Such\n          new versions will be similar in spirit to the present version,\n          but may differ in detail to address new problems or concerns.\n        </ns0:p>\n        <ns0:p>\n          Each version is given a distinguishing version number. If the\n          Program specifies that a certain numbered version of the GNU\n          Affero General Public License \"or any later version\" applies to\n          it, you have the option of following the terms and conditions\n          either of that numbered version or of any later version published\n          by the Free Software Foundation. If the Program does not specify\n          a version number of the GNU Affero General Public License, you may\n          choose any version ever published by the Free Software Foundation.\n        </ns0:p>\n        <ns0:p>\n          If the Program specifies that a proxy can decide which future\n          versions of the GNU Affero General Public License can be\n          used, that proxy's public statement of acceptance of a version\n          permanently authorizes you to choose that version for the Program.\n        </ns0:p>\n        <ns0:p>\n          Later license versions may give you additional or\n          different permissions. However, no additional obligations\n          are imposed on any author or copyright holder as a\n          result of your choosing to follow a later version.\n        </ns0:p>\n      </ns0:item>\n      <ns0:item>\n        <ns0:bullet>15.</ns0:bullet>\n        Disclaimer of Warranty.\n        <ns0:p>\n          THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED\n          BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING\n          THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM\n          \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR\n          IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n          OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE\n          ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\n          IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME\n          THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n        </ns0:p>\n      </ns0:item>\n      <ns0:item>\n        <ns0:bullet>16.</ns0:bullet>\n        Limitation of Liability.\n        <ns0:p>\n          IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\n          WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR\n          CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\n          INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES\n          ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING\n          BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE\n          OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE\n          PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER\n          OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n        </ns0:p>\n      </ns0:item>\n      <ns0:item>\n        <ns0:bullet>17.</ns0:bullet>\n        Interpretation of Sections 15 and 16.\n    <ns0:p>\n      If the disclaimer of warranty and limitation of liability\n      provided above cannot be given local legal effect according to\n      their terms, reviewing courts shall apply local law that most\n      closely approximates an absolute waiver of all civil liability in\n      connection with the Program, unless a warranty or assumption of\n      liability accompanies a copy of the Program in return for a fee.\n    </ns0:p>\n      </ns0:item>\n    </ns0:list>\n    <ns0:optional>\n      <ns0:p>\n        END OF TERMS AND CONDITIONS\n      </ns0:p>\n      <ns0:p>\n        How to Apply These Terms to Your New Programs\n      </ns0:p>\n      <ns0:p>\n        If you develop a new program, and you want it to be\n        of the greatest possible use to the public, the best\n        way to achieve this is to make it free software which\n        everyone can redistribute and change under these terms.\n      </ns0:p>\n      <ns0:p>\n        To do so, attach the following notices to the program. It is safest\n        to attach them to the start of each source file to most effectively\n        state the exclusion of warranty; and each file should have at least\n        the \"copyright\" line and a pointer to where the full notice is found.\n      </ns0:p>\n      <ns0:standardLicenseHeader>\n      <ns0:p>\n        <ns0:alt name=\"description\" match=\".+\">&lt;one line to give the program's name and\n        a brief idea of what it does.&gt;</ns0:alt><ns0:br />\n        Copyright (C) <ns0:alt name=\"copyright\" match=\".+\">&lt;year&gt; &lt;name of author&gt;</ns0:alt>\n      </ns0:p>\n      <ns0:p>\n        This program is free software: you can redistribute it and/or\n        modify it under the terms of the GNU Affero General Public\n        License as published by the Free Software Foundation, either\n        version 3 of the License, or <ns0:optional>(at your option)</ns0:optional> any later version.\n      </ns0:p>\n      <ns0:p>\n        This program is distributed in the hope that it will be useful,\n        but WITHOUT ANY WARRANTY; without even the implied warranty\n        of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n        See the GNU Affero General Public License for more details.\n      </ns0:p>\n      <ns0:p>\n        You should have received a copy of the GNU Affero General\n\tPublic License along with this program. If not, see\n\t&lt;https://www.gnu.org/licenses/&gt;.\n      </ns0:p>\n      </ns0:standardLicenseHeader>\n      <ns0:p>\n        Also add information on how to contact you by electronic and paper mail.\n      </ns0:p>\n      <ns0:p>\n        If your software can interact with users remotely through a\n        computer network, you should also make sure that it provides a\n        way for users to get its source. For example, if your program is\n        a web application, its interface could display a \"Source\" link\n        that leads users to an archive of the code. There are many ways\n        you could offer source, and different solutions will be better for\n        different programs; see section 13 for the specific requirements.\n      </ns0:p>\n      <ns0:p>\n        You should also get your employer (if you work as a programmer)\n        or school, if any, to sign a \"copyright disclaimer\" for\n        the program, if necessary. For more information on this,\n\tand how to apply and follow the GNU AGPL, see\n\t&lt;https://www.gnu.org/licenses/&gt;.\n      </ns0:p>\n    </ns0:optional>\n    </ns0:text>",
            "trove_classifier": "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
            "type": "license",
            "url": {
               "cross_refs": [
                  "https://www.gnu.org/licenses/agpl.txt",
                  "https://opensource.org/licenses/AGPL-3.0"
               ],
               "json": "https://spdx.org/licenses/AGPL-3.0-or-later.json",
               "reference": "https://spdx.org/licenses/AGPL-3.0-or-later.html",
               "repo_header_plain": "https://github.com/RepoDynamics/PyPackIT/blob/main/COPYRIGHT-AGPL-3-0-or-later.md",
               "repo_text_plain": "https://github.com/RepoDynamics/PyPackIT/blob/main/LICENSE-AGPL-3-0-or-later.md"
            },
            "version_added": "",
            "version_deprecated": ""
         }
      },
      "config": {
         "header": {
            "plain": {
               "alts": {
                  "author": "RepoDynamics",
                  "contributor": "RepoDynamics",
                  "copyright": "\u00a9 2023\u20132025 RepoDynamics",
                  "copyrightHolder0": "RepoDynamics",
                  "copyrightHolder1": "RepoDynamics",
                  "copyrightHolder2": "RepoDynamics",
                  "copyrightHolder3": "RepoDynamics",
                  "copyrightHolderAsIs": "RepoDynamics",
                  "copyrightHolderLiability": "RepoDynamics",
                  "creator": "RepoDynamics",
                  "description": "PyPackIT",
                  "email": "mailto:contact@repodynamics.com",
                  "initialDeveloper": "RepoDynamics",
                  "maintainer": "RepoDynamics",
                  "organization": "RepoDynamics",
                  "owner": "RepoDynamics",
                  "softwareName": "PyPackIT",
                  "softwareVersion": "0.0.0",
                  "version": "0.0.0"
               },
               "bullet": 1,
               "copyright_notice": "\u00a9 2023\u20132025 RepoDynamics",
               "item_indent": 1,
               "item_spacing": 1,
               "line_breaks": 2,
               "line_length": 88,
               "list_indent": 0,
               "subtitle_underline": "-",
               "title": true,
               "title_centered": false,
               "title_underline": "=",
               "title_underline_full": false
            }
         },
         "text": {
            "plain": {
               "alts": {
                  "author": "RepoDynamics",
                  "contributor": "RepoDynamics",
                  "copyright": "\u00a9 2023\u20132025 RepoDynamics",
                  "copyrightHolder0": "RepoDynamics",
                  "copyrightHolder1": "RepoDynamics",
                  "copyrightHolder2": "RepoDynamics",
                  "copyrightHolder3": "RepoDynamics",
                  "copyrightHolderAsIs": "RepoDynamics",
                  "copyrightHolderLiability": "RepoDynamics",
                  "creator": "RepoDynamics",
                  "description": "PyPackIT",
                  "email": "mailto:contact@repodynamics.com",
                  "initialDeveloper": "RepoDynamics",
                  "maintainer": "RepoDynamics",
                  "organization": "RepoDynamics",
                  "owner": "RepoDynamics",
                  "softwareName": "PyPackIT",
                  "softwareVersion": "0.0.0",
                  "version": "0.0.0"
               },
               "bullet": 1,
               "copyright_notice": "\u00a9 2023\u20132025 RepoDynamics",
               "item_indent": 1,
               "item_spacing": 1,
               "line_breaks": 2,
               "line_length": 88,
               "list_indent": 0,
               "subtitle_underline": "-",
               "title": true,
               "title_centered": false,
               "title_underline": "=",
               "title_underline_full": false
            }
         }
      },
      "expression": "AGPL-3.0-or-later"
   },
   "local": {
      "cache": {
         "path": ".local/cache"
      },
      "report": {
         "path": ".local/report"
      },
      "temp": {
         "path": ".local/temp"
      }
   },
   "name": "PyPackIT",
   "project": {
      "api_names": [],
      "branches": [
         "main"
      ],
      "cli_names": [
         "pypackit"
      ],
      "file": {
         "config": {
            "docker-compose": ".devcontainer/docker-compose.yaml",
            "issue_chooser": ".github/ISSUE_TEMPLATE/config.yml",
            "license_AGPL-3.0-or-later_plain_header": "COPYRIGHT-AGPL-3-0-or-later.md",
            "license_AGPL-3.0-or-later_plain_text": "LICENSE-AGPL-3-0-or-later.md",
            "meta": ".github/.repodynamics/metadata.json"
         },
         "custom": {
            "devcontainer_main.volume.bash_env": ".devcontainer/volume/etc/bash/bash_env",
            "devcontainer_main.volume.bash_theme": ".devcontainer/volume/etc/bash/bash_theme",
            "devcontainer_main.volume.bashrc": ".devcontainer/volume/etc/bash.bashrc",
            "devcontainer_main.volume.devcontainer_info": ".devcontainer/volume/usr/local/bin/devcontainer-info",
            "devcontainer_main.volume.globalrc": ".devcontainer/volume/etc/global_shellrc",
            "devcontainer_main.volume.profile": ".devcontainer/volume/etc/profile",
            "devcontainer_main.volume.project_tasks": ".devcontainer/volume/etc/project_tasks",
            "devcontainer_main.volume.shim_systemctl": ".devcontainer/volume/usr/local/bin/systemctl",
            "devcontainer_main.volume.shim_vscode": ".devcontainer/volume/usr/local/bin/code",
            "devcontainer_main.volume.zprofile": ".devcontainer/volume/etc/zsh/zprofile",
            "devcontainer_main.volume.zsh_theme": null,
            "devcontainer_main.volume.zshenv": ".devcontainer/volume/etc/zsh/zshenv",
            "devcontainer_main.volume.zshrc": ".devcontainer/volume/etc/zsh/zshrc",
            "devcontainer_main_codecov_codecov_config": ".github/.codecov.yml",
            "devcontainer_main_pre_commit_pre_commit_config": ".devcontainer/config/pre-commit.yaml",
            "devcontainer_main_pre_commit_pre_commit_config_ci": ".devcontainer/config/pre-commit-ci.yaml",
            "devcontainer_main_pre_commit_ruff_config": ".devcontainer/config/ruff.toml",
            "devcontainer_main_type_check_mypy_config": ".devcontainer/config/mypy.toml",
            "doc.code_of_conduct": "CODE_OF_CONDUCT.md",
            "doc.contributing": "CONTRIBUTING.md",
            "doc.governance": "GOVERNANCE.md",
            "doc.readme": "README.md",
            "doc.security": "SECURITY.md",
            "doc.support": "SUPPORT.md",
            "file_binder_apt": null,
            "file_binder_conda": ".devcontainer/config/binder/environment.yml",
            "file_binder_postbuild": ".devcontainer/config/binder/postBuild",
            "file_citation_cff": "CITATION.cff",
            "file_codeowners": null,
            "file_funding_github": null,
            "file_pixi_manifest": "pixi.toml",
            "file_sphinx_conf": "docs/website/source/conf.json",
            "file_web_toc": "docs/website/source/.toc.yaml",
            "git.install": ".devcontainer/feature/git/install.sh",
            "git.metadata": ".devcontainer/feature/git/devcontainer-feature.json",
            "miniforge.install": ".devcontainer/feature/miniforge/install.sh",
            "miniforge.metadata": ".devcontainer/feature/miniforge/devcontainer-feature.json",
            "oh-my-zsh.install": ".devcontainer/feature/oh-my-zsh/install.sh",
            "oh-my-zsh.metadata": ".devcontainer/feature/oh-my-zsh/devcontainer-feature.json",
            "pixi.install": ".devcontainer/feature/pixi/install.sh",
            "pixi.metadata": ".devcontainer/feature/pixi/devcontainer-feature.json",
            "pypkg_main_readme": "pkg/README.md",
            "pypkg_main_setuptools_manifest": "pkg/MANIFEST.in",
            "pypkg_test_coverage_config": "test/src/pypackit_testsuite/data/config/coverage.toml",
            "pypkg_test_pytest_config": "test/src/pypackit_testsuite/data/config/pytest.toml",
            "pypkg_test_readme": "test/README.md",
            "pypkg_test_setuptools_manifest": "test/MANIFEST.in",
            "syspkg.install": ".devcontainer/feature/syspkg/install.sh",
            "syspkg.metadata": ".devcontainer/feature/syspkg/devcontainer-feature.json",
            "texlive.install": ".devcontainer/feature/texlive/install.sh",
            "texlive.install_profile": ".devcontainer/feature/texlive/install.profile",
            "texlive.metadata": ".devcontainer/feature/texlive/devcontainer-feature.json",
            "volume.install": ".devcontainer/feature/volume/install.sh",
            "volume.manifest": ".devcontainer/feature/volume/volume_manifest",
            "volume.metadata": ".devcontainer/feature/volume/devcontainer-feature.json"
         },
         "devcontainer_apt": {
            "main_essential": ".devcontainer/environment/syspkg/essential/apt_pkgs.txt",
            "main_optional": ".devcontainer/environment/syspkg/optional/apt_pkgs.txt",
            "main_recommended": ".devcontainer/environment/syspkg/recommended/apt_pkgs.txt",
            "main_required": ".devcontainer/environment/syspkg/required/apt_pkgs.txt"
         },
         "devcontainer_apt_post": {
            "main_essential": ".devcontainer/environment/syspkg/essential/apt_post_install.sh",
            "main_optional": ".devcontainer/environment/syspkg/optional/apt_post_install.sh",
            "main_recommended": ".devcontainer/environment/syspkg/recommended/apt_post_install.sh",
            "main_required": ".devcontainer/environment/syspkg/required/apt_post_install.sh"
         },
         "devcontainer_conda": {
            "anaconda": ".devcontainer/environment/conda/anaconda.yaml",
            "base": ".devcontainer/environment/conda/base.yaml",
            "codecov": ".devcontainer/environment/conda/codecov.yaml",
            "jupyter": ".devcontainer/environment/conda/jupyter.yaml",
            "pre_commit": ".devcontainer/environment/conda/pre_commit.yaml",
            "pybuild": ".devcontainer/environment/conda/pybuild.yaml",
            "pylint": ".devcontainer/environment/conda/pylint.yaml",
            "type_check": ".devcontainer/environment/conda/type_check.yaml",
            "versioning": ".devcontainer/environment/conda/versioning.yaml",
            "website": ".devcontainer/environment/conda/website.yaml"
         },
         "devcontainer_dockerfile": {
            "main": ".devcontainer/Dockerfile"
         },
         "devcontainer_metadata": {
            "main": ".devcontainer/devcontainer.json"
         },
         "gitattributes": {
            "main": ".gitattributes"
         },
         "gitignore": {
            "main": ".gitignore"
         },
         "issue_form": {
            "01_pkg_api_fix": ".github/ISSUE_TEMPLATE/01_pkg_api_fix.yaml",
            "02_pkg_cli_fix": ".github/ISSUE_TEMPLATE/02_pkg_cli_fix.yaml",
            "04_pkg_build_fix": ".github/ISSUE_TEMPLATE/04_pkg_build_fix.yaml",
            "05_pkg_api_feat": ".github/ISSUE_TEMPLATE/05_pkg_api_feat.yaml",
            "06_pkg_cli_feat": ".github/ISSUE_TEMPLATE/06_pkg_cli_feat.yaml",
            "08_pkg_api_change": ".github/ISSUE_TEMPLATE/08_pkg_api_change.yaml",
            "09_pkg_cli_change": ".github/ISSUE_TEMPLATE/09_pkg_cli_change.yaml",
            "11_docs_fix": ".github/ISSUE_TEMPLATE/11_docs_fix.yaml",
            "12_docs_feat": ".github/ISSUE_TEMPLATE/12_docs_feat.yaml",
            "13_docs_change": ".github/ISSUE_TEMPLATE/13_docs_change.yaml",
            "14_test_api_fix": ".github/ISSUE_TEMPLATE/14_test_api_fix.yaml",
            "15_test_cli_fix": ".github/ISSUE_TEMPLATE/15_test_cli_fix.yaml",
            "17_test_build_fix": ".github/ISSUE_TEMPLATE/17_test_build_fix.yaml",
            "18_test_api_feat": ".github/ISSUE_TEMPLATE/18_test_api_feat.yaml",
            "19_test_cli_feat": ".github/ISSUE_TEMPLATE/19_test_cli_feat.yaml",
            "21_test_api_change": ".github/ISSUE_TEMPLATE/21_test_api_change.yaml",
            "22_test_cli_change": ".github/ISSUE_TEMPLATE/22_test_cli_change.yaml",
            "24_refactor": ".github/ISSUE_TEMPLATE/24_refactor.yaml",
            "25_config": ".github/ISSUE_TEMPLATE/25_config.yaml",
            "26_ci": ".github/ISSUE_TEMPLATE/26_ci.yaml",
            "27_chore": ".github/ISSUE_TEMPLATE/27_chore.yaml"
         },
         "pkg_config": {
            "pypkg_ci_pyproject": ".control/pyproject.toml",
            "pypkg_ci_typing": ".control/src/proman/py.typed",
            "pypkg_main_conda_recipe_meta_global": "pkg/conda-recipe/global/meta.yaml",
            "pypkg_main_conda_recipe_meta_local": "pkg/conda-recipe/local/meta.yaml",
            "pypkg_main_pyproject": "pkg/pyproject.toml",
            "pypkg_main_typing": "pkg/src/pypackit/py.typed",
            "pypkg_test_conda_recipe_meta_global": "test/conda-recipe/global/meta.yaml",
            "pypkg_test_conda_recipe_meta_local": "test/conda-recipe/local/meta.yaml",
            "pypkg_test_pyproject": "test/pyproject.toml",
            "pypkg_test_typing": "test/src/pypackit_testsuite/py.typed"
         },
         "pkg_source": {
            "pypackit/__init__.py": "pkg/src/pypackit/__init__.py",
            "pypackit/__main__.py": "pkg/src/pypackit/__main__.py",
            "pypackit/data/__init__.py": "pkg/src/pypackit/data/__init__.py",
            "pypackit/exception/__init__.py": "pkg/src/pypackit/exception/__init__.py",
            "pypackit/exception/data.py": "pkg/src/pypackit/exception/data.py",
            "pypackit_testsuite/__init__.py": "test/src/pypackit_testsuite/__init__.py",
            "pypackit_testsuite/__main__.py": "test/src/pypackit_testsuite/__main__.py",
            "pypackit_testsuite/data/__init__.py": "test/src/pypackit_testsuite/data/__init__.py",
            "pypackit_testsuite/data/config/__init__.py": "test/src/pypackit_testsuite/data/config/__init__.py",
            "pypackit_testsuite/data_tests.py": "test/src/pypackit_testsuite/data_tests.py",
            "pypkg_ci_cli": ".control/src/proman/__main__.py"
         }
      },
      "gui_names": [],
      "has_scripts": true,
      "interfaces": [
         "PYTHON_API",
         "API",
         "GUI",
         "CLI"
      ],
      "os_names": [
         "Linux (arm64)",
         "Linux (x64)",
         "Windows (x64)",
         "macOS (arm64)",
         "macOS (x64)"
      ],
      "package_managers": [
         "conda",
         "pip"
      ],
      "python_api_names": [
         "pypackit"
      ],
      "python_versions": [
         "3.13",
         "3.12",
         "3.11",
         "3.10"
      ],
      "test_cli_names": [
         "PyPackIT-TestSuite"
      ],
      "test_gui_names": [],
      "test_python_api_names": [
         "pypackit_testsuite"
      ],
      "version": {
         "0.0.0": {
            "api_names": [],
            "branch": "main",
            "cli_names": [
               "pypackit"
            ],
            "gui_names": [],
            "os_names": [
               "Linux (x64)",
               "Linux (arm64)",
               "macOS (x64)",
               "macOS (arm64)",
               "Windows (x64)"
            ],
            "package_managers": [
               "pip",
               "conda"
            ],
            "python_api_names": [
               "pypackit"
            ],
            "python_versions": [
               "3.10",
               "3.11",
               "3.12",
               "3.13"
            ],
            "test_cli_names": [
               "PyPackIT-TestSuite"
            ],
            "test_gui_names": [],
            "test_python_api_names": [
               "pypackit_testsuite"
            ]
         }
      },
      "versions": [
         "0.0.0"
      ]
   },
   "pull": {
      "protocol": {
         "as_comment": false,
         "config": {
            "end": "\n```\n\n</details>\n",
            "start": "<details id=\"config\"><summary>Config</summary>\n\n```yaml\n"
         },
         "data": {
            "deployment": {
               "end": "<!-- END: data.deployment -->",
               "start": "<!-- BEGIN: data.deployment -->",
               "template_type": "append",
               "value": "\n\n**TBD**\n\n"
            },
            "description": {
               "end": "<!-- END: data.description -->",
               "start": "<!-- BEGIN: data.description -->",
               "template_type": "append",
               "value": "\n\n**TBD**\n\n"
            },
            "sdd": {
               "end": "<!-- END: data.sdd -->",
               "start": "<!-- BEGIN: data.sdd -->",
               "template_type": "append",
               "value": "\n\n**TBD**\n\n"
            },
            "summary": {
               "end": "<!-- END: data.summary -->",
               "start": "<!-- BEGIN: data.summary -->",
               "template_type": "append",
               "value": "{{ pr_title }}"
            },
            "testing": {
               "end": "<!-- END: data.testing -->",
               "start": "<!-- BEGIN: data.testing -->",
               "template_type": "append",
               "value": "\n\n**TBD**\n\n"
            },
            "timeline": {
               "end": "<!-- END: data.timeline -->",
               "start": "<!-- BEGIN: data.timeline -->",
               "template": "{%- macro make_entry(actor, description) -%}\n  | {{ now.strftime(\"%Y.%m.%d\") }} | {{ now.strftime(\"%H:%M:%S\") }} | {{ \"{:<32}\".format(actor) }} | {{ \"{:<53}\".format(description) }} |\n{%- endmacro -%}\n\n{%- macro make_description() -%}\n  {%- if action == \"assigned\" -%}\n    {%- if event == \"issues\" -%}\n      Issue assigned to {{ assignee.md_name }}.\n    {%- elif event == \"pull_request\" -%}\n      Pull request assigned to {{ assignee.md_name }}.\n    {%- endif -%}\n  {%- elif action == \"unassigned\" -%}\n    {%- if event == \"issues\" -%}\n      Issue unassigned from {{ assignee.md_name }}.\n    {%- elif event == \"pull_request\" -%}\n      Pull request unassigned from {{ assignee.md_name }}.\n    {%- endif -%}\n  {%- elif action == \"review_requested\" -%}\n    Review assigned to {{ requested_reviewer.md_name }}.\n  {%- elif action == \"review_request_removed\" -%}\n    Review unassigned from {{ requested_reviewer.md_name }}.\n  {%- elif action == \"synchronize\" -%}\n    New commits pushed to [{{ pull_request.head.name }}]({{ pull_request.head.url.homepage }}) (CI [{{ context.run_id }}]({{ context.run_url }})).\n  {%- elif action == \"labeled\" -%}\n    {%- set category = label.category -%}\n    {%- if category == \"type\" -%}\n        Type set to `{{ label.suffix }}`.\n    {%- elif category == \"scope\" -%}\n        Scope set to `{{ label.suffix }}`.\n    {%- elif category == \"version\" -%}\n          Target version set to `{{ label.suffix }}`.\n    {%- elif category == \"branch\" -%}\n          Target branch set to `{{ label.suffix }}`.\n    {%- elif category == \"status\" -%}\n      {%- set status = label.id or label.id -%}\n      {%- if status == \"triage\" -%}\n        Entered the triage phase.\n      {%- elif status == \"rejected\" -%}\n        Rejected and closed.\n      {%- elif status == \"duplicate\" -%}\n        Marked as duplicate and closed.\n      {%- elif status == \"invalid\" -%}\n        Marked as invalid and closed.\n      {%- elif status == \"planning\" -%}\n        Entered the planning phase.\n      {%- elif status == \"requirement_analysis\" -%}\n        Entered the requirement analysis phase.\n      {%- elif status == \"design\" -%}\n        Entered the design phase.\n      {%- elif status == \"implementation\" -%}\n        Entered the implementation phase.\n      {%- elif status == \"testing\" -%}\n        Entered the testing phase.\n      {%- elif status == \"deploy_alpha\" -%}\n        Deployed as alpha release.\n      {%- elif status == \"deploy_beta\" -%}\n        Deployed as beta release.\n      {%- elif status == \"deploy_rc\" -%}\n        Deployed as release candidate.\n      {%- elif status == \"deploy_final\" -%}\n        Deployed as final release.\n      {%- else -%}\n        Status changed to {{ status }}.\n      {%- endif -%}\n    {%- endif -%}\n  {%- elif action == \"opened\" -%}\n    {%- if event == \"issues\" -%}\n      Issue ticket #{{ issue.number }} submitted by {{ issue.user.md_name }}.\n    {%- elif event == \"pull_request\" -%}\n      Pull request #{{ pull_request.number }} opened from branch [{{ pull_request.head.name }}]({{ pull_request.head.url.homepage }}) to branch [{{ pull_request.base.name }}]({{ pull_request.base.url.homepage }}) by {{ pull_request.user.md_name }}.\n    {%- endif -%}\n  {%- endif -%}\n{%- endmacro -%}\n{%- set description = make_description() -%}\n{{ \"\\n\" ~ make_entry(sender.md_name, description) if description else \"\" -}}\n",
               "template_type": "append",
               "value": "\n|    Date    |   Time   |              Actor               |                      Description                      |\n| ---------- | -------- | -------------------------------- | ----------------------------------------------------- |"
            }
         },
         "inputs": {
            "end": "\nEND: inputs -->",
            "start": "<!-- BEGIN: inputs\n"
         },
         "tasklist": {
            "end": "\n\n<!-- END: tasklist -->",
            "start": "<!-- BEGIN: tasklist -->\n\n",
            "value": "- [ ] commit-type: Summary of task 1.\n  Description of task 1.\n  - [ ] Summary of subtask 1.1.\n    Description of subtask 1.1.\n- [ ] commit-type(scope): Summary of task 2.\n  Description of task 2.\n"
         },
         "template": {
            "body": [
               [
                  {
                     "args": {
                        "message": "#{{ issue.number }}"
                     },
                     "class": "badge",
                     "color": "#0B3C75",
                     "height": "23px",
                     "label": "Resolves",
                     "label_color": "#494949",
                     "link": "{{ issue.html_url }}",
                     "service": "static",
                     "style": "flat-square"
                  },
                  "{{ \"&nbsp;\" * ccc.theme.badge.separator }}",
                  "{%- for label in form.id_labels + form.labels -%}\n{{\n  mdit.element.badge(\n    service=\"static\",\n    label=label.prefix,\n    args={\"message\": label.suffix if label.prefix else label.name},\n    style=ccc.theme.badge.style,\n    color=label.color,\n    label_color=ccc.theme.badge.color.grey,\n    height=ccc.theme.badge.height,\n  ).source()\n}}{{ \"&nbsp;\" * ccc.theme.badge.separator }}\n{%- endfor -%}\n{%- set versions = labels[\"version\"] | map(attribute='suffix') | join(' | ') -%}\n{{\n  mdit.element.badge(\n    service=\"static\",\n    label=labels[\"version\"][0].prefix,\n    args={\"message\": versions},\n    style=ccc.theme.badge.style,\n    color=labels[\"version\"][0].color,\n    label_color=ccc.theme.badge.color.grey,\n    height=ccc.theme.badge.height,\n  ).source()\n}}\n"
               ]
            ],
            "sections": [
               {
                  "body": [
                     {
                        "args": {
                           "kind": "pulls",
                           "number": "{{ pull_request.number }}",
                           "repo": "PyPackIT",
                           "user": "RepoDynamics"
                        },
                        "class": "badges",
                        "height": "23px",
                        "items": [
                           {
                              "args": {
                                 "message": "{{ pull_request.state }}"
                              },
                              "color": "{{ ccc.theme.badge.color.green if pull_request.state == \"open\" else ccc.theme.badge.color.red }}",
                              "label": "State",
                              "service": "static"
                           },
                           {
                              "args": {
                                 "message": "{{ status_label.suffix }}"
                              },
                              "color": "{{ status_label.color if status_label.color is defined else ccc.label.status.color }}",
                              "label": "Last Status",
                              "service": "static",
                              "title": "{{ status_label.description }}"
                           },
                           {
                              "args": {
                                 "property": "last-update"
                              },
                              "endpoint": "issue_details",
                              "label": "Last Update",
                              "service": "github"
                           },
                           {
                              "args": {
                                 "property": "comments"
                              },
                              "endpoint": "issue_details",
                              "label": "Comments",
                              "service": "github"
                           }
                        ],
                        "label_color": "#494949",
                        "separator": 2,
                        "style": "flat-square"
                     }
                  ],
                  "heading": "Status"
               },
               {
                  "body": "{{ data.sdd }}\n",
                  "heading": "Software Design Document (SDD)"
               },
               {
                  "body": [
                     "{{ tasklist }}"
                  ],
                  "heading": "Implementation"
               },
               {
                  "body": [
                     [
                        "{% if ccc.web.readthedocs is defined -%}\n{% set config = ccc.web.readthedocs %}\n{% set domain = \"org.readthedocs.build\" if config.platform == \"community\" else \"com.readthedocs.build\" %}\n{% set url = \"https://\" ~ config.name ~ \"--\" ~ pull_request.number ~ \".\" ~ domain ~ \"/\" %}\n{% if config.version_scheme.translation %}\n  {% set url = url ~ config.language ~ \"/\" ~ pull_request.number ~ \"/\" %}\n{% endif %}\n{{\n  mdit.element.badge(\n    service=\"static\",\n    label=\"Website Preview\",\n    args={\"message\": \"Read The Docs\"},\n    style=ccc.theme.badge.style,\n    color=ccc.theme.badge.color.blue,\n    label_color=ccc.theme.badge.color.grey,\n    height=ccc.theme.badge.height,\n    link=url,\n  ).source()\n}}{{ \"&nbsp;\" * ccc.theme.badge.separator }}\n{%- endif -%}\n"
                     ]
                  ],
                  "heading": "Testing"
               },
               {
                  "body": [
                     "{{ data.deployment }}"
                  ],
                  "heading": "Deployment"
               },
               {
                  "body": "<div align=\"center\">\n\n{{ data.timeline }}\n\n</div>\n\n{{ config }}\n",
                  "heading": "Timeline"
               }
            ]
         }
      }
   },
   "pypkg_ci": {
      "dependency": {
         "core": {
            "actionman": {
               "install": {
                  "pip": {
                     "homepage": "https://pypi.org/project/actionman",
                     "name": "actionman",
                     "spec": "actionman ==0.1.1",
                     "version": "==0.1.1"
                  }
               },
               "name": "actionman",
               "url": {
                  "docs": "https://actionman.repodynamics.com",
                  "source": "https://github.com/repodynamics/actionman"
               }
            },
            "ansi-sgr": {
               "install": {
                  "pip": {
                     "homepage": "https://pypi.org/project/ansi-sgr",
                     "name": "ansi-sgr",
                     "spec": "ansi-sgr ==0.1.0",
                     "version": "==0.1.0"
                  }
               },
               "name": "ansi-sgr",
               "url": {
                  "docs": "https://ansi-sgr.repodynamics.com",
                  "source": "https://github.com/repodynamics/ansi-sgr"
               }
            },
            "conventionalcommits": {
               "install": {
                  "pip": {
                     "homepage": "https://pypi.org/project/conventionalcommits",
                     "name": "conventionalcommits",
                     "spec": "conventionalcommits ==0.1.0",
                     "version": "==0.1.0"
                  }
               },
               "name": "conventionalcommits",
               "url": {
                  "docs": "https://conventionalcommits.repodynamics.com",
                  "source": "https://github.com/repodynamics/conventionalcommits"
               }
            },
            "exceptionman": {
               "install": {
                  "pip": {
                     "homepage": "https://pypi.org/project/exceptionman",
                     "name": "exceptionman",
                     "spec": "exceptionman ==0.1.0",
                     "version": "==0.1.0"
                  }
               },
               "name": "exceptionman",
               "url": {
                  "docs": "https://exceptionman.repodynamics.com"
               }
            },
            "fileex": {
               "install": {
                  "pip": {
                     "homepage": "https://pypi.org/project/fileex",
                     "name": "fileex",
                     "spec": "fileex ==0.2.0",
                     "version": "==0.2.0"
                  }
               },
               "name": "fileex",
               "url": {
                  "docs": "https://fileex.repodynamics.com",
                  "source": "https://github.com/repodynamics/fileex"
               }
            },
            "github-contexts": {
               "install": {
                  "pip": {
                     "homepage": "https://pypi.org/project/github-contexts",
                     "name": "github-contexts",
                     "spec": "github-contexts ==0.1.1",
                     "version": "==0.1.1"
                  }
               },
               "name": "github-contexts",
               "url": {
                  "docs": "https://github-contexts.repodynamics.com",
                  "source": "https://github.com/repodynamics/github-contexts"
               }
            },
            "gittidy": {
               "install": {
                  "pip": {
                     "homepage": "https://pypi.org/project/gittidy",
                     "name": "gittidy",
                     "spec": "gittidy ==0.3.1",
                     "version": "==0.3.1"
                  }
               },
               "name": "gittidy",
               "url": {
                  "docs": "https://gittidy.repodynamics.com",
                  "source": "https://github.com/repodynamics/gittidy"
               }
            },
            "htmp": {
               "install": {
                  "pip": {
                     "homepage": "https://pypi.org/project/htmp",
                     "name": "htmp",
                     "spec": "htmp ==0.1.0",
                     "version": "==0.1.0"
                  }
               },
               "name": "htmp",
               "url": {
                  "docs": "https://htmp.repodynamics.com",
                  "source": "https://github.com/repodynamics/htmp"
               }
            },
            "jinja2": {
               "install": {
                  "pip": {
                     "homepage": "https://pypi.org/project/jinja2",
                     "name": "jinja2",
                     "spec": "jinja2 ==3.1.6",
                     "version": "==3.1.6"
                  }
               },
               "name": "jinja2"
            },
            "jsonpath-ng": {
               "install": {
                  "pip": {
                     "homepage": "https://pypi.org/project/jsonpath-ng",
                     "name": "jsonpath-ng",
                     "spec": "jsonpath-ng ==1.7.0",
                     "version": "==1.7.0"
                  }
               },
               "name": "jsonpath-ng"
            },
            "jsonschema": {
               "install": {
                  "pip": {
                     "homepage": "https://pypi.org/project/jsonschema",
                     "name": "jsonschema",
                     "spec": "jsonschema ==4.23.0",
                     "version": "==4.23.0"
                  }
               },
               "name": "jsonschema"
            },
            "jsonschemata": {
               "install": {
                  "pip": {
                     "homepage": "https://pypi.org/project/jsonschemata",
                     "name": "jsonschemata",
                     "spec": "jsonschemata ==0.1.0",
                     "version": "==0.1.0"
                  }
               },
               "name": "jsonschemata"
            },
            "licenseman": {
               "install": {
                  "pip": {
                     "homepage": "https://pypi.org/project/licenseman",
                     "name": "licenseman",
                     "spec": "licenseman ==0.1.0",
                     "version": "==0.1.0"
                  }
               },
               "name": "licenseman",
               "url": {
                  "docs": "https://licenseman.repodynamics.com"
               }
            },
            "loggerman": {
               "install": {
                  "pip": {
                     "homepage": "https://pypi.org/project/loggerman",
                     "name": "loggerman",
                     "spec": "loggerman ==0.1.0",
                     "version": "==0.1.0"
                  }
               },
               "name": "loggerman",
               "url": {
                  "docs": "https://loggerman.repodynamics.com",
                  "source": "https://github.com/repodynamics/loggerman"
               }
            },
            "mdit": {
               "install": {
                  "pip": {
                     "homepage": "https://pypi.org/project/mdit",
                     "name": "mdit",
                     "spec": "mdit ==0.1.0",
                     "version": "==0.1.0"
                  }
               },
               "name": "mdit",
               "url": {
                  "docs": "https://mdit.repodynamics.com",
                  "source": "https://github.com/repodynamics/mdit"
               }
            },
            "packaging": {
               "install": {
                  "pip": {
                     "homepage": "https://pypi.org/project/packaging",
                     "name": "packaging",
                     "spec": "packaging ==24.2",
                     "version": "==24.2"
                  }
               },
               "name": "packaging"
            },
            "pkgdata": {
               "install": {
                  "pip": {
                     "homepage": "https://pypi.org/project/pkgdata",
                     "name": "pkgdata",
                     "spec": "pkgdata ==0.1.0",
                     "version": "==0.1.0"
                  }
               },
               "name": "pkgdata",
               "url": {
                  "docs": "https://pkgdata.repodynamics.com",
                  "source": "https://github.com/repodynamics/pkgdata"
               }
            },
            "pycacheman": {
               "install": {
                  "pip": {
                     "homepage": "https://pypi.org/project/pycacheman",
                     "name": "pycacheman",
                     "spec": "pycacheman ==0.1.1",
                     "version": "==0.1.1"
                  }
               },
               "name": "pycacheman",
               "url": {
                  "source": "https://github.com/repodynamics/pycacheman"
               }
            },
            "pycolorit": {
               "install": {
                  "pip": {
                     "homepage": "https://pypi.org/project/pycolorit",
                     "name": "pycolorit",
                     "spec": "pycolorit ==0.1.1",
                     "version": "==0.1.1"
                  }
               },
               "name": "pycolorit",
               "url": {
                  "docs": "https://pycolorit.repodynamics.com",
                  "source": "https://github.com/repodynamics/pycolorit"
               }
            },
            "pylinks": {
               "install": {
                  "pip": {
                     "homepage": "https://pypi.org/project/pylinks",
                     "name": "pylinks",
                     "spec": "pylinks ==0.1.0",
                     "version": "==0.1.0"
                  }
               },
               "name": "pylinks",
               "url": {
                  "docs": "https://pylinks.repodynamics.com",
                  "source": "https://github.com/repodynamics/pylinks"
               }
            },
            "pyserials": {
               "install": {
                  "pip": {
                     "homepage": "https://pypi.org/project/pyserials",
                     "name": "pyserials",
                     "spec": "pyserials ==0.1.0",
                     "version": "==0.1.0"
                  }
               },
               "name": "pyserials",
               "url": {
                  "docs": "https://pyserials.repodynamics.com",
                  "source": "https://github.com/repodynamics/pyserials"
               }
            },
            "pyshellman": {
               "install": {
                  "pip": {
                     "homepage": "https://pypi.org/project/pyshellman",
                     "name": "pyshellman",
                     "spec": "pyshellman ==0.1.0",
                     "version": "==0.1.0"
                  }
               },
               "name": "pyshellman",
               "url": {
                  "docs": "https://pyshellman.repodynamics.com",
                  "source": "https://github.com/repodynamics/pyshellman"
               }
            },
            "pysyntax": {
               "install": {
                  "pip": {
                     "homepage": "https://pypi.org/project/pysyntax",
                     "name": "pysyntax",
                     "spec": "pysyntax ==0.1.0",
                     "version": "==0.1.0"
                  }
               },
               "name": "pysyntax",
               "url": {
                  "docs": "https://pysyntax.repodynamics.com",
                  "source": "https://github.com/repodynamics/pysyntax"
               }
            },
            "referencing": {
               "install": {
                  "pip": {
                     "homepage": "https://pypi.org/project/referencing",
                     "name": "referencing",
                     "spec": "referencing ==0.36.2",
                     "version": "==0.36.2"
                  }
               },
               "name": "referencing"
            },
            "rich": {
               "install": {
                  "pip": {
                     "homepage": "https://pypi.org/project/rich",
                     "name": "rich",
                     "spec": "rich ==13.9.4",
                     "version": "==13.9.4"
                  }
               },
               "name": "rich"
            },
            "ruamel.yaml": {
               "install": {
                  "pip": {
                     "homepage": "https://pypi.org/project/ruamel.yaml/",
                     "name": "ruamel.yaml",
                     "spec": "ruamel.yaml ==0.18.10",
                     "version": "==0.18.10"
                  }
               },
               "name": "ruamel.yaml"
            },
            "trove-classifiers": {
               "install": {
                  "pip": {
                     "homepage": "https://pypi.org/project/trove-classifiers",
                     "name": "trove-classifiers",
                     "spec": "trove-classifiers >=2025.3.13.13",
                     "version": ">=2025.3.13.13"
                  }
               },
               "name": "trove-classifiers"
            },
            "versionman": {
               "install": {
                  "pip": {
                     "homepage": "https://pypi.org/project/versionman",
                     "name": "versionman",
                     "spec": "versionman ==0.1.1",
                     "version": "==0.1.1"
                  }
               },
               "name": "versionman",
               "url": {
                  "docs": "https://versionman.repodynamics.com",
                  "source": "https://github.com/repodynamics/versionman"
               }
            }
         }
      },
      "entry": {
         "cli": {
            "main": {
               "conda": true,
               "description": "Main command line interface for PyPackIT.",
               "name": "proman",
               "parser": {
                  "arguments": [
                     {
                        "args": [
                           "--repo"
                        ],
                        "kwargs": {
                           "default": "./",
                           "help": "Local path to the repository's root directory."
                        }
                     },
                     {
                        "args": [
                           "--repo-upstream"
                        ],
                        "kwargs": {
                           "help": "Local path to the upstream repository's root directory."
                        }
                     },
                     {
                        "args": [
                           "--metadata-ref"
                        ],
                        "kwargs": {
                           "help": "Git reference to read the metadata.json file from."
                        }
                     },
                     {
                        "args": [
                           "--metadata-filepath"
                        ],
                        "kwargs": {
                           "help": "Relative path to the metadata.json file."
                        }
                     },
                     {
                        "args": [
                           "--main-metadata-filepath"
                        ],
                        "kwargs": {
                           "help": "Relative path to the metadata.json file in the default branch."
                        }
                     },
                     {
                        "args": [
                           "--github-token"
                        ],
                        "kwargs": {
                           "help": "GitHub token for accessing the repository."
                        }
                     },
                     {
                        "args": [
                           "--remove-tokens"
                        ],
                        "kwargs": {
                           "action": "store_true",
                           "help": "Remove all tokens read from the environment."
                        }
                     },
                     {
                        "args": [
                           "--no-validation"
                        ],
                        "kwargs": {
                           "action": "store_false",
                           "dest": "validate_metadata",
                           "help": "Skip validation of the metadata.json file."
                        }
                     },
                     {
                        "args": [
                           "--version"
                        ],
                        "kwargs": {
                           "action": "version",
                           "help": "Output the version of the package and exit.",
                           "version": "{__version__}"
                        }
                     }
                  ],
                  "insert": {
                     "prefix": "    ",
                     "regex_after": "\\n[ ]*# end auto-generated parser",
                     "regex_before": "# begin auto-generated parser\\n"
                  },
                  "kwargs": {
                     "description": "Project Manager CLI"
                  },
                  "subparser": {
                     "id": "main",
                     "kwargs": {
                        "dest": "command",
                        "required": true
                     },
                     "parsers": [
                        {
                           "args": [
                              "cca"
                           ],
                           "arguments": [
                              {
                                 "args": [
                                    "-x",
                                    "--action"
                                 ],
                                 "kwargs": {
                                    "choices": [
                                       "report",
                                       "apply",
                                       "pull",
                                       "merge",
                                       "commit",
                                       "amend"
                                    ],
                                    "default": "apply",
                                    "help": "Action to perform."
                                 }
                              },
                              {
                                 "args": [
                                    "-b",
                                    "--branch-version"
                                 ],
                                 "kwargs": {
                                    "help": "Branch-name to version mappings (e.g., -b main=0.0.0 dev=1.0.0a1) to use instead of git tags.",
                                    "metavar": "BRNACH=VERSION",
                                    "nargs": "*",
                                    "type": "str"
                                 },
                                 "post_process": "if args.branch_version:\n    try:\n        args.branch_version = dict(pair.split(\"=\", 1) for pair in args.branch_version)\n    except ValueError:\n        parser.error(\n            \"--branch-version must be in the format BRANCH=VERSION (e.g., -b main=1.0.0 dev=2.0.0).\"\n        )\n"
                              },
                              {
                                 "args": [
                                    "-p",
                                    "--control-center"
                                 ],
                                 "kwargs": {
                                    "help": "Path to the control center directory containing configuration files.",
                                    "type": "str"
                                 }
                              },
                              {
                                 "args": [
                                    "-c",
                                    "--clean-state"
                                 ],
                                 "kwargs": {
                                    "action": "store_true",
                                    "help": "Ignore the metadata.json file and start from scratch."
                                 }
                              }
                           ],
                           "defaults": {
                              "endpoint": "cca.run_cli"
                           },
                           "id": "cca",
                           "kwargs": {
                              "help": "Run Continuous Configuration Automation on the repository."
                           }
                        },
                        {
                           "args": [
                              "lint"
                           ],
                           "arguments": [
                              {
                                 "args": [
                                    "-x",
                                    "--action"
                                 ],
                                 "kwargs": {
                                    "choices": [
                                       "report",
                                       "apply",
                                       "pull",
                                       "merge",
                                       "commit",
                                       "amend"
                                    ],
                                    "default": "apply",
                                    "help": "Action to perform.",
                                    "type": "str"
                                 }
                              },
                              {
                                 "args": [
                                    "-r2",
                                    "--to-ref"
                                 ],
                                 "kwargs": {
                                    "help": "Run on files changed until the given git ref. This must be accompanied by --from-ref."
                                 },
                                 "post_process": "if (args.from_ref and not args.to_ref) or (args.to_ref and not args.from_ref):\n    parser.error(\"Both --from-ref and --to-ref must be provided together.\")\n"
                              }
                           ],
                           "defaults": {
                              "endpoint": "lint.run_cli"
                           },
                           "id": "lint",
                           "kwargs": {
                              "help": "Run pre-commit hooks on the repository."
                           },
                           "mutually_exclusive": [
                              {
                                 "arguments": [
                                    {
                                       "args": [
                                          "-i",
                                          "--hook-id"
                                       ],
                                       "kwargs": {
                                          "help": "Specific hook ID to run. This will only run the specified hook.",
                                          "type": "str"
                                       }
                                    },
                                    {
                                       "args": [
                                          "-s",
                                          "--hook-stage"
                                       ],
                                       "kwargs": {
                                          "help": "Specific hook stage to run. This will only run hooks in the specified stage.",
                                          "type": "str"
                                       }
                                    }
                                 ],
                                 "id": "hook"
                              },
                              {
                                 "arguments": [
                                    {
                                       "args": [
                                          "-a",
                                          "--all-files"
                                       ],
                                       "kwargs": {
                                          "action": "store_true",
                                          "help": "Run on all files in the repository."
                                       }
                                    },
                                    {
                                       "args": [
                                          "-f",
                                          "--files"
                                       ],
                                       "kwargs": {
                                          "help": "Run on specific files.",
                                          "nargs": "+"
                                       }
                                    },
                                    {
                                       "args": [
                                          "-r1",
                                          "--from-ref"
                                       ],
                                       "kwargs": {
                                          "help": "Run on files changed since the given git ref. This must be accompanied by --to-ref."
                                       }
                                    }
                                 ],
                                 "id": "file"
                              }
                           ]
                        },
                        {
                           "args": [
                              "version"
                           ],
                           "defaults": {
                              "endpoint": "version.run_cli"
                           },
                           "id": "version",
                           "kwargs": {
                              "help": "Print the current version of the project."
                           }
                        },
                        {
                           "args": [
                              "build"
                           ],
                           "id": "build",
                           "kwargs": {
                              "help": "Build project components."
                           },
                           "subparser": {
                              "id": "build",
                              "kwargs": {
                                 "dest": "build",
                                 "required": true
                              },
                              "parsers": [
                                 {
                                    "args": [
                                       "conda"
                                    ],
                                    "arguments": [
                                       {
                                          "args": [
                                             "-p",
                                             "--pkg"
                                          ],
                                          "kwargs": {
                                             "default": "main",
                                             "help": "Package ID, i.e., the `pypkg_` key suffix in configuration files."
                                          }
                                       },
                                       {
                                          "args": [
                                             "-o",
                                             "--output"
                                          ],
                                          "kwargs": {
                                             "default": ".local/temp/conda-channel",
                                             "help": "Path to the local conda channel directory.",
                                             "type": "str"
                                          }
                                       },
                                       {
                                          "args": [
                                             "-r",
                                             "--recipe"
                                          ],
                                          "kwargs": {
                                             "choices": [
                                                "local",
                                                "global"
                                             ],
                                             "default": "local",
                                             "help": "Type of recipe to build.",
                                             "type": "str"
                                          }
                                       },
                                       {
                                          "args": [
                                             "--args"
                                          ],
                                          "kwargs": {
                                             "help": "Additional arguments to pass to the conda build command.",
                                             "nargs": "argparse.REMAINDER"
                                          }
                                       }
                                    ],
                                    "defaults": {
                                       "endpoint": "build.conda.run_cli"
                                    },
                                    "id": "conda",
                                    "kwargs": {
                                       "help": "Build a conda package in the project."
                                    }
                                 },
                                 {
                                    "args": [
                                       "python"
                                    ],
                                    "arguments": [
                                       {
                                          "args": [
                                             "-p",
                                             "--pkg"
                                          ],
                                          "kwargs": {
                                             "default": "main",
                                             "help": "Package ID, i.e., the `pypkg_` key suffix in configuration files."
                                          }
                                       },
                                       {
                                          "args": [
                                             "-o",
                                             "--output"
                                          ],
                                          "kwargs": {
                                             "default": ".local/temp/wheelhouse",
                                             "help": "Path to the local PyPI channel directory.",
                                             "type": "str"
                                          }
                                       },
                                       {
                                          "args": [
                                             "--args"
                                          ],
                                          "kwargs": {
                                             "help": "Additional arguments to pass to the Python build command.",
                                             "nargs": "argparse.REMAINDER"
                                          }
                                       }
                                    ],
                                    "defaults": {
                                       "endpoint": "build.python.run_cli"
                                    },
                                    "id": "python",
                                    "kwargs": {
                                       "help": "Build a Python package in the project."
                                    }
                                 }
                              ]
                           }
                        },
                        {
                           "args": [
                              "render"
                           ],
                           "id": "render",
                           "kwargs": {
                              "help": "Render documents in the project."
                           },
                           "subparser": {
                              "id": "render",
                              "kwargs": {
                                 "dest": "render",
                                 "required": true
                              },
                              "parsers": [
                                 {
                                    "args": [
                                       "pypi"
                                    ],
                                    "arguments": [
                                       {
                                          "args": [
                                             "-p",
                                             "--pkg"
                                          ],
                                          "kwargs": {
                                             "default": "main",
                                             "help": "Package ID, i.e., the `pypkg_` key suffix in configuration files."
                                          }
                                       },
                                       {
                                          "args": [
                                             "-o",
                                             "--output"
                                          ],
                                          "kwargs": {
                                             "default": ".local/temp/readme-pypi",
                                             "help": "Output directory to write the rendered HTML file.",
                                             "type": "str"
                                          }
                                       }
                                    ],
                                    "defaults": {
                                       "endpoint": "render.pypi.run_cli"
                                    },
                                    "id": "pypi",
                                    "kwargs": {
                                       "help": "Render package README file for PyPI."
                                    }
                                 }
                              ]
                           }
                        },
                        {
                           "args": [
                              "gha"
                           ],
                           "defaults": {
                              "endpoint": "gha.run_cli"
                           },
                           "id": "gha",
                           "kwargs": {
                              "help": "Run CI/CD pipelines in GitHub Actions."
                           }
                        }
                     ]
                  }
               },
               "pypi": true,
               "ref": "proman.__main__:cli"
            }
         },
         "python": {
            "main": {
               "conda": true,
               "description": "Main Python API entry of the package.",
               "name": "proman",
               "pypi": true,
               "ref": "proman:__init__"
            }
         }
      },
      "import_name": "proman",
      "name": "ProMan",
      "os": {
         "linux-64": {
            "data": {
               "logo": "docs/website/source/_media/logo_ext/linux.png"
            },
            "name": "Linux (x64)",
            "platform": "linux-64",
            "runner": "ubuntu-24.04"
         },
         "linux-aarch64": {
            "data": {
               "logo": "docs/website/source/_media/logo_ext/linux.png"
            },
            "name": "Linux (arm64)",
            "platform": "linux-aarch64",
            "runner": "ubuntu-24.04-arm"
         },
         "osx-64": {
            "data": {
               "logo": "apple",
               "logo_color": "#000000"
            },
            "name": "macOS (x64)",
            "platform": "osx-64",
            "runner": "macos-13"
         },
         "osx-arm64": {
            "data": {
               "logo": "apple",
               "logo_color": "#000000"
            },
            "name": "macOS (arm64)",
            "platform": "osx-arm64",
            "runner": "macos-15"
         },
         "win-64": {
            "data": {
               "logo": "https://upload.wikimedia.org/wikipedia/commons/4/44/Microsoft_logo.svg"
            },
            "name": "Windows (x64)",
            "platform": "win-64",
            "runner": "windows-2025"
         }
      },
      "path": {
         "import": ".control/src/proman",
         "import_rel": "src/proman",
         "root": ".control",
         "source": ".control/src",
         "source_rel": "src"
      },
      "pypi": {
         "publishable": true,
         "url": {
            "home": "https://pypi.org/project/ProMan"
         }
      },
      "pyproject": {
         "build-system": {
            "build-backend": "setuptools.build_meta",
            "requires": [
               "setuptools >=72.1.0,<73"
            ]
         },
         "project": {
            "dependencies": [
               "actionman ==0.1.1",
               "ansi-sgr ==0.1.0",
               "conventionalcommits ==0.1.0",
               "exceptionman ==0.1.0",
               "fileex ==0.2.0",
               "github-contexts ==0.1.1",
               "gittidy ==0.3.1",
               "htmp ==0.1.0",
               "jinja2 ==3.1.6",
               "jsonpath-ng ==1.7.0",
               "jsonschema ==4.23.0",
               "jsonschemata ==0.1.0",
               "licenseman ==0.1.0",
               "loggerman ==0.1.0",
               "mdit ==0.1.0",
               "packaging ==24.2",
               "pkgdata ==0.1.0",
               "pycacheman ==0.1.1",
               "pycolorit ==0.1.1",
               "pylinks ==0.1.0",
               "pyserials ==0.1.0",
               "pyshellman ==0.1.0",
               "pysyntax ==0.1.0",
               "referencing ==0.36.2",
               "ruamel.yaml ==0.18.10",
               "rich ==13.9.4",
               "trove-classifiers >=2025.3.13.13",
               "versionman ==0.1.1"
            ],
            "name": "ProMan",
            "requires-python": ">=3.10",
            "scripts": {
               "proman": "proman.__main__:cli"
            },
            "version": "0.1.0"
         },
         "tool": {
            "setuptools": {
               "include-package-data": true,
               "packages": {
                  "find": {
                     "namespaces": true,
                     "where": [
                        "src"
                     ]
                  }
               }
            }
         }
      },
      "python": {
         "implementation": "cpython",
         "pure": true,
         "version": {
            "micros": [
               "3.10.0",
               "3.10.1",
               "3.10.2",
               "3.10.3",
               "3.10.4",
               "3.10.5",
               "3.10.6",
               "3.10.7",
               "3.10.8",
               "3.10.9",
               "3.10.10",
               "3.10.11",
               "3.10.12",
               "3.10.13",
               "3.10.14",
               "3.10.15",
               "3.10.16",
               "3.10.17",
               "3.11.0",
               "3.11.1",
               "3.11.2",
               "3.11.3",
               "3.11.4",
               "3.11.5",
               "3.11.6",
               "3.11.7",
               "3.11.8",
               "3.11.9",
               "3.11.10",
               "3.11.11",
               "3.11.12",
               "3.12.0",
               "3.12.1",
               "3.12.2",
               "3.12.3",
               "3.12.4",
               "3.12.5",
               "3.12.6",
               "3.12.7",
               "3.12.8",
               "3.12.9",
               "3.12.10",
               "3.13.0",
               "3.13.1",
               "3.13.2",
               "3.13.3"
            ],
            "minors": [
               "3.10",
               "3.11",
               "3.12",
               "3.13"
            ],
            "spec": ">=3.10"
         }
      },
      "typed": true
   },
   "pypkg_main": {
      "conda": {
         "publishable": true,
         "recipe": {
            "meta": {
               "values": {
                  "about": {
                     "dev_url": "https://github.com/RepoDynamics/PyPackIT",
                     "doc_source_url": "https://github.com/RepoDynamics/PyPackIT/blob/main/README.md",
                     "doc_url": "https://pypackit.repodynamics.com",
                     "home": "https://pypackit.repodynamics.com",
                     "license": "AGPL-3.0-or-later",
                     "license_file": [
                        "{{ pkg_dir }}LICENSES/",
                        "{{ pkg_dir }}COPYRIGHTS/"
                     ],
                     "summary": "Cloud-Native Continuous Software Engineering Automation for Python Packages on GitHub"
                  },
                  "build": {
                     "values": {
                        "script": [
                           {
                              "value": "{{ PYTHON }} -m pip install {{ pkg_dir }} --no-deps --no-build-isolation -vv"
                           }
                        ]
                     }
                  },
                  "extra": {
                     "recipe-maintainers": [
                        "AAriam"
                     ]
                  },
                  "requirements": {
                     "values": {
                        "host": {
                           "values": [
                              {
                                 "value": "python >=3.10"
                              },
                              {
                                 "value": "pip"
                              },
                              {
                                 "value": "conda-forge::setuptools >=72.1.0,<73"
                              },
                              {
                                 "value": "conda-forge::versioningit >=3.1.2,<4"
                              }
                           ]
                        },
                        "run": {
                           "values": [
                              {
                                 "value": "python >=3.10"
                              },
                              {
                                 "value": "repodynamics::pkgdata "
                              }
                           ]
                        },
                        "run_constrained": {
                           "values": []
                        }
                     }
                  },
                  "test": {
                     "values": {
                        "commands": {
                           "values": [
                              {
                                 "value": "pip check"
                              },
                              {
                                 "value": "pypackit --help"
                              }
                           ]
                        },
                        "imports": {
                           "values": [
                              {
                                 "value": "pypackit"
                              }
                           ]
                        },
                        "requires": {
                           "values": [
                              {
                                 "value": "pip"
                              }
                           ]
                        }
                     }
                  }
               }
            },
            "path": {
               "global": "pkg/conda-recipe/global",
               "local": "pkg/conda-recipe/local"
            }
         },
         "url": {
            "home": "https://anaconda.org/repodynamics/pypackit"
         }
      },
      "dependency": {
         "build": {
            "setuptools": {
               "install": {
                  "conda": {
                     "channel": "conda-forge",
                     "homepage": "https://anaconda.org/conda-forge/setuptools",
                     "name": "setuptools",
                     "spec": "conda-forge::setuptools >=72.1.0,<73",
                     "version": ">=72.1.0,<73"
                  },
                  "pip": {
                     "homepage": "https://pypi.org/project/setuptools/",
                     "name": "setuptools",
                     "spec": "setuptools >=72.1.0,<73",
                     "version": ">=72.1.0,<73"
                  }
               },
               "name": "setuptools"
            },
            "versioning": {
               "import_name": "versioningit",
               "install": {
                  "conda": {
                     "channel": "conda-forge",
                     "homepage": "https://anaconda.org/conda-forge/versioningit",
                     "name": "versioningit",
                     "spec": "conda-forge::versioningit >=3.1.2,<4",
                     "version": ">=3.1.2,<4"
                  },
                  "pip": {
                     "homepage": "https://pypi.org/project/versioningit/",
                     "name": "versioningit",
                     "spec": "versioningit >=3.1.2,<4",
                     "version": ">=3.1.2,<4"
                  }
               },
               "name": "versioningit"
            }
         },
         "core": {
            "pkgdata": {
               "description": "Handling package resources, such as accessing data files that are\ndistributed with the package.\n",
               "install": {
                  "conda": {
                     "channel": "repodynamics",
                     "homepage": "https://anaconda.org/repodynamics/pkgdata",
                     "name": "pkgdata",
                     "spec": "repodynamics::pkgdata",
                     "version": ""
                  },
                  "pip": {
                     "homepage": "https://pypi.org/project/pkgdata/",
                     "name": "pkgdata",
                     "spec": "pkgdata"
                  }
               },
               "name": "pkgdata",
               "url": {
                  "docs": "https://pkgdata.repodynamics.com/",
                  "source": "https://github.com/repodynamics/pkgdata"
               }
            }
         }
      },
      "entry": {
         "cli": {
            "main": {
               "conda": true,
               "description": "Main CLI entry of the package.",
               "name": "pypackit",
               "pypi": true,
               "ref": "pypackit.__main__:main"
            }
         },
         "python": {
            "main": {
               "conda": true,
               "description": "Main Python API entry of the package.",
               "name": "pypackit",
               "pypi": true,
               "ref": "pypackit:__init__"
            }
         }
      },
      "file": {
         "readme": {
            "content": {
               "body": [
                  {
                     "align": "center",
                     "alt": "PyPackIT: Cloud-Native Continuous Software Engineering Automation for Python Packages on GitHub",
                     "class": "block_image",
                     "link": "https://pypackit.repodynamics.com",
                     "src": "https://raw.githubusercontent.com/RepoDynamics/PyPackIT/main/docs/website/source/_media/logo/full_light.svg",
                     "src_dark": "https://raw.githubusercontent.com/RepoDynamics/PyPackIT/main/docs/website/source/_media/logo/full_dark.svg",
                     "title": "Welcome to PyPackIT! Click to visit our website and learn more.",
                     "width": "100%"
                  },
                  {
                     "attrs_container": {
                        "align": "center"
                     },
                     "class": "menu",
                     "color": "rgb(0 85 0)",
                     "color_dark": "rgb(28 170 0)",
                     "height": "33px",
                     "items": [
                        {
                           "link": "https://pypackit.repodynamics.com/intro",
                           "text": "Intro",
                           "title": "Introduction and Background"
                        },
                        {
                           "link": "https://pypackit.repodynamics.com/manual",
                           "text": "Manual",
                           "title": "User Manual"
                        },
                        {
                           "link": "https://pypackit.repodynamics.com/news",
                           "text": "News",
                           "title": "Latest News and Releases"
                        },
                        {
                           "link": "https://pypackit.repodynamics.com/contribute",
                           "text": "Contribute",
                           "title": "How to Contribute"
                        },
                        {
                           "link": "https://pypackit.repodynamics.com/about",
                           "text": "About",
                           "title": "About the Project"
                        },
                        {
                           "link": "https://pypackit.repodynamics.com/help",
                           "text": "Help",
                           "title": "Get Help and Support"
                        }
                     ],
                     "line_bottom_width": "100%",
                     "line_top_width": "100%",
                     "style": "for-the-badge"
                  },
                  [
                     {
                        "args": {
                           "message": "Automation"
                        },
                        "class": "badge",
                        "color": "#0B3C75",
                        "height": "23px",
                        "label": "Keywords",
                        "label_color": "#494949",
                        "service": "static",
                        "style": "flat-square"
                     },
                     "&nbsp;",
                     {
                        "class": "buttons",
                        "color": "#0B3C75",
                        "height": "23px",
                        "items": [
                           "Cloud-Native Development",
                           "Continuous Integration",
                           "Continuous Delivery",
                           "Continuous Deployment",
                           "Continuous Testing",
                           "Continuous Refactoring",
                           "Continuous Configuration Automation",
                           "Continuous Software Engineering",
                           "DevOps",
                           "Infrastructure as Code",
                           "Agile",
                           "Dynamic Project Management",
                           "Template Repository",
                           "Python Package Skeleton",
                           "Sphinx Website",
                           "Testing Infrastructure",
                           "FAIR Software",
                           "GitHub Actions",
                           "Bot"
                        ],
                        "style": "flat-square"
                     }
                  ],
                  {
                     "attrs": {
                        "align": "justify"
                     },
                     "class": "paragraph",
                     "content": "PyPackIT [\u02c8pa\u026a\u02ccp\u00e6k\u026at] is a comprehensive <strong>cloud-based automation tool</strong> for production of <abbr title=\"Findable, Accessible, Interoperable, and Reusable\">FAIR</abbr> and professional applications on <strong>GitHub</strong>, in accordance with the latest software engineering best practices and standards. PyPackIT is a ready-to-use software suite that streamlines the initiation, configuration, development, publication, management, and maintenance of high-quality <strong>Python applications</strong>. By taking charge of repetitive tasks and automatically enforcing best practices throughout the software development life cycle, PyPackIT enables users to solely focus on the creative aspects of their projects, while improving quality and lowering production costs. Using latest tools and methodologies, PyPackIT offers a robust project infrastructure, including a build-ready Python <strong>package skeleton</strong>, a fully operational <strong>test suite</strong>, an automated <strong>documentation website</strong>, and a comprehensive <strong>control center</strong> according to <strong>Infrastructure-as-Code</strong> and <strong>Continuous Configuration Automation</strong> practices to enable dynamic project management and customization. PyPackIT establishes a complete <strong>cloud development</strong> environment on GitHub, integrating with its version control system, issue tracker,and pull-based model to provide a fully <strong>automated software development workflow</strong> with <strong>issue management</strong>, <strong>branching model</strong>, and <strong>versioning scheme</strong>. Leveraging <strong>GitHub Actions</strong>, PyPackIT implements a cloud-native Agile development process using <strong>Continuous software engineering</strong>, <strong>containerization</strong>, and <strong>DevOps</strong> methodologies, with a full set of <strong>Continuous Integration</strong>, Deployment, Testing, Refactoring, and Maintenance pipelines. PyPackIT is a <strong>free</strong> and <strong>open-source</strong> software suite that readily integrates with both new and existing projects to ensure their long-term sustainability and high quality, enabling software projects to rapidly implement their ideas and easily maintain their products."
                  },
                  {
                     "class": "badges",
                     "color": "#0B3C75",
                     "height": "23px",
                     "items": [
                        {
                           "args": {
                              "message": "10.5281/zenodo.14359838"
                           },
                           "color": "#1682D4",
                           "label": "DOI",
                           "link": "https://doi.org/10.5281/zenodo.14359838",
                           "logo": "zenodo",
                           "logo_type": "name"
                        },
                        {
                           "args": {
                              "message": "pypackit"
                           },
                           "color": "#3775A9",
                           "label": "pip install ",
                           "link": "https://pypi.org/project/PyPackIT",
                           "logo": "docs/website/source/_media/logo_ext/pypi.png",
                           "logo_media_type": "png",
                           "logo_type": "file"
                        },
                        {
                           "args": {
                              "message": "pypackit -c repodynamics"
                           },
                           "color": "#44A833",
                           "label": "conda install",
                           "link": "https://anaconda.org/repodynamics/pypackit",
                           "logo": "anaconda",
                           "logo_color": "#44A833",
                           "logo_type": "name"
                        },
                        {
                           "args": {
                              "message": "ghcr.io/repodynamics/pypackit:latest"
                           },
                           "color": "#2496ED",
                           "label": "docker pull",
                           "link": "https://github.com/RepoDynamics/PyPackIT/pkgs/container/PyPackIT",
                           "logo": "docker",
                           "logo_color": "#2496ED",
                           "logo_type": "name"
                        },
                        {
                           "args": {
                              "message": "PyPackIT"
                           },
                           "color": "#181717",
                           "label": "GitHub",
                           "link": "https://github.com/RepoDynamics/PyPackIT/releases",
                           "logo": "github",
                           "logo_type": "name"
                        },
                        {
                           "args": {
                              "message": "try online",
                              "ref": "main",
                              "repo": "PyPackIT",
                              "user": "RepoDynamics"
                           },
                           "color": "#579ACA",
                           "endpoint": "github",
                           "label": "Binder",
                           "label_color": "#494949",
                           "service": "binder"
                        }
                     ],
                     "label_color": "#494949",
                     "separator": 2,
                     "service": "static",
                     "style": "flat-square"
                  }
               ],
               "footer": [
                  {
                     "class": "thematic_break"
                  },
                  {
                     "class": "badges",
                     "items": [
                        {
                           "align": "left",
                           "alt": "PyPackIT: Copyright \u00a9 2023\u20132025 RepoDynamics",
                           "args": {
                              "query": "$.copyright",
                              "url": "https://raw.githubusercontent.com/RepoDynamics/PyPackIT/main/.github/.repodynamics/metadata.json"
                           },
                           "color": "rgb(0 85 0)",
                           "color_dark": "rgb(28 170 0)",
                           "label": "PyPackIT",
                           "link": "https://github.com/RepoDynamics",
                           "logo": "docs/website/source/_media/logo/favicon.svg",
                           "logo_dark": "docs/website/source/_media/logo/favicon.svg",
                           "logo_type": "file",
                           "logo_type_dark": "file",
                           "service": "dynamic",
                           "title": "PyPackIT: Copyright \u00a9 2023\u20132025 RepoDynamics"
                        },
                        {
                           "align": "right",
                           "alt": "SPDX-License-Identifier: AGPL-3.0-or-later",
                           "args": {
                              "message": "AGPL-3.0-or-later"
                           },
                           "color": "#4398CC",
                           "label": "SPDX License Identifier",
                           "link": "https://pypackit.repodynamics.com/about/license",
                           "logo": "spdx",
                           "logo_color": "#4398CC",
                           "service": "static",
                           "title": "SPDX-License-Identifier: AGPL-3.0-or-later"
                        }
                     ],
                     "style": "for-the-badge"
                  }
               ],
               "sections": [
                  {
                     "body": [
                        {
                           "attrs_p": {
                              "align": "justify"
                           },
                           "button": {
                              "align": "left",
                              "color": [
                                 "rgb(0 85 0)",
                                 "rgb(60 85 0)"
                              ],
                              "color_dark": [
                                 "rgb(28 170 0)",
                                 "rgb(175 138 0)"
                              ],
                              "height": "30px",
                              "style": "for-the-badge"
                           },
                           "class": "highlights",
                           "items": [
                              {
                                 "description": "PyPackIT is fully preconfigured and easily installable\nin both new and existing repositories via a GitHub repository template.\nMost users only need to invest a few minutes filling project-specific information\nin the provided configuration files.\nPyPackIT then takes over, setting up the repository\nand generating a complete infrastructure and fully automated development workflow for the project.\nThis leaves users with only few tasks throughout the software development life cycle,\nsuch as adding application code, unit-tests, and minimal documentation content.\n",
                                 "title": "Ready to Use"
                              },
                              {
                                 "description": "PyPackIT is a cloud-based solution that integrates with GitHub\nand uses GitHub Actions to automate the entire software development process.\nIt provides a cloud-native development environment that\neliminates the need for initial setup and configuration,\nenabling users to immediately begin with the actual\nimplementation of software, even directly from the web browser.\nAll integration, testing, and deployment tasks are automatically carried out on the cloud,\nfacilitating Agile development and ensuring the consistent enforcement of best practices.\n",
                                 "title": "Cloud Native Development"
                              },
                              {
                                 "description": "PyPackIT offers a centralized user interface\nfor automatic configuration, customization, and management\nof the entire project, and even multiple projects at once.\nBased on DevOps practices like Infrastructure-as-Code,\nPyPackIT's control center consolidates all project configurations\ninto a unified data structure, supporting both declarative definitions\nand dynamic data generation at runtime via built-in templating, scripting,\nand online retrieval features.\nConfigurations are automatically applied to related components,\neliminating redundancy and rendering the entire project dynamic.\n",
                                 "title": "Continuous Configuration Automation"
                              },
                              {
                                 "description": "PyPackIT's CI/CD pipelines automate tasks such as code analysis,\nstyle formatting, type checking, refactoring, testing, dependency monitoring,\nversioning, build, containerization, release, and distribution,\nwith support for multiple indexing repositories including PyPI, Anaconda,\nZenodo, GitHub Releases, and all Docker registries.\nThese Continuous software engineering pipelines eliminate the need for dedicated integration\nand deployment teams, while increasing control, integrity, scalability, security,\nand transparency of the Agile development process.\n",
                                 "title": "Continuous Integration & Deployment"
                              },
                              {
                                 "description": "PyPackIT provides Continuous pipelines that\nperiodically perform automated testing, refactoring, and maintenance tasks\nsuch as testing previous releases with up-to-date dependencies,\nrefactoring code according to the latest standards,\nupgrading development tools and project infrastructure,\nand cleaning up the repository and its development environment.\nPyPackIT can automatically submit issue tickets and pull requests\nfor applying updates and fixes, thus maintaining\nthe health of the project and ensuring its long-term sustainability.\n",
                                 "title": "Continuous Refactoring & Testing"
                              },
                              {
                                 "description": "PyPackIT automatically maintains the project's issue tracking system,\nproviding type-specific submission forms that are\nkept up-to-date with project information.\nThese collect user inputs in a structured format,\nallowing PyPackIT to automate issue management activities\nsuch as ticket formatting, labeling, bug triage, task assignment,\ndocumentation, issue\u2013commit linkage, and progress reports.\nUsers can also command PyPackIT to perform specific tasks using semantic comments and labels,\neliminating all repetitive issue management activities.\n",
                                 "title": "Issue Management"
                              },
                              {
                                 "description": "PyPackIT fully integrates with Git and GitHub\nto automate version control tasks like branching,\nversioning, tagging, commit management, and merging.\nBased on well-established models such as Git Flow,\nPyPackIT adopts a specialized branching strategy and version scheme\nfor simultaneous development and deployment of multiple orthogonal release candidates,\nPyPackIT's strategy enables rapid project evolution according to Agile\nand Continuous software engineering methodologies,\nwhile ensuring availability and long-term support of earlier releases.\n",
                                 "title": "Version Control"
                              },
                              {
                                 "description": "PyPackIT supports Python applications with extension modules and non-Python dependencies.\nIt enables deployment as a Python package, a Conda package,\nand/or a Docker image to cloud services such as PyPI,\nAnaconda, Docker registries, and BinderHub instances.\nPyPackIT includes a build-ready package skeleton with essential source files\nand automatically maintained configuration files customized for the project.\nUsers only need to add application code in the provided source files,\nwhile PyPackIT automates all integration, packaging, and deployment tasks.\n",
                                 "title": "Python Application"
                              },
                              {
                                 "description": "PyPackIT's fully automated testing infrastructure enables the\nimmediate adoption of test-driven development methodologies,\nrequiring users to only provide test cases in the provided skeleton files.\nTesting is then automatically performed at various phases of the development life cycle,\nwhile generating comprehensive reports and coverage metrics\nto improve awareness of software health status.\nThe test suite is automatically packaged and distributed along each release,\nallowing for local verification of software functionality and performance by its users.\n",
                                 "title": "Test Suite"
                              },
                              {
                                 "description": "PyPackIT includes a fully designed website\nfilled with automatically generated documentation such as\nproject information, package metadata, installation guides,\nAPI reference, changelogs, release notes,\ncontribution guides, and citation data.\nThe website is automatically deployed to GitHub Pages and Read The Docs platforms,\nand can be easily customized via the control center with no web development knowledge.\nPyPackIT can also dynamically generate standalone documents in various Markdown formats,\nsuch as READMEs for different repositories.\n",
                                 "title": "Documentation Website"
                              },
                              {
                                 "description": "PyPackIT incorporates the System Package Data Exchange (SPDX) license standard\nand supports all SPDX License List licenses and exceptions, as well as user-defined ones.\nProjects can define complex licenses simply by providing an SPDX license expression.\nPyPackIT will then automatically retrieve\nthe necessary data from the SPDX database,\ncustomize it with project-specific information,\ngenerate visually appealing and syntactically valid license files and copyright notices,\nand integrate license information into all project components and releases.\n",
                                 "title": "Copyright & Licensing"
                              },
                              {
                                 "description": "PyPackIT improves project security while supporting community collaboration\nby incorporating security measures like branch and tag protection rulesets,\nvulnerability scanning, dependency monitoring, and private security advisories.\nAll provided GitHub Actions workflows and applications are developed\naccording to the latest security standards\nto prevent unauthorized access, data breaches, and code injection attacks.\nTo ensure that PyPackIT is highly secure and transparent,\nmost of its infrastructure is natively implemented and self-contained.\n",
                                 "title": "Security & Transparency"
                              }
                           ]
                        }
                     ],
                     "heading": "Highlights"
                  },
                  {
                     "body": [
                        {
                           "class": "badges",
                           "color": "#0B3C75",
                           "height": "23px",
                           "items": [
                              {
                                 "args": {
                                    "message": "0.0.0"
                                 },
                                 "color": "rgb(60 85 0)",
                                 "color_dark": "rgb(175 138 0)",
                                 "label": "PyPackIT",
                                 "label_color": "rgb(0 85 0)",
                                 "label_color_dark": "rgb(28 170 0)",
                                 "logo": "docs/website/source/_media/logo/favicon.svg",
                                 "logo_type": "file"
                              },
                              {
                                 "args": {
                                    "message": "major"
                                 },
                                 "color": "#AF1F10",
                                 "label": "\ud83d\udca5\u2002Release Type"
                              },
                              {
                                 "args": {
                                    "message": "2025-04-14"
                                 },
                                 "label": "\ud83d\uddd3\u2002Release Date"
                              },
                              {
                                 "args": {
                                    "message": "10.5281/zenodo.14359839"
                                 },
                                 "color": "#1682D4",
                                 "label": "DOI",
                                 "link": "https://zenodo.org/uploads/14359839",
                                 "logo": "zenodo",
                                 "logo_color": "#1682D4"
                              },
                              {
                                 "args": {
                                    "message": "PyPackIT == 0.0.0"
                                 },
                                 "color": "#3775A9",
                                 "label": "pip install",
                                 "link": "https://pypi.org/project/PyPackIT",
                                 "logo": "docs/website/source/_media/logo_ext/pypi.png",
                                 "logo_media_type": "png",
                                 "logo_type": "file"
                              },
                              {
                                 "args": {
                                    "message": "PyPackIT == 0.0.0 -c RepoDynamics"
                                 },
                                 "color": "#44A833",
                                 "label": "conda install",
                                 "link": "https://anaconda.org/repodynamics/pypackit",
                                 "logo": "anaconda",
                                 "logo_color": "#44A833",
                                 "logo_type": "name"
                              },
                              {
                                 "args": {
                                    "message": "ghcr.io/repodynamics/pypackit:0.0.0"
                                 },
                                 "color": "#2496ED",
                                 "label": "docker pull",
                                 "link": "https://github.com/RepoDynamics/PyPackIT/pkgs/container/PyPackIT",
                                 "logo": "docker",
                                 "logo_color": "#2496ED",
                                 "logo_type": "name"
                              },
                              {
                                 "args": {
                                    "message": "ver/0.0.0"
                                 },
                                 "color": "#181717",
                                 "label": "git checkout",
                                 "link": "https://github.com/RepoDynamics/PyPackIT/releases",
                                 "logo": "github",
                                 "logo_type": "name"
                              },
                              {
                                 "args": {
                                    "message": "try online",
                                    "ref": "ver/0.0.0",
                                    "repo": "PyPackIT",
                                    "user": "RepoDynamics"
                                 },
                                 "color": "#579ACA",
                                 "endpoint": "github",
                                 "label": "Binder",
                                 "service": "binder"
                              }
                           ],
                           "label_color": "#494949",
                           "separator": 2,
                           "service": "static",
                           "style": "flat-square"
                        },
                        "**Project Initialization**",
                        "This is an initial emtpy release."
                     ],
                     "heading": "Upcoming Release",
                     "sections": [
                        {
                           "body": [
                              {
                                 "class": "badges",
                                 "color": "#0B3C75",
                                 "height": "23px",
                                 "items": [
                                    {
                                       "args": {
                                          "message": "10.5072/zenodo.141305"
                                       },
                                       "color": "#1682D4",
                                       "label": "DOI",
                                       "link": "https://sandbox.zenodo.org/uploads/141305",
                                       "logo": "zenodo",
                                       "logo_color": "#1682D4"
                                    }
                                 ],
                                 "label_color": "#494949",
                                 "separator": 2,
                                 "service": "static",
                                 "style": "flat-square"
                              }
                           ],
                           "heading": "Latest Developmental Release"
                        },
                        {
                           "body": [
                              [
                                 {
                                    "class": "button",
                                    "color": "#494949",
                                    "height": "23px",
                                    "style": "flat-square",
                                    "text": "\u2699\ufe0f\u2002Operating System"
                                 },
                                 "&nbsp;",
                                 {
                                    "class": "badges",
                                    "height": "23px",
                                    "items": [
                                       {
                                          "args": {
                                             "message": "any"
                                          },
                                          "color": "#00802B",
                                          "label": "Linux (x64)",
                                          "logo": "docs/website/source/_media/logo_ext/linux.png",
                                          "logo_color": null
                                       },
                                       {
                                          "args": {
                                             "message": "any"
                                          },
                                          "color": "#00802B",
                                          "label": "Linux (arm64)",
                                          "logo": "docs/website/source/_media/logo_ext/linux.png",
                                          "logo_color": null
                                       },
                                       {
                                          "args": {
                                             "message": "any"
                                          },
                                          "color": "#00802B",
                                          "label": "macOS (x64)",
                                          "logo": "apple",
                                          "logo_color": "#000000"
                                       },
                                       {
                                          "args": {
                                             "message": "any"
                                          },
                                          "color": "#00802B",
                                          "label": "macOS (arm64)",
                                          "logo": "apple",
                                          "logo_color": "#000000"
                                       },
                                       {
                                          "args": {
                                             "message": "any"
                                          },
                                          "color": "#00802B",
                                          "label": "Windows (x64)",
                                          "logo": "https://upload.wikimedia.org/wikipedia/commons/4/44/Microsoft_logo.svg",
                                          "logo_color": null
                                       }
                                    ],
                                    "label_color": "#494949",
                                    "separator": 1,
                                    "service": "static",
                                    "style": "flat-square"
                                 }
                              ],
                              [
                                 {
                                    "args": {
                                       "message": "Python"
                                    },
                                    "class": "badge",
                                    "color": "#494949",
                                    "height": "23px",
                                    "label_color": "#494949",
                                    "logo": "docs/website/source/_media/logo_ext/python.svg",
                                    "logo_media_type": "svg+xml",
                                    "logo_type": "file",
                                    "service": "static",
                                    "style": "flat-square"
                                 },
                                 "&nbsp;",
                                 {
                                    "class": "badges",
                                    "color": "#0B3C75",
                                    "height": "23px",
                                    "items": [
                                       {
                                          "args": {
                                             "message": "3.10 | 3.11 | 3.12 | 3.13"
                                          },
                                          "label": "Versions"
                                       },
                                       {
                                          "args": {
                                             "message": "any"
                                          },
                                          "color": "#00802B",
                                          "label": "Implementation"
                                       }
                                    ],
                                    "label_color": "#494949",
                                    "separator": 1,
                                    "service": "static",
                                    "style": "flat-square"
                                 }
                              ],
                              [
                                 {
                                    "class": "button",
                                    "color": "#494949",
                                    "height": "23px",
                                    "style": "flat-square",
                                    "text": "\ud83d\udce6\u2002Dependencies"
                                 },
                                 "&nbsp;",
                                 {
                                    "class": "badges",
                                    "height": "23px",
                                    "items": [
                                       {
                                          "args": {
                                             "message": "any"
                                          },
                                          "color": "#00802B",
                                          "label": "pkgdata"
                                       }
                                    ],
                                    "label_color": "#494949",
                                    "separator": 1,
                                    "service": "static",
                                    "style": "flat-square"
                                 }
                              ]
                           ],
                           "heading": "Requirements"
                        },
                        {
                           "body": [
                              [
                                 {
                                    "class": "button",
                                    "color": "#494949",
                                    "height": "23px",
                                    "logo": "docs/website/source/_media/logo_ext/python.svg",
                                    "logo_media_type": "svg+xml",
                                    "logo_type": "file",
                                    "style": "flat-square",
                                    "text": "API"
                                 },
                                 "&nbsp;",
                                 {
                                    "class": "badges",
                                    "color": "#0B3C75",
                                    "height": "23px",
                                    "items": [
                                       {
                                          "alt": "pypackit",
                                          "args": {
                                             "message": "pypackit"
                                          },
                                          "color": "#3776AB",
                                          "title": "Main Python API entry of the package."
                                       }
                                    ],
                                    "label": "import",
                                    "label_color": "#494949",
                                    "separator": 1,
                                    "service": "static",
                                    "style": "flat-square"
                                 }
                              ],
                              [
                                 {
                                    "class": "button",
                                    "color": "#494949",
                                    "height": "23px",
                                    "logo": "gnubash",
                                    "logo_color": "#4EAA25",
                                    "style": "flat-square",
                                    "text": "CLI"
                                 },
                                 "&nbsp;",
                                 {
                                    "class": "badges",
                                    "color": "#0B3C75",
                                    "height": "23px",
                                    "items": [
                                       {
                                          "alt": "pypackit",
                                          "args": {
                                             "message": "pypackit"
                                          },
                                          "color": "#000",
                                          "title": "Main CLI entry of the package."
                                       }
                                    ],
                                    "label": "$",
                                    "label_color": "#494949",
                                    "separator": 1,
                                    "service": "static",
                                    "style": "flat-square"
                                 }
                              ]
                           ],
                           "heading": "Interfaces"
                        }
                     ]
                  },
                  {
                     "body": [
                        {
                           "class": "table",
                           "rows": [
                              [
                                 "<b>Project</b>",
                                 [
                                    {
                                       "args": {
                                          "repo": "PyPackIT",
                                          "user": "RepoDynamics"
                                       },
                                       "class": "badges",
                                       "color": "#0B3C75",
                                       "height": "23px",
                                       "items": [
                                          {
                                             "endpoint": "created_at",
                                             "label": "\ud83d\uddd3\u2002Creation Date"
                                          },
                                          {
                                             "endpoint": "contributors",
                                             "label": "\ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Contributors"
                                          },
                                          {
                                             "endpoint": "language_count",
                                             "label": "\ud83d\udd20\u2002Programming Languages"
                                          },
                                          {
                                             "endpoint": "top_language",
                                             "logo": "docs/website/source/_media/logo_ext/python.svg",
                                             "logo_media_type": "svg+xml",
                                             "logo_type": "file"
                                          },
                                          {
                                             "endpoint": "repo_size",
                                             "label": "\ud83d\ude9a\u2002Repo Size"
                                          },
                                          {
                                             "endpoint": "code_size",
                                             "label": "\ud83d\ude9b\u2002Code Size"
                                          }
                                       ],
                                       "separator": 2,
                                       "service": "github",
                                       "style": "flat-square"
                                    }
                                 ]
                              ],
                              [
                                 "<b>Health</b>",
                                 [
                                    {
                                       "args": {
                                          "repo": "PyPackIT",
                                          "user": "RepoDynamics"
                                       },
                                       "class": "badges",
                                       "height": "23px",
                                       "items": [
                                          {
                                             "args": {
                                                "vcs_name": "github"
                                             },
                                             "endpoint": "coverage",
                                             "service": "codecov"
                                          },
                                          {
                                             "args": {
                                                "package": "PyPackIT",
                                                "platform": "pypi"
                                             },
                                             "endpoint": "source_rank",
                                             "service": "librariesio"
                                          },
                                          {
                                             "args": {
                                                "package": "PyPackIT",
                                                "platform": "pypi"
                                             },
                                             "endpoint": "dependency_status",
                                             "label": "Package Dependencies",
                                             "service": "librariesio"
                                          },
                                          {
                                             "args": {
                                                "package": "",
                                                "platform": "github"
                                             },
                                             "endpoint": "dependency_status_github",
                                             "label": "Repository Dependencies",
                                             "service": "librariesio"
                                          },
                                          {
                                             "args": {
                                                "down_color": "#AF1F10",
                                                "down_message": "offline",
                                                "up_color": "#00802b",
                                                "up_message": "online",
                                                "url": "https://pypackit.repodynamics.com"
                                             },
                                             "label": "Website",
                                             "service": "website"
                                          }
                                       ],
                                       "separator": 2,
                                       "service": "github",
                                       "style": "flat-square"
                                    }
                                 ]
                              ],
                              [
                                 "<b>Standards</b>",
                                 [
                                    {
                                       "class": "badges",
                                       "height": "23px",
                                       "items": [
                                          {
                                             "args": {
                                                "message": "Pytest"
                                             },
                                             "color": "#0A9EDC",
                                             "label": "Testing",
                                             "link": "https://github.com/pytest-dev/pytest/",
                                             "logo": "pytest",
                                             "logo_color": "#0A9EDC",
                                             "logo_type": "name"
                                          },
                                          {
                                             "args": {
                                                "message": "mypy"
                                             },
                                             "color": "#2A6DB2",
                                             "label": "Type Checking",
                                             "link": "https://github.com/python/mypy",
                                             "logo": "docs/website/source/_media/logo_ext/mypy.svg",
                                             "logo_media_type": "svg+xml",
                                             "logo_type": "file"
                                          },
                                          {
                                             "args": {
                                                "message": "Ruff"
                                             },
                                             "color": "#D7FF64",
                                             "label": "Lint",
                                             "link": "https://github.com/astral-sh/ruff",
                                             "logo": "ruff",
                                             "logo_color": "#D7FF64",
                                             "logo_type": "name"
                                          },
                                          {
                                             "args": {
                                                "message": "CodeQL"
                                             },
                                             "color": "#181717",
                                             "label": "Security",
                                             "link": "https://codeql.github.com/",
                                             "logo": "github",
                                             "logo_type": "name"
                                          },
                                          {
                                             "args": {
                                                "message": "Black"
                                             },
                                             "color": "#000",
                                             "label": "Code Style",
                                             "link": "https://github.com/psf/black",
                                             "logo": "docs/website/source/_media/logo_ext/black.png",
                                             "logo_media_type": "png",
                                             "logo_type": "file"
                                          }
                                       ],
                                       "separator": 2,
                                       "service": "static",
                                       "style": "flat-square"
                                    }
                                 ]
                              ],
                              [
                                 "<b>Downloads</b>",
                                 [
                                    [
                                       {
                                          "args": {
                                             "package": "PyPackIT"
                                          },
                                          "class": "badges",
                                          "color": "#0B3C75",
                                          "endpoint": "downloads",
                                          "height": "23px",
                                          "items": [
                                             {
                                                "endpoint": "total_downloads",
                                                "label": "PyPI",
                                                "logo": "docs/website/source/_media/logo_ext/pypi.png",
                                                "logo_media_type": "png",
                                                "logo_type": "file",
                                                "service": "pepy"
                                             },
                                             {
                                                "args": {
                                                   "period": "m"
                                                }
                                             },
                                             {
                                                "args": {
                                                   "period": "w"
                                                }
                                             },
                                             {
                                                "args": {
                                                   "period": "d"
                                                }
                                             }
                                          ],
                                          "label": "",
                                          "logo": "",
                                          "separator": 1,
                                          "service": "pypi",
                                          "style": "flat-square"
                                       },
                                       "&nbsp;&nbsp;",
                                       {
                                          "args": {
                                             "channel": "repodynamics",
                                             "package": "pypackit"
                                          },
                                          "class": "badge",
                                          "color": "#0B3C75",
                                          "endpoint": "downloads",
                                          "height": "23px",
                                          "label": "Conda",
                                          "logo": "anaconda",
                                          "logo_color": "#44A833",
                                          "service": "conda",
                                          "style": "flat-square"
                                       },
                                       "&nbsp;&nbsp;",
                                       {
                                          "args": {
                                             "repo": "PyPackIT",
                                             "user": "RepoDynamics"
                                          },
                                          "class": "badge",
                                          "color": "#0B3C75",
                                          "endpoint": "downloads_all_releases",
                                          "height": "23px",
                                          "label": "GitHub",
                                          "service": "github",
                                          "style": "flat-square"
                                       }
                                    ]
                                 ]
                              ],
                              [
                                 "<b>Users</b>",
                                 [
                                    {
                                       "args": {
                                          "package": "PyPackIT",
                                          "platform": "pypi"
                                       },
                                       "class": "badges",
                                       "color": "#0B3C75",
                                       "height": "23px",
                                       "items": [
                                          {
                                             "endpoint": "dependents",
                                             "label": "Dependent Packages"
                                          },
                                          {
                                             "args": {
                                                "repo": true
                                             },
                                             "endpoint": "dependents",
                                             "label": "Dependent Repositories"
                                          }
                                       ],
                                       "separator": 2,
                                       "service": "librariesio",
                                       "style": "flat-square"
                                    }
                                 ]
                              ],
                              [
                                 "<b>Issues</b>",
                                 [
                                    [
                                       {
                                          "args": {
                                             "kind": "issues",
                                             "label": null,
                                             "repo": "PyPackIT",
                                             "user": "RepoDynamics"
                                          },
                                          "class": "badges",
                                          "endpoint": "issue_count",
                                          "height": "23px",
                                          "items": [
                                             {
                                                "args": {
                                                   "state": "open"
                                                },
                                                "color": "#AF1F10",
                                                "label": "Total"
                                             },
                                             {
                                                "args": {
                                                   "state": "closed"
                                                },
                                                "color": "#00802B",
                                                "label": ""
                                             }
                                          ],
                                          "separator": 0,
                                          "service": "github",
                                          "style": "flat-square"
                                       },
                                       "&nbsp;&nbsp;",
                                       {
                                          "args": {
                                             "kind": "issues",
                                             "label": "Type: \ud83d\udc1e bug fix",
                                             "repo": "PyPackIT",
                                             "user": "RepoDynamics"
                                          },
                                          "class": "badges",
                                          "endpoint": "issue_count",
                                          "height": "23px",
                                          "items": [
                                             {
                                                "args": {
                                                   "state": "open"
                                                },
                                                "color": "#AF1F10",
                                                "label": "\ud83d\udc1e\u2002Bug Fixes"
                                             },
                                             {
                                                "args": {
                                                   "state": "closed"
                                                },
                                                "color": "#00802B",
                                                "label": ""
                                             }
                                          ],
                                          "separator": 0,
                                          "service": "github",
                                          "style": "flat-square"
                                       },
                                       "&nbsp;&nbsp;",
                                       {
                                          "args": {
                                             "kind": "issues",
                                             "label": "Type: \u2728 new feature",
                                             "repo": "PyPackIT",
                                             "user": "RepoDynamics"
                                          },
                                          "class": "badges",
                                          "endpoint": "issue_count",
                                          "height": "23px",
                                          "items": [
                                             {
                                                "args": {
                                                   "state": "open"
                                                },
                                                "color": "#AF1F10",
                                                "label": "\u2728\u2002New Features"
                                             },
                                             {
                                                "args": {
                                                   "state": "closed"
                                                },
                                                "color": "#00802B",
                                                "label": ""
                                             }
                                          ],
                                          "separator": 0,
                                          "service": "github",
                                          "style": "flat-square"
                                       },
                                       "&nbsp;&nbsp;",
                                       {
                                          "args": {
                                             "kind": "issues",
                                             "label": "Type: \ud83d\udca5 breaking change",
                                             "repo": "PyPackIT",
                                             "user": "RepoDynamics"
                                          },
                                          "class": "badges",
                                          "endpoint": "issue_count",
                                          "height": "23px",
                                          "items": [
                                             {
                                                "args": {
                                                   "state": "open"
                                                },
                                                "color": "#AF1F10",
                                                "label": "\ud83d\udca5\u2002Breaking Changes"
                                             },
                                             {
                                                "args": {
                                                   "state": "closed"
                                                },
                                                "color": "#00802B",
                                                "label": ""
                                             }
                                          ],
                                          "separator": 0,
                                          "service": "github",
                                          "style": "flat-square"
                                       },
                                       "&nbsp;&nbsp;"
                                    ]
                                 ]
                              ],
                              [
                                 "<b>PRs</b>",
                                 [
                                    [
                                       {
                                          "args": {
                                             "kind": "pulls",
                                             "label": null,
                                             "repo": "PyPackIT",
                                             "user": "RepoDynamics"
                                          },
                                          "class": "badges",
                                          "endpoint": "issue_count",
                                          "height": "23px",
                                          "items": [
                                             {
                                                "args": {
                                                   "state": "open"
                                                },
                                                "color": "#AF1F10",
                                                "label": "Total"
                                             },
                                             {
                                                "args": {
                                                   "state": "closed"
                                                },
                                                "color": "#00802B",
                                                "label": ""
                                             }
                                          ],
                                          "separator": 0,
                                          "service": "github",
                                          "style": "flat-square"
                                       },
                                       "&nbsp;&nbsp;",
                                       {
                                          "args": {
                                             "kind": "pulls",
                                             "label": "Type: \ud83d\udc1e bug fix",
                                             "repo": "PyPackIT",
                                             "user": "RepoDynamics"
                                          },
                                          "class": "badges",
                                          "endpoint": "issue_count",
                                          "height": "23px",
                                          "items": [
                                             {
                                                "args": {
                                                   "state": "open"
                                                },
                                                "color": "#AF1F10",
                                                "label": "\ud83d\udc1e\u2002Bug Fixes"
                                             },
                                             {
                                                "args": {
                                                   "state": "closed"
                                                },
                                                "color": "#00802B",
                                                "label": ""
                                             }
                                          ],
                                          "separator": 0,
                                          "service": "github",
                                          "style": "flat-square"
                                       },
                                       "&nbsp;&nbsp;",
                                       {
                                          "args": {
                                             "kind": "pulls",
                                             "label": "Type: \u2728 new feature",
                                             "repo": "PyPackIT",
                                             "user": "RepoDynamics"
                                          },
                                          "class": "badges",
                                          "endpoint": "issue_count",
                                          "height": "23px",
                                          "items": [
                                             {
                                                "args": {
                                                   "state": "open"
                                                },
                                                "color": "#AF1F10",
                                                "label": "\u2728\u2002New Features"
                                             },
                                             {
                                                "args": {
                                                   "state": "closed"
                                                },
                                                "color": "#00802B",
                                                "label": ""
                                             }
                                          ],
                                          "separator": 0,
                                          "service": "github",
                                          "style": "flat-square"
                                       },
                                       "&nbsp;&nbsp;",
                                       {
                                          "args": {
                                             "kind": "pulls",
                                             "label": "Type: \ud83d\udca5 breaking change",
                                             "repo": "PyPackIT",
                                             "user": "RepoDynamics"
                                          },
                                          "class": "badges",
                                          "endpoint": "issue_count",
                                          "height": "23px",
                                          "items": [
                                             {
                                                "args": {
                                                   "state": "open"
                                                },
                                                "color": "#AF1F10",
                                                "label": "\ud83d\udca5\u2002Breaking Changes"
                                             },
                                             {
                                                "args": {
                                                   "state": "closed"
                                                },
                                                "color": "#00802B",
                                                "label": ""
                                             }
                                          ],
                                          "separator": 0,
                                          "service": "github",
                                          "style": "flat-square"
                                       },
                                       "&nbsp;&nbsp;"
                                    ]
                                 ]
                              ],
                              [
                                 "<b>Commits</b>",
                                 [
                                    {
                                       "args": {
                                          "repo": "PyPackIT",
                                          "user": "RepoDynamics"
                                       },
                                       "class": "badges",
                                       "color": "#0B3C75",
                                       "endpoint": "commit_activity",
                                       "height": "23px",
                                       "items": [
                                          {
                                             "args": {
                                                "interval": "t"
                                             },
                                             "label": "Total",
                                             "logo": "git",
                                             "logo_color": "#F05032",
                                             "logo_type": "name"
                                          },
                                          {
                                             "args": {
                                                "interval": "y"
                                             },
                                             "label": ""
                                          },
                                          {
                                             "args": {
                                                "interval": "m"
                                             },
                                             "label": ""
                                          },
                                          {
                                             "args": {
                                                "interval": "w"
                                             },
                                             "label": ""
                                          },
                                          {
                                             "endpoint": "commits_since_latest_release",
                                             "label": "Since Latest Release"
                                          },
                                          {
                                             "endpoint": "last_commit",
                                             "label": "Last"
                                          }
                                       ],
                                       "separator": 2,
                                       "service": "github",
                                       "style": "flat-square"
                                    }
                                 ]
                              ],
                              [
                                 "<b>Discussions</b>",
                                 [
                                    {
                                       "args": {
                                          "repo": "PyPackIT",
                                          "user": "RepoDynamics"
                                       },
                                       "class": "badges",
                                       "color": "#0B3C75",
                                       "endpoint": "discussion_search_hits",
                                       "height": "23px",
                                       "items": [
                                          {
                                             "args": {
                                                "query": "category:\"Branding\""
                                             },
                                             "label": "#\ufe0f\u20e3\u2002Branding",
                                             "title": ""
                                          },
                                          {
                                             "args": {
                                                "query": "category:\"Bug Report\""
                                             },
                                             "label": "#\ufe0f\u20e3\u2002Bug Report",
                                             "title": "Report a potential bug or problem you encountered while using the application."
                                          },
                                          {
                                             "args": {
                                                "query": "category:\"Installation\""
                                             },
                                             "label": "\ud83d\ude4f\u2002Installation",
                                             "title": "Ask questions about the installation process."
                                          },
                                          {
                                             "args": {
                                                "query": "category:\"New Features\""
                                             },
                                             "label": "\ud83d\udca1\u2002New Features",
                                             "title": "Share ideas for new features"
                                          },
                                          {
                                             "args": {
                                                "query": "category:\"Release\""
                                             },
                                             "label": "\ud83d\udce3\u2002Release",
                                             "title": "New release announcements"
                                          },
                                          {
                                             "args": {
                                                "query": "category:\"Testimonials\""
                                             },
                                             "label": "\ud83d\udcdd\u2002Testimonials",
                                             "title": "Write a testimonial for PyPackIT and share your experience with others."
                                          },
                                          {
                                             "args": {
                                                "query": "category:\"Usage\""
                                             },
                                             "label": "#\ufe0f\u20e3\u2002Usage",
                                             "title": "Ask questions about the application and its usage/behavior."
                                          }
                                       ],
                                       "separator": 2,
                                       "service": "github",
                                       "style": "flat-square"
                                    }
                                 ]
                              ],
                              [
                                 "<b>Community</b>",
                                 [
                                    {
                                       "args": {
                                          "repo": "PyPackIT",
                                          "user": "RepoDynamics"
                                       },
                                       "class": "badges",
                                       "color": "#0B3C75",
                                       "height": "23px",
                                       "items": [
                                          {
                                             "endpoint": "forks"
                                          },
                                          {
                                             "endpoint": "stars"
                                          },
                                          {
                                             "endpoint": "watchers"
                                          }
                                       ],
                                       "logo": "github",
                                       "separator": 2,
                                       "service": "github",
                                       "style": "flat-square"
                                    }
                                 ]
                              ],
                              [
                                 "<b>DevOps</b>",
                                 [
                                    {
                                       "args": {
                                          "repo": "PyPackIT",
                                          "user": "RepoDynamics"
                                       },
                                       "class": "badges",
                                       "height": "23px",
                                       "items": [
                                          {
                                             "args": {
                                                "workflow": "main.yaml"
                                             },
                                             "endpoint": "workflow_status",
                                             "label": "CI",
                                             "logo": "github",
                                             "logo_type": "name"
                                          },
                                          {
                                             "args": {
                                                "environment": "PyPI (PyPackIT)"
                                             },
                                             "endpoint": "deployment_status",
                                             "logo": "docs/website/source/_media/logo_ext/pypi.png",
                                             "logo_media_type": "png",
                                             "logo_type": "file"
                                          },
                                          {
                                             "args": {
                                                "environment": "PyPI (PyPackIT-TestSuite)"
                                             },
                                             "endpoint": "deployment_status",
                                             "logo": "docs/website/source/_media/logo_ext/pypi.png",
                                             "logo_media_type": "png",
                                             "logo_type": "file"
                                          },
                                          {
                                             "args": {
                                                "environment": "TestPyPI (PyPackIT)"
                                             },
                                             "endpoint": "deployment_status",
                                             "logo": "docs/website/source/_media/logo_ext/pypi.png",
                                             "logo_media_type": "png",
                                             "logo_type": "file"
                                          },
                                          {
                                             "args": {
                                                "environment": "TestPyPI (PyPackIT-TestSuite)"
                                             },
                                             "endpoint": "deployment_status",
                                             "logo": "docs/website/source/_media/logo_ext/pypi.png",
                                             "logo_media_type": "png",
                                             "logo_type": "file"
                                          },
                                          {
                                             "args": {
                                                "environment": "Zenodo"
                                             },
                                             "endpoint": "deployment_status",
                                             "logo": "zenodo",
                                             "logo_type": "name"
                                          },
                                          {
                                             "args": {
                                                "environment": "Zenodo Sandbox"
                                             },
                                             "endpoint": "deployment_status",
                                             "logo": "zenodo",
                                             "logo_type": "name"
                                          },
                                          {
                                             "args": {
                                                "environment": "GitHub Release"
                                             },
                                             "endpoint": "deployment_status",
                                             "logo": "github",
                                             "logo_type": "name"
                                          },
                                          {
                                             "args": {
                                                "environment": "GitHub Pages"
                                             },
                                             "endpoint": "deployment_status",
                                             "logo": "github",
                                             "logo_type": "name"
                                          }
                                       ],
                                       "separator": 2,
                                       "service": "github",
                                       "style": "flat-square"
                                    }
                                 ]
                              ]
                           ]
                        }
                     ],
                     "heading": "Statistics"
                  },
                  {
                     "body": [
                        "PyPackIT was developed in [Volkamer Lab](https://volkamerlab.org/)."
                     ],
                     "heading": "Acknowledgements"
                  }
               ]
            },
            "content_setting": {
               "prefix": "",
               "separator": "\n",
               "suffix": ""
            },
            "file_setting": {
               "eof_newline": true,
               "json": {
                  "end_of_file_newline": true,
                  "indent": 3,
                  "sort_keys": true
               },
               "md": {
                  "heading_number": false,
                  "target": "pypi"
               },
               "sort_keys": true,
               "yaml": {
                  "block_string": true,
                  "end_of_file_newline": true,
                  "mapping_indent": 2,
                  "remove_top_level_indent": true,
                  "sequence_indent": 4,
                  "sequence_indent_offset": 2,
                  "sort_keys": true
               }
            },
            "name": "Package README",
            "path": "pkg/README.md",
            "status": "active",
            "summary": "Main README file for the package.\n",
            "type": "md",
            "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/pkg/README.md"
         },
         "setuptools_manifest": {
            "content": [
               "graft src/pypackit/data",
               "include src/pypackit/py.typed",
               "global-exclude *.py[cod] __pycache__ *.so"
            ],
            "content_setting": {
               "prefix": "",
               "separator": "\n",
               "suffix": ""
            },
            "description": "The `MANIFEST.in` file is used to\n[control files and directories](https://setuptools.pypa.io/en/latest/userguide/miscellaneous.html#controlling-files-in-the-distribution)\nwhen creating a source distribution of the package.\nIt is used by the `sdist` command of `setuptools` to determine which files\nto include in the source distribution.\n",
            "file_setting": {
               "eof_newline": true,
               "json": {
                  "end_of_file_newline": true,
                  "indent": 3,
                  "sort_keys": true
               },
               "md": {
                  "heading_number": false,
                  "target": "github"
               },
               "sort_keys": true,
               "yaml": {
                  "block_string": true,
                  "end_of_file_newline": true,
                  "mapping_indent": 2,
                  "remove_top_level_indent": true,
                  "sequence_indent": 4,
                  "sequence_indent_offset": 2,
                  "sort_keys": true
               }
            },
            "name": "MANIFEST.in",
            "notes": "The [Setuptools-SCM](https://pypi.org/project/setuptools-scm/) plugin\ncan be used instead of the `MANIFEST.in` file to automatically\ninclude all git-tracked files in the source distribution.\nThe plugin also automatically manages the version number of the package,\nsimilar to [`versioningit`](https://pypi.org/project/versioningit/).\n",
            "path": "pkg/MANIFEST.in",
            "status": "active",
            "summary": "Manifest file for controlling files and directories in the source distribution.\n",
            "type": "txt",
            "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/pkg/MANIFEST.in"
         }
      },
      "import_name": "pypackit",
      "name": "PyPackIT",
      "os": {
         "linux-64": {
            "data": {
               "logo": "docs/website/source/_media/logo_ext/linux.png"
            },
            "name": "Linux (x64)",
            "platform": "linux-64",
            "runner": "ubuntu-24.04"
         },
         "linux-aarch64": {
            "data": {
               "logo": "docs/website/source/_media/logo_ext/linux.png"
            },
            "name": "Linux (arm64)",
            "platform": "linux-aarch64",
            "runner": "ubuntu-24.04-arm"
         },
         "osx-64": {
            "data": {
               "logo": "apple",
               "logo_color": "#000000"
            },
            "name": "macOS (x64)",
            "platform": "osx-64",
            "runner": "macos-13"
         },
         "osx-arm64": {
            "data": {
               "logo": "apple",
               "logo_color": "#000000"
            },
            "name": "macOS (arm64)",
            "platform": "osx-arm64",
            "runner": "macos-15"
         },
         "win-64": {
            "data": {
               "logo": "https://upload.wikimedia.org/wikipedia/commons/4/44/Microsoft_logo.svg"
            },
            "name": "Windows (x64)",
            "platform": "win-64",
            "runner": "windows-2025"
         }
      },
      "path": {
         "import": "pkg/src/pypackit",
         "import_rel": "src/pypackit",
         "root": "pkg",
         "source": "pkg/src",
         "source_rel": "src"
      },
      "pypi": {
         "publishable": true,
         "url": {
            "home": "https://pypi.org/project/PyPackIT"
         }
      },
      "pyproject": {
         "build-system": {
            "build-backend": "setuptools.build_meta",
            "requires": [
               "setuptools >=72.1.0,<73",
               "versioningit >=3.1.2,<4"
            ]
         },
         "project": {
            "authors": [
               {
                  "email": "armiariam@gmail.com",
                  "name": "Armin Ariamajd"
               }
            ],
            "classifiers": [
               "Natural Language :: English",
               "Development Status :: 1 - Planning",
               "Operating System :: MacOS",
               "Operating System :: Microsoft :: Windows",
               "Operating System :: OS Independent",
               "Operating System :: POSIX :: Linux",
               "Programming Language :: Python",
               "Programming Language :: Python :: 3 :: Only",
               "Programming Language :: Python :: 3.10",
               "Programming Language :: Python :: 3.11",
               "Programming Language :: Python :: 3.12",
               "Programming Language :: Python :: 3.13",
               "Typing :: Typed"
            ],
            "dependencies": [
               "pkgdata"
            ],
            "description": "Cloud-Native Continuous Software Engineering Automation for Python Packages on GitHub",
            "dynamic": [
               "version"
            ],
            "entry-points": {},
            "gui-scripts": {},
            "keywords": [
               "Automation",
               "Cloud-Native Development",
               "Continuous Integration",
               "Continuous Delivery",
               "Continuous Deployment",
               "Continuous Testing",
               "Continuous Refactoring",
               "Continuous Configuration Automation",
               "Continuous Software Engineering",
               "DevOps",
               "Infrastructure as Code",
               "Agile",
               "Dynamic Project Management",
               "Template Repository",
               "Python Package Skeleton",
               "Sphinx Website",
               "Testing Infrastructure",
               "FAIR Software",
               "GitHub Actions",
               "Bot"
            ],
            "license": {
               "text": "AGPL-3.0-or-later"
            },
            "maintainers": [
               {
                  "email": "armiariam@gmail.com",
                  "name": "Armin Ariamajd"
               }
            ],
            "name": "PyPackIT",
            "optional-dependencies": {},
            "readme": {
               "content-type": "text/markdown",
               "file": "README.md"
            },
            "requires-python": ">=3.10",
            "scripts": {
               "pypackit": "pypackit.__main__:main"
            },
            "urls": {
               "Documentation": "https://pypackit.repodynamics.com/manual",
               "Download": "https://github.com/RepoDynamics/PyPackIT/releases",
               "Homepage": "https://pypackit.repodynamics.com",
               "Issue-Tracker": "https://github.com/RepoDynamics/PyPackIT/issues",
               "News": "https://pypackit.repodynamics.com/news",
               "Source": "https://github.com/RepoDynamics/PyPackIT"
            }
         },
         "tool": {
            "setuptools": {
               "cmdclass": {
                  "build_py": "versioningit.cmdclass.build_py",
                  "sdist": "versioningit.cmdclass.sdist"
               },
               "include-package-data": true,
               "license-files": [
                  "LICENSES/*",
                  "COPYRIGHTS/*"
               ],
               "packages": {
                  "find": {
                     "namespaces": true,
                     "where": [
                        "src"
                     ]
                  }
               }
            },
            "versioningit": {
               "format": {
                  "dirty": "{base_version}+0.{committer_date:%Y.%m.%d}.{rev}.dirty",
                  "distance": "{base_version}+{distance}.{committer_date:%Y.%m.%d}.{rev}",
                  "distance-dirty": "{base_version}+{distance}.{committer_date:%Y.%m.%d}.{rev}.dirty"
               },
               "onbuild": {
                  "build-file": "pypackit/__init__.py",
                  "method": "replace-version",
                  "regex": "^__version_info__: dict\\[str, str\\] = (?P<version>.*)",
                  "replacement": "{{ \"version\": \"{version}\", \"build_date\": \"{build_date:%Y.%m.%d}\", \"committer_date\": \"{committer_date:%Y.%m.%d}\", \"author_date\": \"{author_date:%Y.%m.%d}\", \"branch\": \"{branch}\", \"distance\": \"{distance}\", \"commit_hash\": \"{revision}\" }}",
                  "require-match": true,
                  "source-file": "src/pypackit/__init__.py"
               },
               "tag2version": {
                  "rmprefix": "ver/"
               },
               "vcs": {
                  "default-tag": "ver/0.0.0",
                  "match": [
                     "ver/[0-9]*.[0-9]*.[0-9]*"
                  ],
                  "method": "git"
               }
            }
         }
      },
      "python": {
         "implementation": "cpython",
         "pure": true,
         "version": {
            "micros": [
               "3.10.0",
               "3.10.1",
               "3.10.2",
               "3.10.3",
               "3.10.4",
               "3.10.5",
               "3.10.6",
               "3.10.7",
               "3.10.8",
               "3.10.9",
               "3.10.10",
               "3.10.11",
               "3.10.12",
               "3.10.13",
               "3.10.14",
               "3.10.15",
               "3.10.16",
               "3.10.17",
               "3.11.0",
               "3.11.1",
               "3.11.2",
               "3.11.3",
               "3.11.4",
               "3.11.5",
               "3.11.6",
               "3.11.7",
               "3.11.8",
               "3.11.9",
               "3.11.10",
               "3.11.11",
               "3.11.12",
               "3.12.0",
               "3.12.1",
               "3.12.2",
               "3.12.3",
               "3.12.4",
               "3.12.5",
               "3.12.6",
               "3.12.7",
               "3.12.8",
               "3.12.9",
               "3.12.10",
               "3.13.0",
               "3.13.1",
               "3.13.2",
               "3.13.3"
            ],
            "minors": [
               "3.10",
               "3.11",
               "3.12",
               "3.13"
            ],
            "spec": ">=3.10"
         }
      },
      "source_file": {
         "all": {
            "glob": "**/*.py",
            "header_comments": {
               "content": "PyPackIT \u00a9 2023\u20132025 RepoDynamics\nSPDX-License-Identifier: AGPL-3.0-or-later\n",
               "empty_lines": 1,
               "line_continuation_indent": 0,
               "max_line_length": 100,
               "mode": "append"
            }
         },
         "top_import": {
            "docstring": {
               "content": "PyPackIT: Cloud-Native Continuous Software Engineering Automation for Python Packages on GitHub.\n\nPyPackIT [\u02c8pa\u026a\u02ccp\u00e6k\u026at] is a comprehensive <strong>cloud-based automation tool</strong> for production of <abbr title=\"Findable, Accessible, Interoperable, and Reusable\">FAIR</abbr> and professional applications on <strong>GitHub</strong>, in accordance with the latest software engineering best practices and standards. PyPackIT is a ready-to-use software suite that streamlines the initiation, configuration, development, publication, management, and maintenance of high-quality <strong>Python applications</strong>. By taking charge of repetitive tasks and automatically enforcing best practices throughout the software development life cycle, PyPackIT enables users to solely focus on the creative aspects of their projects, while improving quality and lowering production costs. Using latest tools and methodologies, PyPackIT offers a robust project infrastructure, including a build-ready Python <strong>package skeleton</strong>, a fully operational <strong>test suite</strong>, an automated <strong>documentation website</strong>, and a comprehensive <strong>control center</strong> according to <strong>Infrastructure-as-Code</strong> and <strong>Continuous Configuration Automation</strong> practices to enable dynamic project management and customization. PyPackIT establishes a complete <strong>cloud development</strong> environment on GitHub, integrating with its version control system, issue tracker,and pull-based model to provide a fully <strong>automated software development workflow</strong> with <strong>issue management</strong>, <strong>branching model</strong>, and <strong>versioning scheme</strong>. Leveraging <strong>GitHub Actions</strong>, PyPackIT implements a cloud-native Agile development process using <strong>Continuous software engineering</strong>, <strong>containerization</strong>, and <strong>DevOps</strong> methodologies, with a full set of <strong>Continuous Integration</strong>, Deployment, Testing, Refactoring, and Maintenance pipelines. PyPackIT is a <strong>free</strong> and <strong>open-source</strong> software suite that readily integrates with both new and existing projects to ensure their long-term sustainability and high quality, enabling software projects to rapidly implement their ideas and easily maintain their products.\n",
               "max_line_length": 100,
               "mode": "append"
            },
            "glob": "__init__.py"
         }
      },
      "test": {
         "linux-64_ubuntu-24.04_conda_py3.10": {
            "artifact_name_suffix": " - conda - ubuntu-24.04 - linux-64 - py3.10",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "conda",
                  "PLATFORM": "linux-64",
                  "PYTHON": "3.10",
                  "RUNNER": "ubuntu-24.04"
               }
            },
            "conda_env": {
               "name": "main-linux-64-ubuntu-24.04-conda-py3.10",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.10 | conda | Linux (x64)",
            "runner": "ubuntu-24.04",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform linux-64 --sources conda pip apt bash brew --python-version 3.10 --conda-env-name main-linux-64-ubuntu-24.04-conda-py3.10 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "micromamba install -c ./conda_channel/ pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "linux-64_ubuntu-24.04_conda_py3.11": {
            "artifact_name_suffix": " - conda - ubuntu-24.04 - linux-64 - py3.11",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "conda",
                  "PLATFORM": "linux-64",
                  "PYTHON": "3.11",
                  "RUNNER": "ubuntu-24.04"
               }
            },
            "conda_env": {
               "name": "main-linux-64-ubuntu-24.04-conda-py3.11",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.11 | conda | Linux (x64)",
            "runner": "ubuntu-24.04",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform linux-64 --sources conda pip apt bash brew --python-version 3.11 --conda-env-name main-linux-64-ubuntu-24.04-conda-py3.11 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "micromamba install -c ./conda_channel/ pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "linux-64_ubuntu-24.04_conda_py3.12": {
            "artifact_name_suffix": " - conda - ubuntu-24.04 - linux-64 - py3.12",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "conda",
                  "PLATFORM": "linux-64",
                  "PYTHON": "3.12",
                  "RUNNER": "ubuntu-24.04"
               }
            },
            "conda_env": {
               "name": "main-linux-64-ubuntu-24.04-conda-py3.12",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.12 | conda | Linux (x64)",
            "runner": "ubuntu-24.04",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform linux-64 --sources conda pip apt bash brew --python-version 3.12 --conda-env-name main-linux-64-ubuntu-24.04-conda-py3.12 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "micromamba install -c ./conda_channel/ pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "linux-64_ubuntu-24.04_conda_py3.13": {
            "artifact_name_suffix": " - conda - ubuntu-24.04 - linux-64 - py3.13",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "conda",
                  "PLATFORM": "linux-64",
                  "PYTHON": "3.13",
                  "RUNNER": "ubuntu-24.04"
               }
            },
            "conda_env": {
               "name": "main-linux-64-ubuntu-24.04-conda-py3.13",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.13 | conda | Linux (x64)",
            "runner": "ubuntu-24.04",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform linux-64 --sources conda pip apt bash brew --python-version 3.13 --conda-env-name main-linux-64-ubuntu-24.04-conda-py3.13 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "micromamba install -c ./conda_channel/ pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "linux-64_ubuntu-24.04_pip_py3.10": {
            "artifact_name_suffix": " - pip - ubuntu-24.04 - linux-64 - py3.10",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "pip",
                  "PLATFORM": "linux-64",
                  "PYTHON": "3.10",
                  "RUNNER": "ubuntu-24.04"
               }
            },
            "conda_env": {
               "name": "main-linux-64-ubuntu-24.04-pip-py3.10",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.10 | pip | Linux (x64)",
            "runner": "ubuntu-24.04",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform linux-64 --sources pip conda apt bash brew --python-version 3.10 --conda-env-name main-linux-64-ubuntu-24.04-pip-py3.10 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "pip uninstall -y pypackit pypackit-testsuite\npip install --no-deps --no-index --find-links=./wheelhouse/ --only-binary :all: pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "linux-64_ubuntu-24.04_pip_py3.11": {
            "artifact_name_suffix": " - pip - ubuntu-24.04 - linux-64 - py3.11",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "pip",
                  "PLATFORM": "linux-64",
                  "PYTHON": "3.11",
                  "RUNNER": "ubuntu-24.04"
               }
            },
            "conda_env": {
               "name": "main-linux-64-ubuntu-24.04-pip-py3.11",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.11 | pip | Linux (x64)",
            "runner": "ubuntu-24.04",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform linux-64 --sources pip conda apt bash brew --python-version 3.11 --conda-env-name main-linux-64-ubuntu-24.04-pip-py3.11 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "pip uninstall -y pypackit pypackit-testsuite\npip install --no-deps --no-index --find-links=./wheelhouse/ --only-binary :all: pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "linux-64_ubuntu-24.04_pip_py3.12": {
            "artifact_name_suffix": " - pip - ubuntu-24.04 - linux-64 - py3.12",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "pip",
                  "PLATFORM": "linux-64",
                  "PYTHON": "3.12",
                  "RUNNER": "ubuntu-24.04"
               }
            },
            "conda_env": {
               "name": "main-linux-64-ubuntu-24.04-pip-py3.12",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.12 | pip | Linux (x64)",
            "runner": "ubuntu-24.04",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform linux-64 --sources pip conda apt bash brew --python-version 3.12 --conda-env-name main-linux-64-ubuntu-24.04-pip-py3.12 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "pip uninstall -y pypackit pypackit-testsuite\npip install --no-deps --no-index --find-links=./wheelhouse/ --only-binary :all: pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "linux-64_ubuntu-24.04_pip_py3.13": {
            "artifact_name_suffix": " - pip - ubuntu-24.04 - linux-64 - py3.13",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "pip",
                  "PLATFORM": "linux-64",
                  "PYTHON": "3.13",
                  "RUNNER": "ubuntu-24.04"
               }
            },
            "conda_env": {
               "name": "main-linux-64-ubuntu-24.04-pip-py3.13",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.13 | pip | Linux (x64)",
            "runner": "ubuntu-24.04",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform linux-64 --sources pip conda apt bash brew --python-version 3.13 --conda-env-name main-linux-64-ubuntu-24.04-pip-py3.13 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "pip uninstall -y pypackit pypackit-testsuite\npip install --no-deps --no-index --find-links=./wheelhouse/ --only-binary :all: pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "linux-aarch64_ubuntu-24.04-arm_conda_py3.10": {
            "artifact_name_suffix": " - conda - ubuntu-24.04-arm - linux-aarch64 - py3.10",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "conda",
                  "PLATFORM": "linux-aarch64",
                  "PYTHON": "3.10",
                  "RUNNER": "ubuntu-24.04-arm"
               }
            },
            "conda_env": {
               "name": "main-linux-aarch64-ubuntu-24.04-arm-conda-py3.10",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.10 | conda | Linux (arm64)",
            "runner": "ubuntu-24.04-arm",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform linux-aarch64 --sources conda pip apt bash brew --python-version 3.10 --conda-env-name main-linux-aarch64-ubuntu-24.04-arm-conda-py3.10 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "micromamba install -c ./conda_channel/ pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "linux-aarch64_ubuntu-24.04-arm_conda_py3.11": {
            "artifact_name_suffix": " - conda - ubuntu-24.04-arm - linux-aarch64 - py3.11",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "conda",
                  "PLATFORM": "linux-aarch64",
                  "PYTHON": "3.11",
                  "RUNNER": "ubuntu-24.04-arm"
               }
            },
            "conda_env": {
               "name": "main-linux-aarch64-ubuntu-24.04-arm-conda-py3.11",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.11 | conda | Linux (arm64)",
            "runner": "ubuntu-24.04-arm",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform linux-aarch64 --sources conda pip apt bash brew --python-version 3.11 --conda-env-name main-linux-aarch64-ubuntu-24.04-arm-conda-py3.11 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "micromamba install -c ./conda_channel/ pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "linux-aarch64_ubuntu-24.04-arm_conda_py3.12": {
            "artifact_name_suffix": " - conda - ubuntu-24.04-arm - linux-aarch64 - py3.12",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "conda",
                  "PLATFORM": "linux-aarch64",
                  "PYTHON": "3.12",
                  "RUNNER": "ubuntu-24.04-arm"
               }
            },
            "conda_env": {
               "name": "main-linux-aarch64-ubuntu-24.04-arm-conda-py3.12",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.12 | conda | Linux (arm64)",
            "runner": "ubuntu-24.04-arm",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform linux-aarch64 --sources conda pip apt bash brew --python-version 3.12 --conda-env-name main-linux-aarch64-ubuntu-24.04-arm-conda-py3.12 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "micromamba install -c ./conda_channel/ pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "linux-aarch64_ubuntu-24.04-arm_conda_py3.13": {
            "artifact_name_suffix": " - conda - ubuntu-24.04-arm - linux-aarch64 - py3.13",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "conda",
                  "PLATFORM": "linux-aarch64",
                  "PYTHON": "3.13",
                  "RUNNER": "ubuntu-24.04-arm"
               }
            },
            "conda_env": {
               "name": "main-linux-aarch64-ubuntu-24.04-arm-conda-py3.13",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.13 | conda | Linux (arm64)",
            "runner": "ubuntu-24.04-arm",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform linux-aarch64 --sources conda pip apt bash brew --python-version 3.13 --conda-env-name main-linux-aarch64-ubuntu-24.04-arm-conda-py3.13 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "micromamba install -c ./conda_channel/ pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "linux-aarch64_ubuntu-24.04-arm_pip_py3.10": {
            "artifact_name_suffix": " - pip - ubuntu-24.04-arm - linux-aarch64 - py3.10",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "pip",
                  "PLATFORM": "linux-aarch64",
                  "PYTHON": "3.10",
                  "RUNNER": "ubuntu-24.04-arm"
               }
            },
            "conda_env": {
               "name": "main-linux-aarch64-ubuntu-24.04-arm-pip-py3.10",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.10 | pip | Linux (arm64)",
            "runner": "ubuntu-24.04-arm",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform linux-aarch64 --sources pip conda apt bash brew --python-version 3.10 --conda-env-name main-linux-aarch64-ubuntu-24.04-arm-pip-py3.10 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "pip uninstall -y pypackit pypackit-testsuite\npip install --no-deps --no-index --find-links=./wheelhouse/ --only-binary :all: pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "linux-aarch64_ubuntu-24.04-arm_pip_py3.11": {
            "artifact_name_suffix": " - pip - ubuntu-24.04-arm - linux-aarch64 - py3.11",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "pip",
                  "PLATFORM": "linux-aarch64",
                  "PYTHON": "3.11",
                  "RUNNER": "ubuntu-24.04-arm"
               }
            },
            "conda_env": {
               "name": "main-linux-aarch64-ubuntu-24.04-arm-pip-py3.11",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.11 | pip | Linux (arm64)",
            "runner": "ubuntu-24.04-arm",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform linux-aarch64 --sources pip conda apt bash brew --python-version 3.11 --conda-env-name main-linux-aarch64-ubuntu-24.04-arm-pip-py3.11 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "pip uninstall -y pypackit pypackit-testsuite\npip install --no-deps --no-index --find-links=./wheelhouse/ --only-binary :all: pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "linux-aarch64_ubuntu-24.04-arm_pip_py3.12": {
            "artifact_name_suffix": " - pip - ubuntu-24.04-arm - linux-aarch64 - py3.12",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "pip",
                  "PLATFORM": "linux-aarch64",
                  "PYTHON": "3.12",
                  "RUNNER": "ubuntu-24.04-arm"
               }
            },
            "conda_env": {
               "name": "main-linux-aarch64-ubuntu-24.04-arm-pip-py3.12",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.12 | pip | Linux (arm64)",
            "runner": "ubuntu-24.04-arm",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform linux-aarch64 --sources pip conda apt bash brew --python-version 3.12 --conda-env-name main-linux-aarch64-ubuntu-24.04-arm-pip-py3.12 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "pip uninstall -y pypackit pypackit-testsuite\npip install --no-deps --no-index --find-links=./wheelhouse/ --only-binary :all: pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "linux-aarch64_ubuntu-24.04-arm_pip_py3.13": {
            "artifact_name_suffix": " - pip - ubuntu-24.04-arm - linux-aarch64 - py3.13",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "pip",
                  "PLATFORM": "linux-aarch64",
                  "PYTHON": "3.13",
                  "RUNNER": "ubuntu-24.04-arm"
               }
            },
            "conda_env": {
               "name": "main-linux-aarch64-ubuntu-24.04-arm-pip-py3.13",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.13 | pip | Linux (arm64)",
            "runner": "ubuntu-24.04-arm",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform linux-aarch64 --sources pip conda apt bash brew --python-version 3.13 --conda-env-name main-linux-aarch64-ubuntu-24.04-arm-pip-py3.13 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "pip uninstall -y pypackit pypackit-testsuite\npip install --no-deps --no-index --find-links=./wheelhouse/ --only-binary :all: pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "osx-64_macos-13_conda_py3.10": {
            "artifact_name_suffix": " - conda - macos-13 - osx-64 - py3.10",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "conda",
                  "PLATFORM": "osx-64",
                  "PYTHON": "3.10",
                  "RUNNER": "macos-13"
               }
            },
            "conda_env": {
               "name": "main-osx-64-macos-13-conda-py3.10",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.10 | conda | macOS (x64)",
            "runner": "macos-13",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform osx-64 --sources conda pip brew bash --python-version 3.10 --conda-env-name main-osx-64-macos-13-conda-py3.10 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "micromamba install -c ./conda_channel/ pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "osx-64_macos-13_conda_py3.11": {
            "artifact_name_suffix": " - conda - macos-13 - osx-64 - py3.11",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "conda",
                  "PLATFORM": "osx-64",
                  "PYTHON": "3.11",
                  "RUNNER": "macos-13"
               }
            },
            "conda_env": {
               "name": "main-osx-64-macos-13-conda-py3.11",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.11 | conda | macOS (x64)",
            "runner": "macos-13",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform osx-64 --sources conda pip brew bash --python-version 3.11 --conda-env-name main-osx-64-macos-13-conda-py3.11 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "micromamba install -c ./conda_channel/ pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "osx-64_macos-13_conda_py3.12": {
            "artifact_name_suffix": " - conda - macos-13 - osx-64 - py3.12",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "conda",
                  "PLATFORM": "osx-64",
                  "PYTHON": "3.12",
                  "RUNNER": "macos-13"
               }
            },
            "conda_env": {
               "name": "main-osx-64-macos-13-conda-py3.12",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.12 | conda | macOS (x64)",
            "runner": "macos-13",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform osx-64 --sources conda pip brew bash --python-version 3.12 --conda-env-name main-osx-64-macos-13-conda-py3.12 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "micromamba install -c ./conda_channel/ pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "osx-64_macos-13_conda_py3.13": {
            "artifact_name_suffix": " - conda - macos-13 - osx-64 - py3.13",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "conda",
                  "PLATFORM": "osx-64",
                  "PYTHON": "3.13",
                  "RUNNER": "macos-13"
               }
            },
            "conda_env": {
               "name": "main-osx-64-macos-13-conda-py3.13",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.13 | conda | macOS (x64)",
            "runner": "macos-13",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform osx-64 --sources conda pip brew bash --python-version 3.13 --conda-env-name main-osx-64-macos-13-conda-py3.13 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "micromamba install -c ./conda_channel/ pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "osx-64_macos-13_pip_py3.10": {
            "artifact_name_suffix": " - pip - macos-13 - osx-64 - py3.10",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "pip",
                  "PLATFORM": "osx-64",
                  "PYTHON": "3.10",
                  "RUNNER": "macos-13"
               }
            },
            "conda_env": {
               "name": "main-osx-64-macos-13-pip-py3.10",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.10 | pip | macOS (x64)",
            "runner": "macos-13",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform osx-64 --sources pip conda brew bash --python-version 3.10 --conda-env-name main-osx-64-macos-13-pip-py3.10 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "pip uninstall -y pypackit pypackit-testsuite\npip install --no-deps --no-index --find-links=./wheelhouse/ --only-binary :all: pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "osx-64_macos-13_pip_py3.11": {
            "artifact_name_suffix": " - pip - macos-13 - osx-64 - py3.11",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "pip",
                  "PLATFORM": "osx-64",
                  "PYTHON": "3.11",
                  "RUNNER": "macos-13"
               }
            },
            "conda_env": {
               "name": "main-osx-64-macos-13-pip-py3.11",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.11 | pip | macOS (x64)",
            "runner": "macos-13",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform osx-64 --sources pip conda brew bash --python-version 3.11 --conda-env-name main-osx-64-macos-13-pip-py3.11 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "pip uninstall -y pypackit pypackit-testsuite\npip install --no-deps --no-index --find-links=./wheelhouse/ --only-binary :all: pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "osx-64_macos-13_pip_py3.12": {
            "artifact_name_suffix": " - pip - macos-13 - osx-64 - py3.12",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "pip",
                  "PLATFORM": "osx-64",
                  "PYTHON": "3.12",
                  "RUNNER": "macos-13"
               }
            },
            "conda_env": {
               "name": "main-osx-64-macos-13-pip-py3.12",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.12 | pip | macOS (x64)",
            "runner": "macos-13",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform osx-64 --sources pip conda brew bash --python-version 3.12 --conda-env-name main-osx-64-macos-13-pip-py3.12 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "pip uninstall -y pypackit pypackit-testsuite\npip install --no-deps --no-index --find-links=./wheelhouse/ --only-binary :all: pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "osx-64_macos-13_pip_py3.13": {
            "artifact_name_suffix": " - pip - macos-13 - osx-64 - py3.13",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "pip",
                  "PLATFORM": "osx-64",
                  "PYTHON": "3.13",
                  "RUNNER": "macos-13"
               }
            },
            "conda_env": {
               "name": "main-osx-64-macos-13-pip-py3.13",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.13 | pip | macOS (x64)",
            "runner": "macos-13",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform osx-64 --sources pip conda brew bash --python-version 3.13 --conda-env-name main-osx-64-macos-13-pip-py3.13 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "pip uninstall -y pypackit pypackit-testsuite\npip install --no-deps --no-index --find-links=./wheelhouse/ --only-binary :all: pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "osx-arm64_macos-15_conda_py3.10": {
            "artifact_name_suffix": " - conda - macos-15 - osx-arm64 - py3.10",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "conda",
                  "PLATFORM": "osx-arm64",
                  "PYTHON": "3.10",
                  "RUNNER": "macos-15"
               }
            },
            "conda_env": {
               "name": "main-osx-arm64-macos-15-conda-py3.10",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.10 | conda | macOS (arm64)",
            "runner": "macos-15",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform osx-arm64 --sources conda pip brew bash --python-version 3.10 --conda-env-name main-osx-arm64-macos-15-conda-py3.10 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "micromamba install -c ./conda_channel/ pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "osx-arm64_macos-15_conda_py3.11": {
            "artifact_name_suffix": " - conda - macos-15 - osx-arm64 - py3.11",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "conda",
                  "PLATFORM": "osx-arm64",
                  "PYTHON": "3.11",
                  "RUNNER": "macos-15"
               }
            },
            "conda_env": {
               "name": "main-osx-arm64-macos-15-conda-py3.11",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.11 | conda | macOS (arm64)",
            "runner": "macos-15",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform osx-arm64 --sources conda pip brew bash --python-version 3.11 --conda-env-name main-osx-arm64-macos-15-conda-py3.11 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "micromamba install -c ./conda_channel/ pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "osx-arm64_macos-15_conda_py3.12": {
            "artifact_name_suffix": " - conda - macos-15 - osx-arm64 - py3.12",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "conda",
                  "PLATFORM": "osx-arm64",
                  "PYTHON": "3.12",
                  "RUNNER": "macos-15"
               }
            },
            "conda_env": {
               "name": "main-osx-arm64-macos-15-conda-py3.12",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.12 | conda | macOS (arm64)",
            "runner": "macos-15",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform osx-arm64 --sources conda pip brew bash --python-version 3.12 --conda-env-name main-osx-arm64-macos-15-conda-py3.12 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "micromamba install -c ./conda_channel/ pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "osx-arm64_macos-15_conda_py3.13": {
            "artifact_name_suffix": " - conda - macos-15 - osx-arm64 - py3.13",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "conda",
                  "PLATFORM": "osx-arm64",
                  "PYTHON": "3.13",
                  "RUNNER": "macos-15"
               }
            },
            "conda_env": {
               "name": "main-osx-arm64-macos-15-conda-py3.13",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.13 | conda | macOS (arm64)",
            "runner": "macos-15",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform osx-arm64 --sources conda pip brew bash --python-version 3.13 --conda-env-name main-osx-arm64-macos-15-conda-py3.13 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "micromamba install -c ./conda_channel/ pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "osx-arm64_macos-15_pip_py3.10": {
            "artifact_name_suffix": " - pip - macos-15 - osx-arm64 - py3.10",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "pip",
                  "PLATFORM": "osx-arm64",
                  "PYTHON": "3.10",
                  "RUNNER": "macos-15"
               }
            },
            "conda_env": {
               "name": "main-osx-arm64-macos-15-pip-py3.10",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.10 | pip | macOS (arm64)",
            "runner": "macos-15",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform osx-arm64 --sources pip conda brew bash --python-version 3.10 --conda-env-name main-osx-arm64-macos-15-pip-py3.10 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "pip uninstall -y pypackit pypackit-testsuite\npip install --no-deps --no-index --find-links=./wheelhouse/ --only-binary :all: pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "osx-arm64_macos-15_pip_py3.11": {
            "artifact_name_suffix": " - pip - macos-15 - osx-arm64 - py3.11",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "pip",
                  "PLATFORM": "osx-arm64",
                  "PYTHON": "3.11",
                  "RUNNER": "macos-15"
               }
            },
            "conda_env": {
               "name": "main-osx-arm64-macos-15-pip-py3.11",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.11 | pip | macOS (arm64)",
            "runner": "macos-15",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform osx-arm64 --sources pip conda brew bash --python-version 3.11 --conda-env-name main-osx-arm64-macos-15-pip-py3.11 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "pip uninstall -y pypackit pypackit-testsuite\npip install --no-deps --no-index --find-links=./wheelhouse/ --only-binary :all: pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "osx-arm64_macos-15_pip_py3.12": {
            "artifact_name_suffix": " - pip - macos-15 - osx-arm64 - py3.12",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "pip",
                  "PLATFORM": "osx-arm64",
                  "PYTHON": "3.12",
                  "RUNNER": "macos-15"
               }
            },
            "conda_env": {
               "name": "main-osx-arm64-macos-15-pip-py3.12",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.12 | pip | macOS (arm64)",
            "runner": "macos-15",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform osx-arm64 --sources pip conda brew bash --python-version 3.12 --conda-env-name main-osx-arm64-macos-15-pip-py3.12 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "pip uninstall -y pypackit pypackit-testsuite\npip install --no-deps --no-index --find-links=./wheelhouse/ --only-binary :all: pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "osx-arm64_macos-15_pip_py3.13": {
            "artifact_name_suffix": " - pip - macos-15 - osx-arm64 - py3.13",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "pip",
                  "PLATFORM": "osx-arm64",
                  "PYTHON": "3.13",
                  "RUNNER": "macos-15"
               }
            },
            "conda_env": {
               "name": "main-osx-arm64-macos-15-pip-py3.13",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.13 | pip | macOS (arm64)",
            "runner": "macos-15",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform osx-arm64 --sources pip conda brew bash --python-version 3.13 --conda-env-name main-osx-arm64-macos-15-pip-py3.13 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "pip uninstall -y pypackit pypackit-testsuite\npip install --no-deps --no-index --find-links=./wheelhouse/ --only-binary :all: pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "win-64_windows-2025_conda_py3.10": {
            "artifact_name_suffix": " - conda - windows-2025 - win-64 - py3.10",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "conda",
                  "PLATFORM": "win-64",
                  "PYTHON": "3.10",
                  "RUNNER": "windows-2025"
               }
            },
            "conda_env": {
               "name": "main-win-64-windows-2025-conda-py3.10",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.10 | conda | Windows (x64)",
            "runner": "windows-2025",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform win-64 --sources conda pip choco pwsh --python-version 3.10 --conda-env-name main-win-64-windows-2025-conda-py3.10 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "micromamba install -c ./conda_channel/ pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "win-64_windows-2025_conda_py3.11": {
            "artifact_name_suffix": " - conda - windows-2025 - win-64 - py3.11",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "conda",
                  "PLATFORM": "win-64",
                  "PYTHON": "3.11",
                  "RUNNER": "windows-2025"
               }
            },
            "conda_env": {
               "name": "main-win-64-windows-2025-conda-py3.11",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.11 | conda | Windows (x64)",
            "runner": "windows-2025",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform win-64 --sources conda pip choco pwsh --python-version 3.11 --conda-env-name main-win-64-windows-2025-conda-py3.11 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "micromamba install -c ./conda_channel/ pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "win-64_windows-2025_conda_py3.12": {
            "artifact_name_suffix": " - conda - windows-2025 - win-64 - py3.12",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "conda",
                  "PLATFORM": "win-64",
                  "PYTHON": "3.12",
                  "RUNNER": "windows-2025"
               }
            },
            "conda_env": {
               "name": "main-win-64-windows-2025-conda-py3.12",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.12 | conda | Windows (x64)",
            "runner": "windows-2025",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform win-64 --sources conda pip choco pwsh --python-version 3.12 --conda-env-name main-win-64-windows-2025-conda-py3.12 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "micromamba install -c ./conda_channel/ pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "win-64_windows-2025_conda_py3.13": {
            "artifact_name_suffix": " - conda - windows-2025 - win-64 - py3.13",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "conda",
                  "PLATFORM": "win-64",
                  "PYTHON": "3.13",
                  "RUNNER": "windows-2025"
               }
            },
            "conda_env": {
               "name": "main-win-64-windows-2025-conda-py3.13",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.13 | conda | Windows (x64)",
            "runner": "windows-2025",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform win-64 --sources conda pip choco pwsh --python-version 3.13 --conda-env-name main-win-64-windows-2025-conda-py3.13 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "micromamba install -c ./conda_channel/ pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "win-64_windows-2025_pip_py3.10": {
            "artifact_name_suffix": " - pip - windows-2025 - win-64 - py3.10",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "pip",
                  "PLATFORM": "win-64",
                  "PYTHON": "3.10",
                  "RUNNER": "windows-2025"
               }
            },
            "conda_env": {
               "name": "main-win-64-windows-2025-pip-py3.10",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.10 | pip | Windows (x64)",
            "runner": "windows-2025",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform win-64 --sources pip conda choco pwsh --python-version 3.10 --conda-env-name main-win-64-windows-2025-pip-py3.10 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "pip uninstall -y pypackit pypackit-testsuite\npip install --no-deps --no-index --find-links=./wheelhouse/ --only-binary :all: pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "win-64_windows-2025_pip_py3.11": {
            "artifact_name_suffix": " - pip - windows-2025 - win-64 - py3.11",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "pip",
                  "PLATFORM": "win-64",
                  "PYTHON": "3.11",
                  "RUNNER": "windows-2025"
               }
            },
            "conda_env": {
               "name": "main-win-64-windows-2025-pip-py3.11",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.11 | pip | Windows (x64)",
            "runner": "windows-2025",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform win-64 --sources pip conda choco pwsh --python-version 3.11 --conda-env-name main-win-64-windows-2025-pip-py3.11 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "pip uninstall -y pypackit pypackit-testsuite\npip install --no-deps --no-index --find-links=./wheelhouse/ --only-binary :all: pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "win-64_windows-2025_pip_py3.12": {
            "artifact_name_suffix": " - pip - windows-2025 - win-64 - py3.12",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "pip",
                  "PLATFORM": "win-64",
                  "PYTHON": "3.12",
                  "RUNNER": "windows-2025"
               }
            },
            "conda_env": {
               "name": "main-win-64-windows-2025-pip-py3.12",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.12 | pip | Windows (x64)",
            "runner": "windows-2025",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform win-64 --sources pip conda choco pwsh --python-version 3.12 --conda-env-name main-win-64-windows-2025-pip-py3.12 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "pip uninstall -y pypackit pypackit-testsuite\npip install --no-deps --no-index --find-links=./wheelhouse/ --only-binary :all: pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         },
         "win-64_windows-2025_pip_py3.13": {
            "artifact_name_suffix": " - pip - windows-2025 - win-64 - py3.13",
            "codecov": {
               "env": {
                  "PKG_MANAGER": "pip",
                  "PLATFORM": "win-64",
                  "PYTHON": "3.13",
                  "RUNNER": "windows-2025"
               }
            },
            "conda_env": {
               "name": "main-win-64-windows-2025-pip-py3.13",
               "path": "_temp_test_env/environment.yaml"
            },
            "name": "py3.13 | pip | Windows (x64)",
            "runner": "windows-2025",
            "script": {
               "install_env": "python install.py --packages '[\"main\", \"test\"]' --build-platform win-64 --sources pip conda choco pwsh --python-version 3.13 --conda-env-name main-win-64-windows-2025-pip-py3.13 --exclude-install conda --output-dir _temp_test_env --overwrite --filename-conda environment.yaml --no-self",
               "install_pkg": "pip uninstall -y pypackit pypackit-testsuite\npip install --no-deps --no-index --find-links=./wheelhouse/ --only-binary :all: pypackit pypackit-testsuite",
               "test": "python -m pypackit_testsuite --report ./report"
            }
         }
      },
      "typed": true
   },
   "pypkg_test": {
      "conda": {
         "publishable": true,
         "recipe": {
            "meta": {
               "values": {
                  "about": {
                     "dev_url": "https://github.com/RepoDynamics/PyPackIT",
                     "doc_source_url": "https://github.com/RepoDynamics/PyPackIT/blob/main/README.md",
                     "doc_url": "https://pypackit.repodynamics.com",
                     "home": "https://pypackit.repodynamics.com",
                     "license": "AGPL-3.0-or-later",
                     "license_file": [
                        "{{ pkg_dir }}LICENSES/",
                        "{{ pkg_dir }}COPYRIGHTS/"
                     ],
                     "summary": "Cloud-Native Continuous Software Engineering Automation for Python Packages on GitHub"
                  },
                  "build": {
                     "values": {
                        "script": [
                           {
                              "value": "{{ PYTHON }} -m pip install {{ pkg_dir }} --no-deps --no-build-isolation -vv"
                           }
                        ]
                     }
                  },
                  "extra": {
                     "recipe-maintainers": [
                        "AAriam"
                     ]
                  },
                  "requirements": {
                     "values": {
                        "host": {
                           "values": [
                              {
                                 "value": "python >=3.10"
                              },
                              {
                                 "value": "pip"
                              },
                              {
                                 "value": "conda-forge::setuptools >=72.1.0,<73"
                              },
                              {
                                 "value": "conda-forge::versioningit >=3.1.2,<4"
                              }
                           ]
                        },
                        "run": {
                           "values": [
                              {
                                 "value": "python >=3.10"
                              },
                              {
                                 "value": "conda-forge::pytest ==8.3.5"
                              },
                              {
                                 "value": "conda-forge::pytest-cov ==6.0.0"
                              },
                              {
                                 "value": "conda-forge::pytest-html ==4.1.1"
                              },
                              {
                                 "value": "conda-forge::coverage ==7.6.12"
                              },
                              {
                                 "value": "repodynamics::pkgdata "
                              }
                           ]
                        },
                        "run_constrained": {
                           "values": []
                        }
                     }
                  },
                  "test": {
                     "values": {
                        "commands": {
                           "values": [
                              {
                                 "value": "pip check"
                              },
                              {
                                 "value": "PyPackIT-TestSuite --help"
                              }
                           ]
                        },
                        "imports": {
                           "values": [
                              {
                                 "value": "pypackit_testsuite"
                              }
                           ]
                        },
                        "requires": {
                           "values": [
                              {
                                 "value": "pip"
                              }
                           ]
                        }
                     }
                  }
               }
            },
            "path": {
               "global": "test/conda-recipe/global",
               "local": "test/conda-recipe/local"
            }
         },
         "url": {
            "home": "https://anaconda.org/repodynamics/pypackit-testsuite"
         }
      },
      "dependency": {
         "build": {
            "setuptools": {
               "install": {
                  "conda": {
                     "channel": "conda-forge",
                     "homepage": "https://anaconda.org/conda-forge/setuptools",
                     "name": "setuptools",
                     "spec": "conda-forge::setuptools >=72.1.0,<73",
                     "version": ">=72.1.0,<73"
                  },
                  "pip": {
                     "homepage": "https://pypi.org/project/setuptools/",
                     "name": "setuptools",
                     "spec": "setuptools >=72.1.0,<73",
                     "version": ">=72.1.0,<73"
                  }
               },
               "name": "setuptools"
            },
            "versioning": {
               "import_name": "versioningit",
               "install": {
                  "conda": {
                     "channel": "conda-forge",
                     "homepage": "https://anaconda.org/conda-forge/versioningit",
                     "name": "versioningit",
                     "spec": "conda-forge::versioningit >=3.1.2,<4",
                     "version": ">=3.1.2,<4"
                  },
                  "pip": {
                     "homepage": "https://pypi.org/project/versioningit/",
                     "name": "versioningit",
                     "spec": "versioningit >=3.1.2,<4",
                     "version": ">=3.1.2,<4"
                  }
               },
               "name": "versioningit"
            }
         },
         "core": {
            "coverage": {
               "description": "Code coverage measurement for Python.",
               "install": {
                  "conda": {
                     "channel": "conda-forge",
                     "homepage": "https://anaconda.org/conda-forge/coverage",
                     "name": "coverage",
                     "spec": "conda-forge::coverage ==7.6.12",
                     "version": "==7.6.12"
                  },
                  "pip": {
                     "homepage": "https://pypi.org/project/coverage/",
                     "name": "coverage",
                     "spec": "coverage ==7.6.12",
                     "version": "==7.6.12"
                  }
               },
               "name": "coverage",
               "notes": "This is indirectly used by the `pytest-cov` plugin.\nHowever, we include it explicitly here to pin the version for reproducibility.\n",
               "url": {
                  "docs": "https://coverage.readthedocs.io/",
                  "source": "https://github.com/nedbat/coveragepy"
               }
            },
            "pkgdata": {
               "description": "Handling package resources, such as accessing data files that are\ndistributed with the package.\n",
               "install": {
                  "conda": {
                     "channel": "repodynamics",
                     "homepage": "https://anaconda.org/repodynamics/pkgdata",
                     "name": "pkgdata",
                     "spec": "repodynamics::pkgdata",
                     "version": ""
                  },
                  "pip": {
                     "homepage": "https://pypi.org/project/pkgdata/",
                     "name": "pkgdata",
                     "spec": "pkgdata"
                  }
               },
               "name": "pkgdata",
               "url": {
                  "docs": "https://pkgdata.repodynamics.com/",
                  "source": "https://github.com/repodynamics/pkgdata"
               }
            },
            "pytest": {
               "description": "Testing framework for Python.",
               "install": {
                  "conda": {
                     "channel": "conda-forge",
                     "homepage": "https://anaconda.org/conda-forge/pytest",
                     "name": "pytest",
                     "spec": "conda-forge::pytest ==8.3.5",
                     "version": "==8.3.5"
                  },
                  "pip": {
                     "homepage": "https://pypi.org/project/pytest/",
                     "name": "pytest",
                     "spec": "pytest ==8.3.5",
                     "version": "==8.3.5"
                  }
               },
               "name": "pytest",
               "url": {
                  "docs": "https://docs.pytest.org/en/stable/",
                  "source": "https://github.com/pytest-dev/pytest"
               }
            },
            "pytest-cov": {
               "description": "Pytest plugin for measuring test coverage.",
               "install": {
                  "conda": {
                     "channel": "conda-forge",
                     "homepage": "https://anaconda.org/conda-forge/pytest-cov",
                     "name": "pytest-cov",
                     "spec": "conda-forge::pytest-cov ==6.0.0",
                     "version": "==6.0.0"
                  },
                  "pip": {
                     "homepage": "https://pypi.org/project/pytest-cov/",
                     "name": "pytest-cov",
                     "spec": "pytest-cov ==6.0.0",
                     "version": "==6.0.0"
                  }
               },
               "name": "pytest-cov",
               "notes": "This plugin uses the [coverage.py](https://github.com/nedbat/coveragepy) package\nto measure code coverage.\n",
               "url": {
                  "docs": "https://pytest-cov.readthedocs.io/",
                  "source": "https://github.com/pytest-dev/pytest-cov"
               }
            },
            "pytest-html": {
               "description": "Pytest plugin for generating HTML reports.",
               "install": {
                  "conda": {
                     "channel": "conda-forge",
                     "homepage": "https://anaconda.org/conda-forge/pytest-html",
                     "name": "pytest-html",
                     "spec": "conda-forge::pytest-html ==4.1.1",
                     "version": "==4.1.1"
                  },
                  "pip": {
                     "homepage": "https://pypi.org/project/pytest-html/",
                     "name": "pytest-html",
                     "spec": "pytest-html ==4.1.1",
                     "version": "==4.1.1"
                  }
               },
               "name": "pytest-html",
               "url": {
                  "docs": "https://pytest-html.readthedocs.io/",
                  "source": "https://github.com/pytest-dev/pytest-html"
               }
            }
         }
      },
      "entry": {
         "cli": {
            "main": {
               "conda": true,
               "description": "Main CLI entry of the test-suite.",
               "name": "PyPackIT-TestSuite",
               "pypi": true,
               "ref": "pypackit_testsuite.__main__:main"
            }
         },
         "python": {
            "main": {
               "conda": true,
               "description": "Main Python API entry of the package.",
               "name": "pypackit_testsuite",
               "pypi": true,
               "ref": "pypackit_testsuite:__init__"
            }
         }
      },
      "file": {
         "coverage_config": {
            "content": {
               "tool": {
                  "coverage": {
                     "html": {
                        "directory": "$|| path_report ||/coverage/html",
                        "title": "PyPackIT Test Coverage"
                     },
                     "json": {
                        "output": "$|| path_report ||/coverage/coverage.json",
                        "pretty_print": true
                     },
                     "report": {
                        "exclude_also": [
                           "def __repr__",
                           "if self\\.debug",
                           "raise AssertionError",
                           "raise NotImplementedError",
                           "if 0:",
                           "if __name__ == .__main__.:",
                           "@(abc\\.)?abstractmethod",
                           "if _?TYPE_CHECKING:"
                        ],
                        "show_missing": true
                     },
                     "run": {
                        "branch": true,
                        "data_file": "$|| path_cache ||/coverage/coverage",
                        "debug_file": "$|| path_report ||/coverage/debug.log",
                        "source_pkgs": [
                           "pypackit"
                        ]
                     },
                     "xml": {
                        "output": "$|| path_report ||/coverage/coverage.xml"
                     }
                  }
               }
            },
            "content_setting": {
               "prefix": "",
               "separator": "\n",
               "suffix": ""
            },
            "file_setting": {
               "eof_newline": true,
               "json": {
                  "end_of_file_newline": true,
                  "indent": 3,
                  "sort_keys": true
               },
               "md": {
                  "heading_number": false,
                  "target": "github"
               },
               "sort_keys": true,
               "yaml": {
                  "block_string": true,
                  "end_of_file_newline": true,
                  "mapping_indent": 2,
                  "remove_top_level_indent": true,
                  "sequence_indent": 4,
                  "sequence_indent_offset": 2,
                  "sort_keys": true
               }
            },
            "name": "Coverage Configuration",
            "path": "test/src/pypackit_testsuite/data/config/coverage.toml",
            "status": "active",
            "summary": "Coverage [configuration file](https://coverage.readthedocs.io/en/latest/config.html), which is also used by the [`pytest-cov`](https://pytest-cov.readthedocs.io/en/latest/config.html) plugin.",
            "type": "toml",
            "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/test/src/pypackit_testsuite/data/config/coverage.toml"
         },
         "pytest_config": {
            "content": {
               "tool": {
                  "pytest": {
                     "ini_options": {
                        "addopts": "-r a --verbose --color=yes --full-trace --strict-config --junit-xml='$|| path_report ||/pytest/junit.xml' --import-mode=importlib --debug='$|| path_report ||/pytest/debug.log' --cov --cov-config='$|| path_config ||/coverage.toml' --cov-report=term-missing:skip-covered --cov-report=html --cov-report=xml --cov-report=json --html='$|| path_report ||/pytest/report.html' --self-contained-html",
                        "cache_dir": "$|| path_cache ||/pytest",
                        "console_output_style": "count",
                        "junit_logging": "all",
                        "junit_suite_name": "pypackit_testsuite",
                        "log_auto_indent": true,
                        "log_cli": true,
                        "log_cli_date_format": "%Y-%m-%d %H:%M:%S",
                        "log_cli_format": "%(levelname)s %(message)s",
                        "log_cli_level": "INFO",
                        "log_date_format": "%Y-%m-%d %H:%M:%S",
                        "log_file": "$|| path_report ||/pytest/log.txt",
                        "log_file_date_format": "%Y-%m-%d %H:%M:%S",
                        "log_file_format": "%(asctime)s %(levelname)s %(message)s",
                        "log_file_level": "DEBUG",
                        "log_format": "%(asctime)s %(levelname)s %(message)s",
                        "log_level": "DEBUG",
                        "minversion": "8.3.3",
                        "python_classes": [
                           "Test*",
                           "*Test"
                        ],
                        "python_files": [
                           "test_*.py",
                           "tests_*.py",
                           "*_test.py",
                           "*_tests.py"
                        ],
                        "python_functions": [
                           "test_*",
                           "tests_*",
                           "*_test",
                           "*_tests"
                        ],
                        "required_plugins": [
                           "pytest-cov ==6.0.0",
                           "pytest-html ==4.1.1"
                        ]
                     }
                  }
               }
            },
            "content_setting": {
               "prefix": "",
               "separator": "\n",
               "suffix": ""
            },
            "description": "See [Pytest Configuration Options](https://docs.pytest.org/en/stable/reference/reference.html#ini-options-ref)\nfor a full list of available settings.\n",
            "file_setting": {
               "eof_newline": true,
               "json": {
                  "end_of_file_newline": true,
                  "indent": 3,
                  "sort_keys": true
               },
               "md": {
                  "heading_number": false,
                  "target": "github"
               },
               "sort_keys": true,
               "yaml": {
                  "block_string": true,
                  "end_of_file_newline": true,
                  "mapping_indent": 2,
                  "remove_top_level_indent": true,
                  "sequence_indent": 4,
                  "sequence_indent_offset": 2,
                  "sort_keys": true
               }
            },
            "name": "Pytest Configuration",
            "path": "test/src/pypackit_testsuite/data/config/pytest.toml",
            "status": "active",
            "summary": "Pytest [configuration file](https://docs.pytest.org/en/stable/reference/customize.html) in TOML format.",
            "type": "toml",
            "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/test/src/pypackit_testsuite/data/config/pytest.toml"
         },
         "readme": {
            "content": {
               "body": [
                  {
                     "align": "center",
                     "alt": "PyPackIT: Cloud-Native Continuous Software Engineering Automation for Python Packages on GitHub",
                     "class": "block_image",
                     "link": "https://pypackit.repodynamics.com",
                     "src": "https://raw.githubusercontent.com/RepoDynamics/PyPackIT/main/docs/website/source/_media/logo/full_light.svg",
                     "src_dark": "https://raw.githubusercontent.com/RepoDynamics/PyPackIT/main/docs/website/source/_media/logo/full_dark.svg",
                     "title": "Welcome to PyPackIT! Click to visit our website and learn more.",
                     "width": "100%"
                  },
                  {
                     "attrs_container": {
                        "align": "center"
                     },
                     "class": "menu",
                     "color": "rgb(0 85 0)",
                     "color_dark": "rgb(28 170 0)",
                     "height": "33px",
                     "items": [
                        {
                           "link": "https://pypackit.repodynamics.com/intro",
                           "text": "Intro",
                           "title": "Introduction and Background"
                        },
                        {
                           "link": "https://pypackit.repodynamics.com/manual",
                           "text": "Manual",
                           "title": "User Manual"
                        },
                        {
                           "link": "https://pypackit.repodynamics.com/news",
                           "text": "News",
                           "title": "Latest News and Releases"
                        },
                        {
                           "link": "https://pypackit.repodynamics.com/contribute",
                           "text": "Contribute",
                           "title": "How to Contribute"
                        },
                        {
                           "link": "https://pypackit.repodynamics.com/about",
                           "text": "About",
                           "title": "About the Project"
                        },
                        {
                           "link": "https://pypackit.repodynamics.com/help",
                           "text": "Help",
                           "title": "Get Help and Support"
                        }
                     ],
                     "line_bottom_width": "100%",
                     "line_top_width": "100%",
                     "style": "for-the-badge"
                  },
                  [
                     {
                        "args": {
                           "message": "Automation"
                        },
                        "class": "badge",
                        "color": "#0B3C75",
                        "height": "23px",
                        "label": "Keywords",
                        "label_color": "#494949",
                        "service": "static",
                        "style": "flat-square"
                     },
                     "&nbsp;",
                     {
                        "class": "buttons",
                        "color": "#0B3C75",
                        "height": "23px",
                        "items": [
                           "Cloud-Native Development",
                           "Continuous Integration",
                           "Continuous Delivery",
                           "Continuous Deployment",
                           "Continuous Testing",
                           "Continuous Refactoring",
                           "Continuous Configuration Automation",
                           "Continuous Software Engineering",
                           "DevOps",
                           "Infrastructure as Code",
                           "Agile",
                           "Dynamic Project Management",
                           "Template Repository",
                           "Python Package Skeleton",
                           "Sphinx Website",
                           "Testing Infrastructure",
                           "FAIR Software",
                           "GitHub Actions",
                           "Bot"
                        ],
                        "style": "flat-square"
                     }
                  ],
                  {
                     "attrs": {
                        "align": "justify"
                     },
                     "class": "paragraph",
                     "content": "PyPackIT [\u02c8pa\u026a\u02ccp\u00e6k\u026at] is a comprehensive <strong>cloud-based automation tool</strong> for production of <abbr title=\"Findable, Accessible, Interoperable, and Reusable\">FAIR</abbr> and professional applications on <strong>GitHub</strong>, in accordance with the latest software engineering best practices and standards. PyPackIT is a ready-to-use software suite that streamlines the initiation, configuration, development, publication, management, and maintenance of high-quality <strong>Python applications</strong>. By taking charge of repetitive tasks and automatically enforcing best practices throughout the software development life cycle, PyPackIT enables users to solely focus on the creative aspects of their projects, while improving quality and lowering production costs. Using latest tools and methodologies, PyPackIT offers a robust project infrastructure, including a build-ready Python <strong>package skeleton</strong>, a fully operational <strong>test suite</strong>, an automated <strong>documentation website</strong>, and a comprehensive <strong>control center</strong> according to <strong>Infrastructure-as-Code</strong> and <strong>Continuous Configuration Automation</strong> practices to enable dynamic project management and customization. PyPackIT establishes a complete <strong>cloud development</strong> environment on GitHub, integrating with its version control system, issue tracker,and pull-based model to provide a fully <strong>automated software development workflow</strong> with <strong>issue management</strong>, <strong>branching model</strong>, and <strong>versioning scheme</strong>. Leveraging <strong>GitHub Actions</strong>, PyPackIT implements a cloud-native Agile development process using <strong>Continuous software engineering</strong>, <strong>containerization</strong>, and <strong>DevOps</strong> methodologies, with a full set of <strong>Continuous Integration</strong>, Deployment, Testing, Refactoring, and Maintenance pipelines. PyPackIT is a <strong>free</strong> and <strong>open-source</strong> software suite that readily integrates with both new and existing projects to ensure their long-term sustainability and high quality, enabling software projects to rapidly implement their ideas and easily maintain their products."
                  },
                  {
                     "class": "badges",
                     "color": "#0B3C75",
                     "height": "23px",
                     "items": [
                        {
                           "args": {
                              "message": "10.5281/zenodo.14359838"
                           },
                           "color": "#1682D4",
                           "label": "DOI",
                           "link": "https://doi.org/10.5281/zenodo.14359838",
                           "logo": "zenodo",
                           "logo_type": "name"
                        },
                        {
                           "args": {
                              "message": "pypackit"
                           },
                           "color": "#3775A9",
                           "label": "pip install ",
                           "link": "https://pypi.org/project/PyPackIT",
                           "logo": "docs/website/source/_media/logo_ext/pypi.png",
                           "logo_media_type": "png",
                           "logo_type": "file"
                        },
                        {
                           "args": {
                              "message": "pypackit -c repodynamics"
                           },
                           "color": "#44A833",
                           "label": "conda install",
                           "link": "https://anaconda.org/repodynamics/pypackit",
                           "logo": "anaconda",
                           "logo_color": "#44A833",
                           "logo_type": "name"
                        },
                        {
                           "args": {
                              "message": "ghcr.io/repodynamics/pypackit:latest"
                           },
                           "color": "#2496ED",
                           "label": "docker pull",
                           "link": "https://github.com/RepoDynamics/PyPackIT/pkgs/container/PyPackIT",
                           "logo": "docker",
                           "logo_color": "#2496ED",
                           "logo_type": "name"
                        },
                        {
                           "args": {
                              "message": "PyPackIT"
                           },
                           "color": "#181717",
                           "label": "GitHub",
                           "link": "https://github.com/RepoDynamics/PyPackIT/releases",
                           "logo": "github",
                           "logo_type": "name"
                        },
                        {
                           "args": {
                              "message": "try online",
                              "ref": "main",
                              "repo": "PyPackIT",
                              "user": "RepoDynamics"
                           },
                           "color": "#579ACA",
                           "endpoint": "github",
                           "label": "Binder",
                           "label_color": "#494949",
                           "service": "binder"
                        }
                     ],
                     "label_color": "#494949",
                     "separator": 2,
                     "service": "static",
                     "style": "flat-square"
                  }
               ],
               "footer": [
                  {
                     "class": "thematic_break"
                  },
                  {
                     "class": "badges",
                     "items": [
                        {
                           "align": "left",
                           "alt": "PyPackIT: Copyright \u00a9 2023\u20132025 RepoDynamics",
                           "args": {
                              "query": "$.copyright",
                              "url": "https://raw.githubusercontent.com/RepoDynamics/PyPackIT/main/.github/.repodynamics/metadata.json"
                           },
                           "color": "rgb(0 85 0)",
                           "color_dark": "rgb(28 170 0)",
                           "label": "PyPackIT",
                           "link": "https://github.com/RepoDynamics",
                           "logo": "docs/website/source/_media/logo/favicon.svg",
                           "logo_dark": "docs/website/source/_media/logo/favicon.svg",
                           "logo_type": "file",
                           "logo_type_dark": "file",
                           "service": "dynamic",
                           "title": "PyPackIT: Copyright \u00a9 2023\u20132025 RepoDynamics"
                        },
                        {
                           "align": "right",
                           "alt": "SPDX-License-Identifier: AGPL-3.0-or-later",
                           "args": {
                              "message": "AGPL-3.0-or-later"
                           },
                           "color": "#4398CC",
                           "label": "SPDX License Identifier",
                           "link": "https://pypackit.repodynamics.com/about/license",
                           "logo": "spdx",
                           "logo_color": "#4398CC",
                           "service": "static",
                           "title": "SPDX-License-Identifier: AGPL-3.0-or-later"
                        }
                     ],
                     "style": "for-the-badge"
                  }
               ],
               "sections": [
                  {
                     "body": [
                        {
                           "attrs_p": {
                              "align": "justify"
                           },
                           "button": {
                              "align": "left",
                              "color": [
                                 "rgb(0 85 0)",
                                 "rgb(60 85 0)"
                              ],
                              "color_dark": [
                                 "rgb(28 170 0)",
                                 "rgb(175 138 0)"
                              ],
                              "height": "30px",
                              "style": "for-the-badge"
                           },
                           "class": "highlights",
                           "items": [
                              {
                                 "description": "PyPackIT is fully preconfigured and easily installable\nin both new and existing repositories via a GitHub repository template.\nMost users only need to invest a few minutes filling project-specific information\nin the provided configuration files.\nPyPackIT then takes over, setting up the repository\nand generating a complete infrastructure and fully automated development workflow for the project.\nThis leaves users with only few tasks throughout the software development life cycle,\nsuch as adding application code, unit-tests, and minimal documentation content.\n",
                                 "title": "Ready to Use"
                              },
                              {
                                 "description": "PyPackIT is a cloud-based solution that integrates with GitHub\nand uses GitHub Actions to automate the entire software development process.\nIt provides a cloud-native development environment that\neliminates the need for initial setup and configuration,\nenabling users to immediately begin with the actual\nimplementation of software, even directly from the web browser.\nAll integration, testing, and deployment tasks are automatically carried out on the cloud,\nfacilitating Agile development and ensuring the consistent enforcement of best practices.\n",
                                 "title": "Cloud Native Development"
                              },
                              {
                                 "description": "PyPackIT offers a centralized user interface\nfor automatic configuration, customization, and management\nof the entire project, and even multiple projects at once.\nBased on DevOps practices like Infrastructure-as-Code,\nPyPackIT's control center consolidates all project configurations\ninto a unified data structure, supporting both declarative definitions\nand dynamic data generation at runtime via built-in templating, scripting,\nand online retrieval features.\nConfigurations are automatically applied to related components,\neliminating redundancy and rendering the entire project dynamic.\n",
                                 "title": "Continuous Configuration Automation"
                              },
                              {
                                 "description": "PyPackIT's CI/CD pipelines automate tasks such as code analysis,\nstyle formatting, type checking, refactoring, testing, dependency monitoring,\nversioning, build, containerization, release, and distribution,\nwith support for multiple indexing repositories including PyPI, Anaconda,\nZenodo, GitHub Releases, and all Docker registries.\nThese Continuous software engineering pipelines eliminate the need for dedicated integration\nand deployment teams, while increasing control, integrity, scalability, security,\nand transparency of the Agile development process.\n",
                                 "title": "Continuous Integration & Deployment"
                              },
                              {
                                 "description": "PyPackIT provides Continuous pipelines that\nperiodically perform automated testing, refactoring, and maintenance tasks\nsuch as testing previous releases with up-to-date dependencies,\nrefactoring code according to the latest standards,\nupgrading development tools and project infrastructure,\nand cleaning up the repository and its development environment.\nPyPackIT can automatically submit issue tickets and pull requests\nfor applying updates and fixes, thus maintaining\nthe health of the project and ensuring its long-term sustainability.\n",
                                 "title": "Continuous Refactoring & Testing"
                              },
                              {
                                 "description": "PyPackIT automatically maintains the project's issue tracking system,\nproviding type-specific submission forms that are\nkept up-to-date with project information.\nThese collect user inputs in a structured format,\nallowing PyPackIT to automate issue management activities\nsuch as ticket formatting, labeling, bug triage, task assignment,\ndocumentation, issue\u2013commit linkage, and progress reports.\nUsers can also command PyPackIT to perform specific tasks using semantic comments and labels,\neliminating all repetitive issue management activities.\n",
                                 "title": "Issue Management"
                              },
                              {
                                 "description": "PyPackIT fully integrates with Git and GitHub\nto automate version control tasks like branching,\nversioning, tagging, commit management, and merging.\nBased on well-established models such as Git Flow,\nPyPackIT adopts a specialized branching strategy and version scheme\nfor simultaneous development and deployment of multiple orthogonal release candidates,\nPyPackIT's strategy enables rapid project evolution according to Agile\nand Continuous software engineering methodologies,\nwhile ensuring availability and long-term support of earlier releases.\n",
                                 "title": "Version Control"
                              },
                              {
                                 "description": "PyPackIT supports Python applications with extension modules and non-Python dependencies.\nIt enables deployment as a Python package, a Conda package,\nand/or a Docker image to cloud services such as PyPI,\nAnaconda, Docker registries, and BinderHub instances.\nPyPackIT includes a build-ready package skeleton with essential source files\nand automatically maintained configuration files customized for the project.\nUsers only need to add application code in the provided source files,\nwhile PyPackIT automates all integration, packaging, and deployment tasks.\n",
                                 "title": "Python Application"
                              },
                              {
                                 "description": "PyPackIT's fully automated testing infrastructure enables the\nimmediate adoption of test-driven development methodologies,\nrequiring users to only provide test cases in the provided skeleton files.\nTesting is then automatically performed at various phases of the development life cycle,\nwhile generating comprehensive reports and coverage metrics\nto improve awareness of software health status.\nThe test suite is automatically packaged and distributed along each release,\nallowing for local verification of software functionality and performance by its users.\n",
                                 "title": "Test Suite"
                              },
                              {
                                 "description": "PyPackIT includes a fully designed website\nfilled with automatically generated documentation such as\nproject information, package metadata, installation guides,\nAPI reference, changelogs, release notes,\ncontribution guides, and citation data.\nThe website is automatically deployed to GitHub Pages and Read The Docs platforms,\nand can be easily customized via the control center with no web development knowledge.\nPyPackIT can also dynamically generate standalone documents in various Markdown formats,\nsuch as READMEs for different repositories.\n",
                                 "title": "Documentation Website"
                              },
                              {
                                 "description": "PyPackIT incorporates the System Package Data Exchange (SPDX) license standard\nand supports all SPDX License List licenses and exceptions, as well as user-defined ones.\nProjects can define complex licenses simply by providing an SPDX license expression.\nPyPackIT will then automatically retrieve\nthe necessary data from the SPDX database,\ncustomize it with project-specific information,\ngenerate visually appealing and syntactically valid license files and copyright notices,\nand integrate license information into all project components and releases.\n",
                                 "title": "Copyright & Licensing"
                              },
                              {
                                 "description": "PyPackIT improves project security while supporting community collaboration\nby incorporating security measures like branch and tag protection rulesets,\nvulnerability scanning, dependency monitoring, and private security advisories.\nAll provided GitHub Actions workflows and applications are developed\naccording to the latest security standards\nto prevent unauthorized access, data breaches, and code injection attacks.\nTo ensure that PyPackIT is highly secure and transparent,\nmost of its infrastructure is natively implemented and self-contained.\n",
                                 "title": "Security & Transparency"
                              }
                           ]
                        }
                     ],
                     "heading": "Highlights"
                  },
                  {
                     "body": [
                        {
                           "class": "badges",
                           "color": "#0B3C75",
                           "height": "23px",
                           "items": [
                              {
                                 "args": {
                                    "message": "0.0.0"
                                 },
                                 "color": "rgb(60 85 0)",
                                 "color_dark": "rgb(175 138 0)",
                                 "label": "PyPackIT",
                                 "label_color": "rgb(0 85 0)",
                                 "label_color_dark": "rgb(28 170 0)",
                                 "logo": "docs/website/source/_media/logo/favicon.svg",
                                 "logo_type": "file"
                              },
                              {
                                 "args": {
                                    "message": "major"
                                 },
                                 "color": "#AF1F10",
                                 "label": "\ud83d\udca5\u2002Release Type"
                              },
                              {
                                 "args": {
                                    "message": "2025-04-14"
                                 },
                                 "label": "\ud83d\uddd3\u2002Release Date"
                              },
                              {
                                 "args": {
                                    "message": "10.5281/zenodo.14359839"
                                 },
                                 "color": "#1682D4",
                                 "label": "DOI",
                                 "link": "https://zenodo.org/uploads/14359839",
                                 "logo": "zenodo",
                                 "logo_color": "#1682D4"
                              },
                              {
                                 "args": {
                                    "message": "PyPackIT == 0.0.0"
                                 },
                                 "color": "#3775A9",
                                 "label": "pip install",
                                 "link": "https://pypi.org/project/PyPackIT",
                                 "logo": "docs/website/source/_media/logo_ext/pypi.png",
                                 "logo_media_type": "png",
                                 "logo_type": "file"
                              },
                              {
                                 "args": {
                                    "message": "PyPackIT == 0.0.0 -c RepoDynamics"
                                 },
                                 "color": "#44A833",
                                 "label": "conda install",
                                 "link": "https://anaconda.org/repodynamics/pypackit",
                                 "logo": "anaconda",
                                 "logo_color": "#44A833",
                                 "logo_type": "name"
                              },
                              {
                                 "args": {
                                    "message": "ghcr.io/repodynamics/pypackit:0.0.0"
                                 },
                                 "color": "#2496ED",
                                 "label": "docker pull",
                                 "link": "https://github.com/RepoDynamics/PyPackIT/pkgs/container/PyPackIT",
                                 "logo": "docker",
                                 "logo_color": "#2496ED",
                                 "logo_type": "name"
                              },
                              {
                                 "args": {
                                    "message": "ver/0.0.0"
                                 },
                                 "color": "#181717",
                                 "label": "git checkout",
                                 "link": "https://github.com/RepoDynamics/PyPackIT/releases",
                                 "logo": "github",
                                 "logo_type": "name"
                              },
                              {
                                 "args": {
                                    "message": "try online",
                                    "ref": "ver/0.0.0",
                                    "repo": "PyPackIT",
                                    "user": "RepoDynamics"
                                 },
                                 "color": "#579ACA",
                                 "endpoint": "github",
                                 "label": "Binder",
                                 "service": "binder"
                              }
                           ],
                           "label_color": "#494949",
                           "separator": 2,
                           "service": "static",
                           "style": "flat-square"
                        },
                        "**Project Initialization**",
                        "This is an initial emtpy release."
                     ],
                     "heading": "Upcoming Release",
                     "sections": [
                        {
                           "body": [
                              {
                                 "class": "badges",
                                 "color": "#0B3C75",
                                 "height": "23px",
                                 "items": [
                                    {
                                       "args": {
                                          "message": "10.5072/zenodo.141305"
                                       },
                                       "color": "#1682D4",
                                       "label": "DOI",
                                       "link": "https://sandbox.zenodo.org/uploads/141305",
                                       "logo": "zenodo",
                                       "logo_color": "#1682D4"
                                    }
                                 ],
                                 "label_color": "#494949",
                                 "separator": 2,
                                 "service": "static",
                                 "style": "flat-square"
                              }
                           ],
                           "heading": "Latest Developmental Release"
                        },
                        {
                           "body": [
                              [
                                 {
                                    "class": "button",
                                    "color": "#494949",
                                    "height": "23px",
                                    "style": "flat-square",
                                    "text": "\u2699\ufe0f\u2002Operating System"
                                 },
                                 "&nbsp;",
                                 {
                                    "class": "badges",
                                    "height": "23px",
                                    "items": [
                                       {
                                          "args": {
                                             "message": "any"
                                          },
                                          "color": "#00802B",
                                          "label": "Linux (x64)",
                                          "logo": "docs/website/source/_media/logo_ext/linux.png",
                                          "logo_color": null
                                       },
                                       {
                                          "args": {
                                             "message": "any"
                                          },
                                          "color": "#00802B",
                                          "label": "Linux (arm64)",
                                          "logo": "docs/website/source/_media/logo_ext/linux.png",
                                          "logo_color": null
                                       },
                                       {
                                          "args": {
                                             "message": "any"
                                          },
                                          "color": "#00802B",
                                          "label": "macOS (x64)",
                                          "logo": "apple",
                                          "logo_color": "#000000"
                                       },
                                       {
                                          "args": {
                                             "message": "any"
                                          },
                                          "color": "#00802B",
                                          "label": "macOS (arm64)",
                                          "logo": "apple",
                                          "logo_color": "#000000"
                                       },
                                       {
                                          "args": {
                                             "message": "any"
                                          },
                                          "color": "#00802B",
                                          "label": "Windows (x64)",
                                          "logo": "https://upload.wikimedia.org/wikipedia/commons/4/44/Microsoft_logo.svg",
                                          "logo_color": null
                                       }
                                    ],
                                    "label_color": "#494949",
                                    "separator": 1,
                                    "service": "static",
                                    "style": "flat-square"
                                 }
                              ],
                              [
                                 {
                                    "args": {
                                       "message": "Python"
                                    },
                                    "class": "badge",
                                    "color": "#494949",
                                    "height": "23px",
                                    "label_color": "#494949",
                                    "logo": "docs/website/source/_media/logo_ext/python.svg",
                                    "logo_media_type": "svg+xml",
                                    "logo_type": "file",
                                    "service": "static",
                                    "style": "flat-square"
                                 },
                                 "&nbsp;",
                                 {
                                    "class": "badges",
                                    "color": "#0B3C75",
                                    "height": "23px",
                                    "items": [
                                       {
                                          "args": {
                                             "message": "3.10 | 3.11 | 3.12 | 3.13"
                                          },
                                          "label": "Versions"
                                       },
                                       {
                                          "args": {
                                             "message": "any"
                                          },
                                          "color": "#00802B",
                                          "label": "Implementation"
                                       }
                                    ],
                                    "label_color": "#494949",
                                    "separator": 1,
                                    "service": "static",
                                    "style": "flat-square"
                                 }
                              ],
                              [
                                 {
                                    "class": "button",
                                    "color": "#494949",
                                    "height": "23px",
                                    "style": "flat-square",
                                    "text": "\ud83d\udce6\u2002Dependencies"
                                 },
                                 "&nbsp;",
                                 {
                                    "class": "badges",
                                    "height": "23px",
                                    "items": [
                                       {
                                          "args": {
                                             "message": "any"
                                          },
                                          "color": "#00802B",
                                          "label": "pkgdata"
                                       }
                                    ],
                                    "label_color": "#494949",
                                    "separator": 1,
                                    "service": "static",
                                    "style": "flat-square"
                                 }
                              ]
                           ],
                           "heading": "Requirements"
                        },
                        {
                           "body": [
                              [
                                 {
                                    "class": "button",
                                    "color": "#494949",
                                    "height": "23px",
                                    "logo": "docs/website/source/_media/logo_ext/python.svg",
                                    "logo_media_type": "svg+xml",
                                    "logo_type": "file",
                                    "style": "flat-square",
                                    "text": "API"
                                 },
                                 "&nbsp;",
                                 {
                                    "class": "badges",
                                    "color": "#0B3C75",
                                    "height": "23px",
                                    "items": [
                                       {
                                          "alt": "pypackit",
                                          "args": {
                                             "message": "pypackit"
                                          },
                                          "color": "#3776AB",
                                          "title": "Main Python API entry of the package."
                                       }
                                    ],
                                    "label": "import",
                                    "label_color": "#494949",
                                    "separator": 1,
                                    "service": "static",
                                    "style": "flat-square"
                                 }
                              ],
                              [
                                 {
                                    "class": "button",
                                    "color": "#494949",
                                    "height": "23px",
                                    "logo": "gnubash",
                                    "logo_color": "#4EAA25",
                                    "style": "flat-square",
                                    "text": "CLI"
                                 },
                                 "&nbsp;",
                                 {
                                    "class": "badges",
                                    "color": "#0B3C75",
                                    "height": "23px",
                                    "items": [
                                       {
                                          "alt": "pypackit",
                                          "args": {
                                             "message": "pypackit"
                                          },
                                          "color": "#000",
                                          "title": "Main CLI entry of the package."
                                       }
                                    ],
                                    "label": "$",
                                    "label_color": "#494949",
                                    "separator": 1,
                                    "service": "static",
                                    "style": "flat-square"
                                 }
                              ]
                           ],
                           "heading": "Interfaces"
                        }
                     ]
                  },
                  {
                     "body": [
                        {
                           "class": "table",
                           "rows": [
                              [
                                 "<b>Project</b>",
                                 [
                                    {
                                       "args": {
                                          "repo": "PyPackIT",
                                          "user": "RepoDynamics"
                                       },
                                       "class": "badges",
                                       "color": "#0B3C75",
                                       "height": "23px",
                                       "items": [
                                          {
                                             "endpoint": "created_at",
                                             "label": "\ud83d\uddd3\u2002Creation Date"
                                          },
                                          {
                                             "endpoint": "contributors",
                                             "label": "\ud83e\uddd1\u200d\ud83d\udcbb\ufe0f\u2002Contributors"
                                          },
                                          {
                                             "endpoint": "language_count",
                                             "label": "\ud83d\udd20\u2002Programming Languages"
                                          },
                                          {
                                             "endpoint": "top_language",
                                             "logo": "docs/website/source/_media/logo_ext/python.svg",
                                             "logo_media_type": "svg+xml",
                                             "logo_type": "file"
                                          },
                                          {
                                             "endpoint": "repo_size",
                                             "label": "\ud83d\ude9a\u2002Repo Size"
                                          },
                                          {
                                             "endpoint": "code_size",
                                             "label": "\ud83d\ude9b\u2002Code Size"
                                          }
                                       ],
                                       "separator": 2,
                                       "service": "github",
                                       "style": "flat-square"
                                    }
                                 ]
                              ],
                              [
                                 "<b>Health</b>",
                                 [
                                    {
                                       "args": {
                                          "repo": "PyPackIT",
                                          "user": "RepoDynamics"
                                       },
                                       "class": "badges",
                                       "height": "23px",
                                       "items": [
                                          {
                                             "args": {
                                                "vcs_name": "github"
                                             },
                                             "endpoint": "coverage",
                                             "service": "codecov"
                                          },
                                          {
                                             "args": {
                                                "package": "PyPackIT",
                                                "platform": "pypi"
                                             },
                                             "endpoint": "source_rank",
                                             "service": "librariesio"
                                          },
                                          {
                                             "args": {
                                                "package": "PyPackIT",
                                                "platform": "pypi"
                                             },
                                             "endpoint": "dependency_status",
                                             "label": "Package Dependencies",
                                             "service": "librariesio"
                                          },
                                          {
                                             "args": {
                                                "package": "",
                                                "platform": "github"
                                             },
                                             "endpoint": "dependency_status_github",
                                             "label": "Repository Dependencies",
                                             "service": "librariesio"
                                          },
                                          {
                                             "args": {
                                                "down_color": "#AF1F10",
                                                "down_message": "offline",
                                                "up_color": "#00802b",
                                                "up_message": "online",
                                                "url": "https://pypackit.repodynamics.com"
                                             },
                                             "label": "Website",
                                             "service": "website"
                                          }
                                       ],
                                       "separator": 2,
                                       "service": "github",
                                       "style": "flat-square"
                                    }
                                 ]
                              ],
                              [
                                 "<b>Standards</b>",
                                 [
                                    {
                                       "class": "badges",
                                       "height": "23px",
                                       "items": [
                                          {
                                             "args": {
                                                "message": "Pytest"
                                             },
                                             "color": "#0A9EDC",
                                             "label": "Testing",
                                             "link": "https://github.com/pytest-dev/pytest/",
                                             "logo": "pytest",
                                             "logo_color": "#0A9EDC",
                                             "logo_type": "name"
                                          },
                                          {
                                             "args": {
                                                "message": "mypy"
                                             },
                                             "color": "#2A6DB2",
                                             "label": "Type Checking",
                                             "link": "https://github.com/python/mypy",
                                             "logo": "docs/website/source/_media/logo_ext/mypy.svg",
                                             "logo_media_type": "svg+xml",
                                             "logo_type": "file"
                                          },
                                          {
                                             "args": {
                                                "message": "Ruff"
                                             },
                                             "color": "#D7FF64",
                                             "label": "Lint",
                                             "link": "https://github.com/astral-sh/ruff",
                                             "logo": "ruff",
                                             "logo_color": "#D7FF64",
                                             "logo_type": "name"
                                          },
                                          {
                                             "args": {
                                                "message": "CodeQL"
                                             },
                                             "color": "#181717",
                                             "label": "Security",
                                             "link": "https://codeql.github.com/",
                                             "logo": "github",
                                             "logo_type": "name"
                                          },
                                          {
                                             "args": {
                                                "message": "Black"
                                             },
                                             "color": "#000",
                                             "label": "Code Style",
                                             "link": "https://github.com/psf/black",
                                             "logo": "docs/website/source/_media/logo_ext/black.png",
                                             "logo_media_type": "png",
                                             "logo_type": "file"
                                          }
                                       ],
                                       "separator": 2,
                                       "service": "static",
                                       "style": "flat-square"
                                    }
                                 ]
                              ],
                              [
                                 "<b>Downloads</b>",
                                 [
                                    [
                                       {
                                          "args": {
                                             "package": "PyPackIT"
                                          },
                                          "class": "badges",
                                          "color": "#0B3C75",
                                          "endpoint": "downloads",
                                          "height": "23px",
                                          "items": [
                                             {
                                                "endpoint": "total_downloads",
                                                "label": "PyPI",
                                                "logo": "docs/website/source/_media/logo_ext/pypi.png",
                                                "logo_media_type": "png",
                                                "logo_type": "file",
                                                "service": "pepy"
                                             },
                                             {
                                                "args": {
                                                   "period": "m"
                                                }
                                             },
                                             {
                                                "args": {
                                                   "period": "w"
                                                }
                                             },
                                             {
                                                "args": {
                                                   "period": "d"
                                                }
                                             }
                                          ],
                                          "label": "",
                                          "logo": "",
                                          "separator": 1,
                                          "service": "pypi",
                                          "style": "flat-square"
                                       },
                                       "&nbsp;&nbsp;",
                                       {
                                          "args": {
                                             "channel": "repodynamics",
                                             "package": "pypackit"
                                          },
                                          "class": "badge",
                                          "color": "#0B3C75",
                                          "endpoint": "downloads",
                                          "height": "23px",
                                          "label": "Conda",
                                          "logo": "anaconda",
                                          "logo_color": "#44A833",
                                          "service": "conda",
                                          "style": "flat-square"
                                       },
                                       "&nbsp;&nbsp;",
                                       {
                                          "args": {
                                             "repo": "PyPackIT",
                                             "user": "RepoDynamics"
                                          },
                                          "class": "badge",
                                          "color": "#0B3C75",
                                          "endpoint": "downloads_all_releases",
                                          "height": "23px",
                                          "label": "GitHub",
                                          "service": "github",
                                          "style": "flat-square"
                                       }
                                    ]
                                 ]
                              ],
                              [
                                 "<b>Users</b>",
                                 [
                                    {
                                       "args": {
                                          "package": "PyPackIT",
                                          "platform": "pypi"
                                       },
                                       "class": "badges",
                                       "color": "#0B3C75",
                                       "height": "23px",
                                       "items": [
                                          {
                                             "endpoint": "dependents",
                                             "label": "Dependent Packages"
                                          },
                                          {
                                             "args": {
                                                "repo": true
                                             },
                                             "endpoint": "dependents",
                                             "label": "Dependent Repositories"
                                          }
                                       ],
                                       "separator": 2,
                                       "service": "librariesio",
                                       "style": "flat-square"
                                    }
                                 ]
                              ],
                              [
                                 "<b>Issues</b>",
                                 [
                                    [
                                       {
                                          "args": {
                                             "kind": "issues",
                                             "label": null,
                                             "repo": "PyPackIT",
                                             "user": "RepoDynamics"
                                          },
                                          "class": "badges",
                                          "endpoint": "issue_count",
                                          "height": "23px",
                                          "items": [
                                             {
                                                "args": {
                                                   "state": "open"
                                                },
                                                "color": "#AF1F10",
                                                "label": "Total"
                                             },
                                             {
                                                "args": {
                                                   "state": "closed"
                                                },
                                                "color": "#00802B",
                                                "label": ""
                                             }
                                          ],
                                          "separator": 0,
                                          "service": "github",
                                          "style": "flat-square"
                                       },
                                       "&nbsp;&nbsp;",
                                       {
                                          "args": {
                                             "kind": "issues",
                                             "label": "Type: \ud83d\udc1e bug fix",
                                             "repo": "PyPackIT",
                                             "user": "RepoDynamics"
                                          },
                                          "class": "badges",
                                          "endpoint": "issue_count",
                                          "height": "23px",
                                          "items": [
                                             {
                                                "args": {
                                                   "state": "open"
                                                },
                                                "color": "#AF1F10",
                                                "label": "\ud83d\udc1e\u2002Bug Fixes"
                                             },
                                             {
                                                "args": {
                                                   "state": "closed"
                                                },
                                                "color": "#00802B",
                                                "label": ""
                                             }
                                          ],
                                          "separator": 0,
                                          "service": "github",
                                          "style": "flat-square"
                                       },
                                       "&nbsp;&nbsp;",
                                       {
                                          "args": {
                                             "kind": "issues",
                                             "label": "Type: \u2728 new feature",
                                             "repo": "PyPackIT",
                                             "user": "RepoDynamics"
                                          },
                                          "class": "badges",
                                          "endpoint": "issue_count",
                                          "height": "23px",
                                          "items": [
                                             {
                                                "args": {
                                                   "state": "open"
                                                },
                                                "color": "#AF1F10",
                                                "label": "\u2728\u2002New Features"
                                             },
                                             {
                                                "args": {
                                                   "state": "closed"
                                                },
                                                "color": "#00802B",
                                                "label": ""
                                             }
                                          ],
                                          "separator": 0,
                                          "service": "github",
                                          "style": "flat-square"
                                       },
                                       "&nbsp;&nbsp;",
                                       {
                                          "args": {
                                             "kind": "issues",
                                             "label": "Type: \ud83d\udca5 breaking change",
                                             "repo": "PyPackIT",
                                             "user": "RepoDynamics"
                                          },
                                          "class": "badges",
                                          "endpoint": "issue_count",
                                          "height": "23px",
                                          "items": [
                                             {
                                                "args": {
                                                   "state": "open"
                                                },
                                                "color": "#AF1F10",
                                                "label": "\ud83d\udca5\u2002Breaking Changes"
                                             },
                                             {
                                                "args": {
                                                   "state": "closed"
                                                },
                                                "color": "#00802B",
                                                "label": ""
                                             }
                                          ],
                                          "separator": 0,
                                          "service": "github",
                                          "style": "flat-square"
                                       },
                                       "&nbsp;&nbsp;"
                                    ]
                                 ]
                              ],
                              [
                                 "<b>PRs</b>",
                                 [
                                    [
                                       {
                                          "args": {
                                             "kind": "pulls",
                                             "label": null,
                                             "repo": "PyPackIT",
                                             "user": "RepoDynamics"
                                          },
                                          "class": "badges",
                                          "endpoint": "issue_count",
                                          "height": "23px",
                                          "items": [
                                             {
                                                "args": {
                                                   "state": "open"
                                                },
                                                "color": "#AF1F10",
                                                "label": "Total"
                                             },
                                             {
                                                "args": {
                                                   "state": "closed"
                                                },
                                                "color": "#00802B",
                                                "label": ""
                                             }
                                          ],
                                          "separator": 0,
                                          "service": "github",
                                          "style": "flat-square"
                                       },
                                       "&nbsp;&nbsp;",
                                       {
                                          "args": {
                                             "kind": "pulls",
                                             "label": "Type: \ud83d\udc1e bug fix",
                                             "repo": "PyPackIT",
                                             "user": "RepoDynamics"
                                          },
                                          "class": "badges",
                                          "endpoint": "issue_count",
                                          "height": "23px",
                                          "items": [
                                             {
                                                "args": {
                                                   "state": "open"
                                                },
                                                "color": "#AF1F10",
                                                "label": "\ud83d\udc1e\u2002Bug Fixes"
                                             },
                                             {
                                                "args": {
                                                   "state": "closed"
                                                },
                                                "color": "#00802B",
                                                "label": ""
                                             }
                                          ],
                                          "separator": 0,
                                          "service": "github",
                                          "style": "flat-square"
                                       },
                                       "&nbsp;&nbsp;",
                                       {
                                          "args": {
                                             "kind": "pulls",
                                             "label": "Type: \u2728 new feature",
                                             "repo": "PyPackIT",
                                             "user": "RepoDynamics"
                                          },
                                          "class": "badges",
                                          "endpoint": "issue_count",
                                          "height": "23px",
                                          "items": [
                                             {
                                                "args": {
                                                   "state": "open"
                                                },
                                                "color": "#AF1F10",
                                                "label": "\u2728\u2002New Features"
                                             },
                                             {
                                                "args": {
                                                   "state": "closed"
                                                },
                                                "color": "#00802B",
                                                "label": ""
                                             }
                                          ],
                                          "separator": 0,
                                          "service": "github",
                                          "style": "flat-square"
                                       },
                                       "&nbsp;&nbsp;",
                                       {
                                          "args": {
                                             "kind": "pulls",
                                             "label": "Type: \ud83d\udca5 breaking change",
                                             "repo": "PyPackIT",
                                             "user": "RepoDynamics"
                                          },
                                          "class": "badges",
                                          "endpoint": "issue_count",
                                          "height": "23px",
                                          "items": [
                                             {
                                                "args": {
                                                   "state": "open"
                                                },
                                                "color": "#AF1F10",
                                                "label": "\ud83d\udca5\u2002Breaking Changes"
                                             },
                                             {
                                                "args": {
                                                   "state": "closed"
                                                },
                                                "color": "#00802B",
                                                "label": ""
                                             }
                                          ],
                                          "separator": 0,
                                          "service": "github",
                                          "style": "flat-square"
                                       },
                                       "&nbsp;&nbsp;"
                                    ]
                                 ]
                              ],
                              [
                                 "<b>Commits</b>",
                                 [
                                    {
                                       "args": {
                                          "repo": "PyPackIT",
                                          "user": "RepoDynamics"
                                       },
                                       "class": "badges",
                                       "color": "#0B3C75",
                                       "endpoint": "commit_activity",
                                       "height": "23px",
                                       "items": [
                                          {
                                             "args": {
                                                "interval": "t"
                                             },
                                             "label": "Total",
                                             "logo": "git",
                                             "logo_color": "#F05032",
                                             "logo_type": "name"
                                          },
                                          {
                                             "args": {
                                                "interval": "y"
                                             },
                                             "label": ""
                                          },
                                          {
                                             "args": {
                                                "interval": "m"
                                             },
                                             "label": ""
                                          },
                                          {
                                             "args": {
                                                "interval": "w"
                                             },
                                             "label": ""
                                          },
                                          {
                                             "endpoint": "commits_since_latest_release",
                                             "label": "Since Latest Release"
                                          },
                                          {
                                             "endpoint": "last_commit",
                                             "label": "Last"
                                          }
                                       ],
                                       "separator": 2,
                                       "service": "github",
                                       "style": "flat-square"
                                    }
                                 ]
                              ],
                              [
                                 "<b>Discussions</b>",
                                 [
                                    {
                                       "args": {
                                          "repo": "PyPackIT",
                                          "user": "RepoDynamics"
                                       },
                                       "class": "badges",
                                       "color": "#0B3C75",
                                       "endpoint": "discussion_search_hits",
                                       "height": "23px",
                                       "items": [
                                          {
                                             "args": {
                                                "query": "category:\"Branding\""
                                             },
                                             "label": "#\ufe0f\u20e3\u2002Branding",
                                             "title": ""
                                          },
                                          {
                                             "args": {
                                                "query": "category:\"Bug Report\""
                                             },
                                             "label": "#\ufe0f\u20e3\u2002Bug Report",
                                             "title": "Report a potential bug or problem you encountered while using the application."
                                          },
                                          {
                                             "args": {
                                                "query": "category:\"Installation\""
                                             },
                                             "label": "\ud83d\ude4f\u2002Installation",
                                             "title": "Ask questions about the installation process."
                                          },
                                          {
                                             "args": {
                                                "query": "category:\"New Features\""
                                             },
                                             "label": "\ud83d\udca1\u2002New Features",
                                             "title": "Share ideas for new features"
                                          },
                                          {
                                             "args": {
                                                "query": "category:\"Release\""
                                             },
                                             "label": "\ud83d\udce3\u2002Release",
                                             "title": "New release announcements"
                                          },
                                          {
                                             "args": {
                                                "query": "category:\"Testimonials\""
                                             },
                                             "label": "\ud83d\udcdd\u2002Testimonials",
                                             "title": "Write a testimonial for PyPackIT and share your experience with others."
                                          },
                                          {
                                             "args": {
                                                "query": "category:\"Usage\""
                                             },
                                             "label": "#\ufe0f\u20e3\u2002Usage",
                                             "title": "Ask questions about the application and its usage/behavior."
                                          }
                                       ],
                                       "separator": 2,
                                       "service": "github",
                                       "style": "flat-square"
                                    }
                                 ]
                              ],
                              [
                                 "<b>Community</b>",
                                 [
                                    {
                                       "args": {
                                          "repo": "PyPackIT",
                                          "user": "RepoDynamics"
                                       },
                                       "class": "badges",
                                       "color": "#0B3C75",
                                       "height": "23px",
                                       "items": [
                                          {
                                             "endpoint": "forks"
                                          },
                                          {
                                             "endpoint": "stars"
                                          },
                                          {
                                             "endpoint": "watchers"
                                          }
                                       ],
                                       "logo": "github",
                                       "separator": 2,
                                       "service": "github",
                                       "style": "flat-square"
                                    }
                                 ]
                              ],
                              [
                                 "<b>DevOps</b>",
                                 [
                                    {
                                       "args": {
                                          "repo": "PyPackIT",
                                          "user": "RepoDynamics"
                                       },
                                       "class": "badges",
                                       "height": "23px",
                                       "items": [
                                          {
                                             "args": {
                                                "workflow": "main.yaml"
                                             },
                                             "endpoint": "workflow_status",
                                             "label": "CI",
                                             "logo": "github",
                                             "logo_type": "name"
                                          },
                                          {
                                             "args": {
                                                "environment": "PyPI (PyPackIT)"
                                             },
                                             "endpoint": "deployment_status",
                                             "logo": "docs/website/source/_media/logo_ext/pypi.png",
                                             "logo_media_type": "png",
                                             "logo_type": "file"
                                          },
                                          {
                                             "args": {
                                                "environment": "PyPI (PyPackIT-TestSuite)"
                                             },
                                             "endpoint": "deployment_status",
                                             "logo": "docs/website/source/_media/logo_ext/pypi.png",
                                             "logo_media_type": "png",
                                             "logo_type": "file"
                                          },
                                          {
                                             "args": {
                                                "environment": "TestPyPI (PyPackIT)"
                                             },
                                             "endpoint": "deployment_status",
                                             "logo": "docs/website/source/_media/logo_ext/pypi.png",
                                             "logo_media_type": "png",
                                             "logo_type": "file"
                                          },
                                          {
                                             "args": {
                                                "environment": "TestPyPI (PyPackIT-TestSuite)"
                                             },
                                             "endpoint": "deployment_status",
                                             "logo": "docs/website/source/_media/logo_ext/pypi.png",
                                             "logo_media_type": "png",
                                             "logo_type": "file"
                                          },
                                          {
                                             "args": {
                                                "environment": "Zenodo"
                                             },
                                             "endpoint": "deployment_status",
                                             "logo": "zenodo",
                                             "logo_type": "name"
                                          },
                                          {
                                             "args": {
                                                "environment": "Zenodo Sandbox"
                                             },
                                             "endpoint": "deployment_status",
                                             "logo": "zenodo",
                                             "logo_type": "name"
                                          },
                                          {
                                             "args": {
                                                "environment": "GitHub Release"
                                             },
                                             "endpoint": "deployment_status",
                                             "logo": "github",
                                             "logo_type": "name"
                                          },
                                          {
                                             "args": {
                                                "environment": "GitHub Pages"
                                             },
                                             "endpoint": "deployment_status",
                                             "logo": "github",
                                             "logo_type": "name"
                                          }
                                       ],
                                       "separator": 2,
                                       "service": "github",
                                       "style": "flat-square"
                                    }
                                 ]
                              ]
                           ]
                        }
                     ],
                     "heading": "Statistics"
                  },
                  {
                     "body": [
                        "PyPackIT was developed in [Volkamer Lab](https://volkamerlab.org/)."
                     ],
                     "heading": "Acknowledgements"
                  }
               ]
            },
            "content_setting": {
               "prefix": "",
               "separator": "\n",
               "suffix": ""
            },
            "file_setting": {
               "eof_newline": true,
               "json": {
                  "end_of_file_newline": true,
                  "indent": 3,
                  "sort_keys": true
               },
               "md": {
                  "heading_number": false,
                  "target": "pypi"
               },
               "sort_keys": true,
               "yaml": {
                  "block_string": true,
                  "end_of_file_newline": true,
                  "mapping_indent": 2,
                  "remove_top_level_indent": true,
                  "sequence_indent": 4,
                  "sequence_indent_offset": 2,
                  "sort_keys": true
               }
            },
            "name": "Test Suite README",
            "path": "test/README.md",
            "status": "active",
            "summary": "Main README file for the test suite.\n",
            "type": "md",
            "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/test/README.md"
         },
         "setuptools_manifest": {
            "content": [
               "graft src/pypackit_testsuite/data",
               "include src/pypackit_testsuite/py.typed",
               "global-exclude *.py[cod] __pycache__ *.so"
            ],
            "content_setting": {
               "prefix": "",
               "separator": "\n",
               "suffix": ""
            },
            "file_setting": {
               "eof_newline": true,
               "json": {
                  "end_of_file_newline": true,
                  "indent": 3,
                  "sort_keys": true
               },
               "md": {
                  "heading_number": false,
                  "target": "github"
               },
               "sort_keys": true,
               "yaml": {
                  "block_string": true,
                  "end_of_file_newline": true,
                  "mapping_indent": 2,
                  "remove_top_level_indent": true,
                  "sequence_indent": 4,
                  "sequence_indent_offset": 2,
                  "sort_keys": true
               }
            },
            "name": "MANIFEST.in",
            "path": "test/MANIFEST.in",
            "status": "active",
            "summary": "Manifest file for controlling files and directories in the source distribution.\n",
            "type": "txt",
            "url": "https://github.com/RepoDynamics/PyPackIT/blob/main/test/MANIFEST.in"
         }
      },
      "import_name": "pypackit_testsuite",
      "name": "PyPackIT-TestSuite",
      "os": {
         "linux-64": {
            "data": {
               "logo": "docs/website/source/_media/logo_ext/linux.png"
            },
            "name": "Linux (x64)",
            "platform": "linux-64",
            "runner": "ubuntu-24.04"
         },
         "linux-aarch64": {
            "data": {
               "logo": "docs/website/source/_media/logo_ext/linux.png"
            },
            "name": "Linux (arm64)",
            "platform": "linux-aarch64",
            "runner": "ubuntu-24.04-arm"
         },
         "osx-64": {
            "data": {
               "logo": "apple",
               "logo_color": "#000000"
            },
            "name": "macOS (x64)",
            "platform": "osx-64",
            "runner": "macos-13"
         },
         "osx-arm64": {
            "data": {
               "logo": "apple",
               "logo_color": "#000000"
            },
            "name": "macOS (arm64)",
            "platform": "osx-arm64",
            "runner": "macos-15"
         },
         "win-64": {
            "data": {
               "logo": "https://upload.wikimedia.org/wikipedia/commons/4/44/Microsoft_logo.svg"
            },
            "name": "Windows (x64)",
            "platform": "win-64",
            "runner": "windows-2025"
         }
      },
      "path": {
         "import": "test/src/pypackit_testsuite",
         "import_rel": "src/pypackit_testsuite",
         "root": "test",
         "source": "test/src",
         "source_rel": "src"
      },
      "pypi": {
         "publishable": true,
         "url": {
            "home": "https://pypi.org/project/PyPackIT-TestSuite"
         }
      },
      "pyproject": {
         "build-system": {
            "build-backend": "setuptools.build_meta",
            "requires": [
               "setuptools >=72.1.0,<73",
               "versioningit >=3.1.2,<4"
            ]
         },
         "project": {
            "authors": [
               {
                  "email": "armiariam@gmail.com",
                  "name": "Armin Ariamajd"
               }
            ],
            "classifiers": [
               "Natural Language :: English",
               "Development Status :: 1 - Planning",
               "Operating System :: MacOS",
               "Operating System :: Microsoft :: Windows",
               "Operating System :: OS Independent",
               "Operating System :: POSIX :: Linux",
               "Programming Language :: Python",
               "Programming Language :: Python :: 3 :: Only",
               "Programming Language :: Python :: 3.10",
               "Programming Language :: Python :: 3.11",
               "Programming Language :: Python :: 3.12",
               "Programming Language :: Python :: 3.13",
               "Typing :: Typed"
            ],
            "dependencies": [
               "pytest ==8.3.5",
               "pytest-cov ==6.0.0",
               "pytest-html ==4.1.1",
               "coverage ==7.6.12",
               "pkgdata"
            ],
            "description": "Cloud-Native Continuous Software Engineering Automation for Python Packages on GitHub",
            "dynamic": [
               "version"
            ],
            "entry-points": {},
            "gui-scripts": {},
            "keywords": [
               "Automation",
               "Cloud-Native Development",
               "Continuous Integration",
               "Continuous Delivery",
               "Continuous Deployment",
               "Continuous Testing",
               "Continuous Refactoring",
               "Continuous Configuration Automation",
               "Continuous Software Engineering",
               "DevOps",
               "Infrastructure as Code",
               "Agile",
               "Dynamic Project Management",
               "Template Repository",
               "Python Package Skeleton",
               "Sphinx Website",
               "Testing Infrastructure",
               "FAIR Software",
               "GitHub Actions",
               "Bot"
            ],
            "license": {
               "text": "AGPL-3.0-or-later"
            },
            "maintainers": [
               {
                  "email": "armiariam@gmail.com",
                  "name": "Armin Ariamajd"
               }
            ],
            "name": "PyPackIT-TestSuite",
            "optional-dependencies": {},
            "readme": {
               "content-type": "text/markdown",
               "file": "README.md"
            },
            "requires-python": ">=3.10",
            "scripts": {
               "PyPackIT-TestSuite": "pypackit_testsuite.__main__:main"
            },
            "urls": {
               "Documentation": "https://pypackit.repodynamics.com/manual",
               "Download": "https://github.com/RepoDynamics/PyPackIT/releases",
               "Homepage": "https://pypackit.repodynamics.com",
               "Issue-Tracker": "https://github.com/RepoDynamics/PyPackIT/issues",
               "News": "https://pypackit.repodynamics.com/news",
               "Source": "https://github.com/RepoDynamics/PyPackIT"
            }
         },
         "tool": {
            "setuptools": {
               "cmdclass": {
                  "build_py": "versioningit.cmdclass.build_py",
                  "sdist": "versioningit.cmdclass.sdist"
               },
               "include-package-data": true,
               "license-files": [
                  "LICENSES/*",
                  "COPYRIGHTS/*"
               ],
               "packages": {
                  "find": {
                     "namespaces": true,
                     "where": [
                        "src"
                     ]
                  }
               }
            },
            "versioningit": {
               "format": {
                  "dirty": "{base_version}+0.{committer_date:%Y.%m.%d}.{rev}.dirty",
                  "distance": "{base_version}+{distance}.{committer_date:%Y.%m.%d}.{rev}",
                  "distance-dirty": "{base_version}+{distance}.{committer_date:%Y.%m.%d}.{rev}.dirty"
               },
               "onbuild": {
                  "build-file": "pypackit_testsuite/__init__.py",
                  "method": "replace-version",
                  "regex": "^__version_info__: dict\\[str, str\\] = (?P<version>.*)",
                  "replacement": "{{ \"version\": \"{version}\", \"build_date\": \"{build_date:%Y.%m.%d}\", \"committer_date\": \"{committer_date:%Y.%m.%d}\", \"author_date\": \"{author_date:%Y.%m.%d}\", \"branch\": \"{branch}\", \"distance\": \"{distance}\", \"commit_hash\": \"{revision}\" }}",
                  "require-match": true,
                  "source-file": "src/pypackit_testsuite/__init__.py"
               },
               "tag2version": {
                  "rmprefix": "ver/"
               },
               "vcs": {
                  "default-tag": "ver/0.0.0",
                  "match": [
                     "ver/[0-9]*.[0-9]*.[0-9]*"
                  ],
                  "method": "git"
               }
            }
         }
      },
      "python": {
         "implementation": "cpython",
         "pure": true,
         "version": {
            "micros": [
               "3.10.0",
               "3.10.1",
               "3.10.2",
               "3.10.3",
               "3.10.4",
               "3.10.5",
               "3.10.6",
               "3.10.7",
               "3.10.8",
               "3.10.9",
               "3.10.10",
               "3.10.11",
               "3.10.12",
               "3.10.13",
               "3.10.14",
               "3.10.15",
               "3.10.16",
               "3.10.17",
               "3.11.0",
               "3.11.1",
               "3.11.2",
               "3.11.3",
               "3.11.4",
               "3.11.5",
               "3.11.6",
               "3.11.7",
               "3.11.8",
               "3.11.9",
               "3.11.10",
               "3.11.11",
               "3.11.12",
               "3.12.0",
               "3.12.1",
               "3.12.2",
               "3.12.3",
               "3.12.4",
               "3.12.5",
               "3.12.6",
               "3.12.7",
               "3.12.8",
               "3.12.9",
               "3.12.10",
               "3.13.0",
               "3.13.1",
               "3.13.2",
               "3.13.3"
            ],
            "minors": [
               "3.10",
               "3.11",
               "3.12",
               "3.13"
            ],
            "spec": ">=3.10"
         }
      },
      "source_file": {
         "all": {
            "glob": "**/*.py",
            "header_comments": {
               "content": "PyPackIT-TestSuite \u00a9 2023\u20132025 RepoDynamics\nSPDX-License-Identifier: AGPL-3.0-or-later\n",
               "empty_lines": 1,
               "line_continuation_indent": 0,
               "max_line_length": 100,
               "mode": "append"
            }
         },
         "top_import": {
            "docstring": {
               "content": "PyPackIT-TestSuite: Test Suite for PyPackIT.",
               "max_line_length": 100,
               "mode": "prepend"
            },
            "glob": "__init__.py"
         }
      },
      "typed": true
   },
   "repo": {
      "allow_auto_merge": false,
      "allow_merge_commit": false,
      "allow_rebase_merge": true,
      "allow_squash_merge": true,
      "allow_update_branch": true,
      "archived": false,
      "automated_security_fixes": true,
      "created_at": "2023-05-14",
      "default_branch": "main",
      "delete_branch_on_merge": false,
      "description": "Cloud-Native Continuous Software Engineering Automation for Python Packages on GitHub",
      "full_name": "RepoDynamics/PyPackIT",
      "gitattributes": {
         "main": {
            "entries": [
               {
                  "*": [
                     "text=auto"
                  ]
               },
               {
                  ".gitattributes": [
                     "text",
                     "export-ignore"
                  ]
               },
               {
                  ".gitignore": [
                     "text",
                     "export-ignore"
                  ]
               },
               {
                  "AUTHORS": [
                     "text"
                  ]
               },
               {
                  "CHANGELOG": [
                     "text"
                  ]
               },
               {
                  "CHANGES": [
                     "text"
                  ]
               },
               {
                  "CODEOWNERS": [
                     "text"
                  ]
               },
               {
                  "CONTRIBUTING": [
                     "text"
                  ]
               },
               {
                  "COPYING": [
                     "text"
                  ]
               },
               {
                  "copyright": [
                     "text"
                  ]
               },
               {
                  "*COPYRIGHT*": [
                     "text"
                  ]
               },
               {
                  "INSTALL": [
                     "text"
                  ]
               },
               {
                  "license": [
                     "text"
                  ]
               },
               {
                  "LICENSE*": [
                     "text"
                  ]
               },
               {
                  "Makefile": [
                     "text"
                  ]
               },
               {
                  "NEWS": [
                     "text"
                  ]
               },
               {
                  "readme": [
                     "text"
                  ]
               },
               {
                  "*README*": [
                     "text"
                  ]
               },
               {
                  "TODO": [
                     "text"
                  ]
               },
               {
                  "MANIFEST.in": [
                     "text"
                  ]
               },
               {
                  "*.typed": [
                     "text"
                  ]
               },
               {
                  "*.bibtex": [
                     "text",
                     "diff=bibtex"
                  ]
               },
               {
                  "*.doc": [
                     "diff=astextplain"
                  ]
               },
               {
                  "*.DOC": [
                     "diff=astextplain"
                  ]
               },
               {
                  "*.docx": [
                     "diff=astextplain"
                  ]
               },
               {
                  "*.DOCX": [
                     "diff=astextplain"
                  ]
               },
               {
                  "*.dot": [
                     "diff=astextplain"
                  ]
               },
               {
                  "*.DOT": [
                     "diff=astextplain"
                  ]
               },
               {
                  "*.pdf": [
                     "diff=astextplain"
                  ]
               },
               {
                  "*.PDF": [
                     "diff=astextplain"
                  ]
               },
               {
                  "*.rtf": [
                     "diff=astextplain"
                  ]
               },
               {
                  "*.RTF": [
                     "diff=astextplain"
                  ]
               },
               {
                  "*.md": [
                     "text",
                     "diff=markdown"
                  ]
               },
               {
                  "*.mdx": [
                     "text",
                     "diff=markdown"
                  ]
               },
               {
                  "*.rst": [
                     "text"
                  ]
               },
               {
                  "*.tex": [
                     "text",
                     "diff=tex"
                  ]
               },
               {
                  "*.adoc": [
                     "text"
                  ]
               },
               {
                  "*.textile": [
                     "text"
                  ]
               },
               {
                  "*.mustache": [
                     "text"
                  ]
               },
               {
                  "*.csv": [
                     "text",
                     "eol=crlf"
                  ]
               },
               {
                  "*.tab": [
                     "text"
                  ]
               },
               {
                  "*.tsv": [
                     "text"
                  ]
               },
               {
                  "*.txt": [
                     "text"
                  ]
               },
               {
                  "*.sql": [
                     "text"
                  ]
               },
               {
                  "*.epub": [
                     "diff=astextplain"
                  ]
               },
               {
                  "*.css": [
                     "text",
                     "diff=css"
                  ]
               },
               {
                  "*.htm": [
                     "text",
                     "diff=html"
                  ]
               },
               {
                  "*.html": [
                     "text",
                     "diff=html"
                  ]
               },
               {
                  "*.svg": [
                     "text"
                  ]
               },
               {
                  "*.png": [
                     "binary"
                  ]
               },
               {
                  "*.jpg": [
                     "binary"
                  ]
               },
               {
                  "*.jpeg": [
                     "binary"
                  ]
               },
               {
                  "*.gif": [
                     "binary"
                  ]
               },
               {
                  "*.tif": [
                     "binary"
                  ]
               },
               {
                  "*.tiff": [
                     "binary"
                  ]
               },
               {
                  "*.ico": [
                     "binary"
                  ]
               },
               {
                  "*.eps": [
                     "binary"
                  ]
               },
               {
                  "*.bash": [
                     "text",
                     "eol=lf"
                  ]
               },
               {
                  "*.fish": [
                     "text",
                     "eol=lf"
                  ]
               },
               {
                  "*.sh": [
                     "text",
                     "eol=lf"
                  ]
               },
               {
                  "*.zsh": [
                     "text",
                     "eol=lf"
                  ]
               },
               {
                  "*.bat": [
                     "text",
                     "eol=crlf"
                  ]
               },
               {
                  "*.cmd": [
                     "text",
                     "eol=crlf"
                  ]
               },
               {
                  "*.ps1": [
                     "text",
                     "eol=crlf"
                  ]
               },
               {
                  "*.json": [
                     "text"
                  ]
               },
               {
                  "*.toml": [
                     "text"
                  ]
               },
               {
                  "*.xml": [
                     "text"
                  ]
               },
               {
                  "*.yaml": [
                     "text"
                  ]
               },
               {
                  "*.yml": [
                     "text"
                  ]
               },
               {
                  "*.7z": [
                     "binary"
                  ]
               },
               {
                  "*.gz": [
                     "binary"
                  ]
               },
               {
                  "*.jar": [
                     "binary"
                  ]
               },
               {
                  "*.rar": [
                     "binary"
                  ]
               },
               {
                  "*.tar": [
                     "binary"
                  ]
               },
               {
                  "*.tgz": [
                     "binary"
                  ]
               },
               {
                  "*.zip": [
                     "binary"
                  ]
               },
               {
                  "*.patch": [
                     "-text"
                  ]
               },
               {
                  "*.pxd": [
                     "text",
                     "diff=python"
                  ]
               },
               {
                  "*.py": [
                     "text",
                     "diff=python"
                  ]
               },
               {
                  "*.py3": [
                     "text",
                     "diff=python"
                  ]
               },
               {
                  "*.pyw": [
                     "text",
                     "diff=python"
                  ]
               },
               {
                  "*.pyx": [
                     "text",
                     "diff=python"
                  ]
               },
               {
                  "*.pyz": [
                     "text",
                     "diff=python"
                  ]
               },
               {
                  "*.pyi": [
                     "text",
                     "diff=python"
                  ]
               },
               {
                  "*.db": [
                     "binary"
                  ]
               },
               {
                  "*.p": [
                     "binary"
                  ]
               },
               {
                  "*.pkl": [
                     "binary"
                  ]
               },
               {
                  "*.pickle": [
                     "binary"
                  ]
               },
               {
                  "*.pyc": [
                     "binary",
                     "export-ignore"
                  ]
               },
               {
                  "*.pyo": [
                     "binary",
                     "export-ignore"
                  ]
               },
               {
                  "*.pyd": [
                     "binary"
                  ]
               },
               {
                  "*.ipynb": [
                     "text",
                     "eol=lf"
                  ]
               }
            ],
            "path": ".gitattributes",
            "summary": "Main `.gitattributes` file for the entire repository.",
            "title": "Main"
         }
      },
      "gitignore": {
         "main": {
            "entries": [
               "docs/website/.build/",
               "docs/website/source/api/*/**",
               "docs/website/source/about/license/*/**",
               ".local/cache/**",
               ".local/report/**",
               ".local/temp/**",
               "__pycache__/",
               "*.py[cod]",
               "*$py.class",
               "*.so",
               ".Python",
               "./build/",
               "develop-eggs/",
               "dist/",
               "downloads/",
               "eggs/",
               ".eggs/",
               "lib/",
               "lib64/",
               "parts/",
               "sdist/",
               "var/",
               "wheels/",
               "share/python-wheels/",
               "*.egg-info/",
               ".installed.cfg",
               "*.egg",
               "*.manifest",
               "*.spec",
               "pip-log.txt",
               "pip-delete-this-directory.txt",
               "htmlcov/",
               ".tox/",
               ".nox/",
               ".coverage",
               ".coverage.*",
               ".cache",
               "nosetests.xml",
               "coverage.xml",
               "*.cover",
               ".hypothesis/",
               ".pytest_cache",
               "cover/",
               "*.mo",
               "*.pot",
               "*.log",
               "local_settings.py",
               "db.sqlite3",
               "db.sqlite3-journal",
               "instance/",
               ".webassets-cache",
               ".scrapy",
               "docs/website/_build/",
               "docs/website/source/api/_autosummary",
               ".pybuilder/",
               "target/",
               ".ipynb_checkpoints",
               "profile_default/",
               "ipython_config.py",
               ".python-version",
               "celerybeat-schedule",
               "celerybeat.pid",
               "*.sage.py",
               ".env",
               ".venv",
               "env/",
               "venv/",
               "ENV/",
               "env.bak/",
               "venv.bak/",
               ".spyderproject",
               ".spyproject",
               ".ropeproject",
               "/site",
               ".mypy_cache/",
               ".dmypy.json",
               "dmypy.json",
               ".pyre/",
               ".pytype/",
               "cython_debug/",
               "*profraw",
               "*/_version.py",
               ".vscode/",
               ".idea/",
               ".DS_Store",
               ".Trash-1000/",
               ".pixi"
            ],
            "path": ".gitignore",
            "summary": "Main `.gitignore` file for the repository.",
            "title": "Main"
         }
      },
      "has_discussions": true,
      "has_issues": true,
      "has_projects": false,
      "has_wiki": false,
      "homepage": "https://pypackit.repodynamics.com",
      "id": 640622662,
      "name": "PyPackIT",
      "node_id": "R_kgDOJi8gRg",
      "owner": "RepoDynamics",
      "private_vulnerability_reporting": true,
      "secret_scanning": true,
      "secret_scanning_push_protection": true,
      "topics": [
         "automation",
         "cloud-native-development",
         "continuous-integration",
         "continuous-delivery",
         "continuous-deployment",
         "continuous-testing",
         "continuous-refactoring",
         "continuous-configuration-automation",
         "continuous-software-engineering",
         "devops",
         "infrastructure-as-code",
         "agile",
         "dynamic-project-management",
         "template-repository",
         "python-package-skeleton",
         "sphinx-website",
         "testing-infrastructure",
         "fair-software",
         "github-actions",
         "bot"
      ],
      "url": {
         "actions": {
            "home": "https://github.com/RepoDynamics/PyPackIT/actions"
         },
         "blob": "https://github.com/RepoDynamics/PyPackIT/blob/main",
         "commits": {
            "home": "https://github.com/RepoDynamics/PyPackIT/commits"
         },
         "deployments": {
            "home": "https://github.com/RepoDynamics/PyPackIT/deployments"
         },
         "discussions": {
            "home": "https://github.com/RepoDynamics/PyPackIT/discussions",
            "new": {
               "branding": "https://github.com/RepoDynamics/PyPackIT/discussions/new?category=branding",
               "bug-report": "https://github.com/RepoDynamics/PyPackIT/discussions/new?category=bug-report",
               "installation": "https://github.com/RepoDynamics/PyPackIT/discussions/new?category=installation",
               "new-features": "https://github.com/RepoDynamics/PyPackIT/discussions/new?category=new-features",
               "release": "https://github.com/RepoDynamics/PyPackIT/discussions/new?category=release",
               "testimonials": "https://github.com/RepoDynamics/PyPackIT/discussions/new?category=testimonials",
               "usage": "https://github.com/RepoDynamics/PyPackIT/discussions/new?category=usage"
            }
         },
         "home": "https://github.com/RepoDynamics/PyPackIT",
         "issues": {
            "chooser": "https://github.com/RepoDynamics/PyPackIT/issues/new/choose",
            "home": "https://github.com/RepoDynamics/PyPackIT/issues",
            "new": {
               "chore": "https://github.com/RepoDynamics/PyPackIT/issues/new?template=27_chore.yaml",
               "ci": "https://github.com/RepoDynamics/PyPackIT/issues/new?template=26_ci.yaml",
               "config": "https://github.com/RepoDynamics/PyPackIT/issues/new?template=25_config.yaml",
               "docs_change": "https://github.com/RepoDynamics/PyPackIT/issues/new?template=13_docs_change.yaml",
               "docs_feat": "https://github.com/RepoDynamics/PyPackIT/issues/new?template=12_docs_feat.yaml",
               "docs_fix": "https://github.com/RepoDynamics/PyPackIT/issues/new?template=11_docs_fix.yaml",
               "pkg_api_change": "https://github.com/RepoDynamics/PyPackIT/issues/new?template=08_pkg_api_change.yaml",
               "pkg_api_feat": "https://github.com/RepoDynamics/PyPackIT/issues/new?template=05_pkg_api_feat.yaml",
               "pkg_api_fix": "https://github.com/RepoDynamics/PyPackIT/issues/new?template=01_pkg_api_fix.yaml",
               "pkg_build_fix": "https://github.com/RepoDynamics/PyPackIT/issues/new?template=04_pkg_build_fix.yaml",
               "pkg_cli_change": "https://github.com/RepoDynamics/PyPackIT/issues/new?template=09_pkg_cli_change.yaml",
               "pkg_cli_feat": "https://github.com/RepoDynamics/PyPackIT/issues/new?template=06_pkg_cli_feat.yaml",
               "pkg_cli_fix": "https://github.com/RepoDynamics/PyPackIT/issues/new?template=02_pkg_cli_fix.yaml",
               "pkg_gui_change": "https://github.com/RepoDynamics/PyPackIT/issues/new?template=10_pkg_gui_change.yaml",
               "pkg_gui_feat": "https://github.com/RepoDynamics/PyPackIT/issues/new?template=07_pkg_gui_feat.yaml",
               "pkg_gui_fix": "https://github.com/RepoDynamics/PyPackIT/issues/new?template=03_pkg_gui_fix.yaml",
               "refactor": "https://github.com/RepoDynamics/PyPackIT/issues/new?template=24_refactor.yaml",
               "test_api_change": "https://github.com/RepoDynamics/PyPackIT/issues/new?template=21_test_api_change.yaml",
               "test_api_feat": "https://github.com/RepoDynamics/PyPackIT/issues/new?template=18_test_api_feat.yaml",
               "test_api_fix": "https://github.com/RepoDynamics/PyPackIT/issues/new?template=14_test_api_fix.yaml",
               "test_build_fix": "https://github.com/RepoDynamics/PyPackIT/issues/new?template=17_test_build_fix.yaml",
               "test_cli_change": "https://github.com/RepoDynamics/PyPackIT/issues/new?template=22_test_cli_change.yaml",
               "test_cli_feat": "https://github.com/RepoDynamics/PyPackIT/issues/new?template=19_test_cli_feat.yaml",
               "test_cli_fix": "https://github.com/RepoDynamics/PyPackIT/issues/new?template=15_test_cli_fix.yaml",
               "test_gui_change": "https://github.com/RepoDynamics/PyPackIT/issues/new?template=23_test_gui_change.yaml",
               "test_gui_feat": "https://github.com/RepoDynamics/PyPackIT/issues/new?template=20_test_gui_feat.yaml",
               "test_gui_fix": "https://github.com/RepoDynamics/PyPackIT/issues/new?template=16_test_gui_fix.yaml"
            }
         },
         "pulls": {
            "home": "https://github.com/RepoDynamics/PyPackIT/pulls"
         },
         "raw": "https://raw.githubusercontent.com/RepoDynamics/PyPackIT/main",
         "releases": {
            "home": "https://github.com/RepoDynamics/PyPackIT/releases"
         },
         "security": {
            "advisories": "https://github.com/RepoDynamics/PyPackIT/security/advisories",
            "home": "https://github.com/RepoDynamics/PyPackIT/security",
            "new_advisory": "https://github.com/RepoDynamics/PyPackIT/security/advisories/new"
         },
         "tree": "https://github.com/RepoDynamics/PyPackIT/tree/main"
      },
      "vulnerability_alerts": true
   },
   "role": {
      "author": {
         "abbreviation": "AUT",
         "assignment": {
            "pull": ".*"
         },
         "description": "Responsible for creating the project and its content.\n",
         "title": "Author",
         "type": "Author"
      },
      "coc": {
         "abbreviation": "COC",
         "description": "Responsible for ensuring that the project's code of conduct is enforced.\n",
         "title": "Code of Conduct Supervisor",
         "type": "ProjectMember"
      },
      "contact": {
         "abbreviation": "CNT",
         "assignment": {
            "discussion": ".*"
         },
         "description": "Responsible for communication with project users and contributors.\n",
         "title": "Contact Person",
         "type": "ContactPerson"
      },
      "manager": {
         "abbreviation": "MGR",
         "assignment": {
            "issue": ".*",
            "review": ".*"
         },
         "description": "Responsible for maintaining the project and its resources.\n",
         "title": "Project Manager",
         "type": "ProjectManager"
      },
      "security": {
         "abbreviation": "SEC",
         "description": "Responsible for ensuring the security of the project and\nhandling security-related issues.\n",
         "title": "Security Adviser",
         "type": "ProjectMember"
      }
   },
   "tag": {
      "version": {
         "message": "Release Version {{ version }}",
         "prefix": "ver/"
      }
   },
   "team": {
      "aariam": {
         "active": true,
         "affiliation": "Freie Universit\u00e4t Berlin (FUB)",
         "avatar": "https://avatars.githubusercontent.com/u/80158628?v=4",
         "bio": "Studying M.Sc. Computational Sciences and M.Sc. Chemistry, and working as teaching assistant in theoretical chemistry at FUB.",
         "city": "Berlin",
         "email": {
            "id": "armiariam@gmail.com",
            "url": "mailto:armiariam@gmail.com"
         },
         "github": {
            "id": "AAriam",
            "node_id": "MDQ6VXNlcjgwMTU4NjI4",
            "rest_id": 80158628,
            "url": "https://github.com/AAriam"
         },
         "linkedin": {
            "id": "armin-ariamajd",
            "url": "https://linkedin.com/in/armin-ariamajd"
         },
         "name": {
            "first": "Armin",
            "full": "Armin Ariamajd",
            "full_inverted": "Ariamajd, Armin",
            "last": "Ariamajd"
         },
         "orcid": {
            "id": "0000-0003-1563-6987",
            "url": "https://orcid.org/0000-0003-1563-6987"
         },
         "researchgate": {
            "id": "Armin-Ariamajd",
            "url": "https://researchgate.net/profile/Armin-Ariamajd"
         },
         "role": {
            "author": 1,
            "coc": 1,
            "contact": 1,
            "manager": 1,
            "security": 1
         },
         "twitter": {
            "id": "Al___Chemist",
            "url": "https://twitter.com/Al___Chemist"
         }
      },
      "owner": {
         "active": true,
         "avatar": "https://avatars.githubusercontent.com/u/139513484?v=4",
         "bio": "Dynamic repositories",
         "email": {
            "id": "contact@repodynamics.com",
            "url": "mailto:contact@repodynamics.com"
         },
         "github": {
            "id": "RepoDynamics",
            "node_id": "O_kgDOCFDOjA",
            "rest_id": 139513484,
            "url": "https://github.com/RepoDynamics"
         },
         "name": {
            "full": "RepoDynamics",
            "full_inverted": "RepoDynamics",
            "legal": "RepoDynamics"
         },
         "twitter": {
            "id": "Al___Chemist",
            "url": "https://twitter.com/Al___Chemist"
         },
         "website": "https://repodynamics.com"
      }
   },
   "theme": {
      "badge": {
         "color": {
            "blue": "#0B3C75",
            "green": "#00802B",
            "grey": "#494949",
            "orange": "#D93402",
            "red": "#AF1F10"
         },
         "height": "23px",
         "separator": 2,
         "style": "flat-square"
      },
      "color": {
         "accent": {
            "dark": "rgb(69 155 36)",
            "light": "rgb(19 84 0)"
         },
         "accent-bg": {
            "dark": "hsl(308 59 17)",
            "light": "hsl(307 64 92)"
         },
         "attention": {
            "dark": "hsl(25 100 64)",
            "light": "hsl(24 93 50)"
         },
         "attention-bg": {
            "dark": "hsl(24 96 20)",
            "light": "hsl(29 74 89)"
         },
         "background": {
            "dark": "hsl(216 20 10)",
            "light": "hsl(0 0 100)"
         },
         "blockquote-notch": {
            "dark": "hsl(215 11 65)",
            "light": "hsl(215 12 46)"
         },
         "border": {
            "dark": "hsl(216 20 35)",
            "light": "hsl(213 11 84)"
         },
         "border-muted": {
            "dark": "hsl(216 20 20)",
            "light": "rgba(23 23 26 / 0.2)"
         },
         "danger": {
            "dark": "hsl(352 66% 72)",
            "light": "hsl(351 68 51)"
         },
         "danger-bg": {
            "dark": "hsl(350 64 19)",
            "light": "hsl(353 67 93)"
         },
         "dark": {
            "dark": "hsl(218 19 16)",
            "light": "hsl(218 19 16)"
         },
         "dark-bg": {
            "dark": "hsl(218 19 16)",
            "light": "hsl(218 19 16)"
         },
         "heading": {
            "dark": "rgb(28 170 0)",
            "light": "rgb(0 85 0)"
         },
         "info": {
            "dark": "hsl(219 82 71)",
            "light": "hsl(219 82 53)"
         },
         "info-bg": {
            "dark": "hsl(219 88 19)",
            "light": "hsl(219 84 93)"
         },
         "inline-code": {
            "dark": "hsl(307 65 87)",
            "light": "hsl(308 59 36)"
         },
         "inline-code-links": {
            "dark": "hsl(189 54 51)",
            "light": "hsl(189 86 23)"
         },
         "light": {
            "dark": "hsl(210 9 96)",
            "light": "hsl(210 9 96)"
         },
         "light-bg": {
            "dark": "hsl(210 9 67)",
            "light": "hsl(210 9 97)"
         },
         "link": {
            "dark": "rgb(28 170 0)",
            "light": "rgb(0 85 0)"
         },
         "link-hover": {
            "dark": "rgb(175 138 0)",
            "light": "rgb(60 85 0)"
         },
         "muted": {
            "dark": "hsl(210 9 96)",
            "light": "hsl(216 20 20)"
         },
         "muted-bg": {
            "dark": "hsl(216 20 14)",
            "light": "hsl(216 20 44)"
         },
         "on-background": {
            "dark": "hsl(218 19 16)",
            "light": "hsl(0 0 100)"
         },
         "on-surface": {
            "dark": "hsl(210 9 96)",
            "light": "hsl(218 19 16)"
         },
         "primary": {
            "dark": "rgb(28 170 0)",
            "light": "rgb(0 85 0)"
         },
         "primary-bg": {
            "dark": "hsl(189 85 11)",
            "light": "hsl(189 54 88)"
         },
         "secondary": {
            "dark": "rgb(175 138 0)",
            "light": "rgb(60 85 0)"
         },
         "secondary-bg": {
            "dark": "hsl(262 58 24)",
            "light": "hsl(267 100 89)"
         },
         "shadow": {
            "dark": "rgba(0 0 0 / 0.1)",
            "light": "rgba(0 0 0 / 0.1)"
         },
         "success": {
            "dark": "hsl(149 36 54)",
            "light": "hsl(149 100 26)"
         },
         "success-bg": {
            "dark": "hsl(149 100 9)",
            "light": "hsl(150 37 88)"
         },
         "surface": {
            "dark": "hsl(216 20 20)",
            "light": "hsl(210 9 96)"
         },
         "table": {
            "dark": "hsl(0 0 100)",
            "light": "hsl(216 20 10)"
         },
         "table-heading-bg": {
            "dark": "hsl(216 20 20)",
            "light": "hsl(210 9 96)"
         },
         "table-inner-border": {
            "dark": "hsl(215 19 26)",
            "light": "hsl(216 11 91)"
         },
         "table-outer-border": {
            "dark": "hsl(216 20 20)",
            "light": "hsl(210 9 96)"
         },
         "table-row-hover-bg": {
            "dark": "hsl(262 59 35)",
            "light": "hsl(267 95 85)"
         },
         "table-row-zebra-high-bg": {
            "dark": "hsl(218 19 16)",
            "light": "hsl(0 0 100)"
         },
         "table-row-zebra-low-bg": {
            "dark": "hsl(216 20 20)",
            "light": "hsl(210 9 96)"
         },
         "target": {
            "dark": "hsl(53 93 21)",
            "light": "hsl(37 80 77)"
         },
         "text-base": {
            "dark": "hsl(208 18 84)",
            "light": "hsl(218 19 16)"
         },
         "text-muted": {
            "dark": "hsl(215 11 65)",
            "light": "hsl(216 20 35)"
         },
         "warning": {
            "dark": "hsl(25 100 64)",
            "light": "hsl(24 93 50)"
         },
         "warning-bg": {
            "dark": "hsl(24 96 20)",
            "light": "hsl(29 74 89)"
         }
      },
      "icon": {
         "api": "\ud83d\udda5",
         "change": "\ud83d\udca5",
         "chore": "\u267b\ufe0f",
         "ci": "\ud83e\udd16\ufe0f",
         "cli": "\u2328\ufe0f",
         "config": "\ud83d\udee0\ufe0f",
         "docs": "\ud83d\udcda",
         "feat": "\u2728",
         "fix": "\ud83d\udc1e",
         "gui": "\ud83d\uddb1",
         "pkg": "\ud83d\udce6",
         "post": "\ud83d\udceb",
         "refactor": "\ud83e\uddf9\ufe0f",
         "repo": "\ud83e\uddf0",
         "setup": "\u2699\ufe0f",
         "test": "\ud83e\uddea"
      }
   },
   "title": "Cloud-Native Continuous Software Engineering Automation for Python Packages on GitHub",
   "web": {
      "announcement": {
         "path": "docs/website/announcement.html",
         "retention_days": 30,
         "url": "https://raw.githubusercontent.com/RepoDynamics/PyPackIT/main/docs/website/announcement.html"
      },
      "css": {
         "black_to_primary_filter": {
            "cases": {
               "dark": {
                  "selector": "html[data-theme=\"dark\"] .black-svg-icon"
               },
               "light": {
                  "selector": "html[data-theme=\"light\"] .black-svg-icon"
               }
            },
            "properties": {
               "filter": {
                  "dark": "invert(41%) sepia(94%) saturate(1043%) hue-rotate(77deg) brightness(94%) contrast(101%)",
                  "light": "invert(18%) sepia(59%) saturate(2563%) hue-rotate(102deg) brightness(98%) contrast(109%)"
               }
            }
         },
         "theme_colors": {
            "cases": {
               "dark": {
                  "prefix": "--pst-color-",
                  "selector": "html[data-theme=\"dark\"]"
               },
               "light": {
                  "prefix": "--pst-color-",
                  "selector": "html[data-theme=\"light\"]"
               }
            },
            "properties": {
               "accent": {
                  "dark": "rgb(69 155 36)",
                  "light": "rgb(19 84 0)"
               },
               "accent-bg": {
                  "dark": "hsl(308 59 17)",
                  "light": "hsl(307 64 92)"
               },
               "attention": {
                  "dark": "hsl(25 100 64)",
                  "light": "hsl(24 93 50)"
               },
               "attention-bg": {
                  "dark": "hsl(24 96 20)",
                  "light": "hsl(29 74 89)"
               },
               "background": {
                  "dark": "hsl(216 20 10)",
                  "light": "hsl(0 0 100)"
               },
               "blockquote-notch": {
                  "dark": "hsl(215 11 65)",
                  "light": "hsl(215 12 46)"
               },
               "border": {
                  "dark": "hsl(216 20 35)",
                  "light": "hsl(213 11 84)"
               },
               "border-muted": {
                  "dark": "hsl(216 20 20)",
                  "light": "rgba(23 23 26 / 0.2)"
               },
               "danger": {
                  "dark": "hsl(352 66% 72)",
                  "light": "hsl(351 68 51)"
               },
               "danger-bg": {
                  "dark": "hsl(350 64 19)",
                  "light": "hsl(353 67 93)"
               },
               "dark": {
                  "dark": "hsl(218 19 16)",
                  "light": "hsl(218 19 16)"
               },
               "dark-bg": {
                  "dark": "hsl(218 19 16)",
                  "light": "hsl(218 19 16)"
               },
               "heading": {
                  "dark": "rgb(28 170 0)",
                  "light": "rgb(0 85 0)"
               },
               "info": {
                  "dark": "hsl(219 82 71)",
                  "light": "hsl(219 82 53)"
               },
               "info-bg": {
                  "dark": "hsl(219 88 19)",
                  "light": "hsl(219 84 93)"
               },
               "inline-code": {
                  "dark": "hsl(307 65 87)",
                  "light": "hsl(308 59 36)"
               },
               "inline-code-links": {
                  "dark": "hsl(189 54 51)",
                  "light": "hsl(189 86 23)"
               },
               "light": {
                  "dark": "hsl(210 9 96)",
                  "light": "hsl(210 9 96)"
               },
               "light-bg": {
                  "dark": "hsl(210 9 67)",
                  "light": "hsl(210 9 97)"
               },
               "link": {
                  "dark": "rgb(28 170 0)",
                  "light": "rgb(0 85 0)"
               },
               "link-hover": {
                  "dark": "rgb(175 138 0)",
                  "light": "rgb(60 85 0)"
               },
               "muted": {
                  "dark": "hsl(210 9 96)",
                  "light": "hsl(216 20 20)"
               },
               "muted-bg": {
                  "dark": "hsl(216 20 14)",
                  "light": "hsl(216 20 44)"
               },
               "on-background": {
                  "dark": "hsl(218 19 16)",
                  "light": "hsl(0 0 100)"
               },
               "on-surface": {
                  "dark": "hsl(210 9 96)",
                  "light": "hsl(218 19 16)"
               },
               "primary": {
                  "dark": "rgb(28 170 0)",
                  "light": "rgb(0 85 0)"
               },
               "primary-bg": {
                  "dark": "hsl(189 85 11)",
                  "light": "hsl(189 54 88)"
               },
               "secondary": {
                  "dark": "rgb(175 138 0)",
                  "light": "rgb(60 85 0)"
               },
               "secondary-bg": {
                  "dark": "hsl(262 58 24)",
                  "light": "hsl(267 100 89)"
               },
               "shadow": {
                  "dark": "rgba(0 0 0 / 0.1)",
                  "light": "rgba(0 0 0 / 0.1)"
               },
               "success": {
                  "dark": "hsl(149 36 54)",
                  "light": "hsl(149 100 26)"
               },
               "success-bg": {
                  "dark": "hsl(149 100 9)",
                  "light": "hsl(150 37 88)"
               },
               "surface": {
                  "dark": "hsl(216 20 20)",
                  "light": "hsl(210 9 96)"
               },
               "table": {
                  "dark": "hsl(0 0 100)",
                  "light": "hsl(216 20 10)"
               },
               "table-heading-bg": {
                  "dark": "hsl(216 20 20)",
                  "light": "hsl(210 9 96)"
               },
               "table-inner-border": {
                  "dark": "hsl(215 19 26)",
                  "light": "hsl(216 11 91)"
               },
               "table-outer-border": {
                  "dark": "hsl(216 20 20)",
                  "light": "hsl(210 9 96)"
               },
               "table-row-hover-bg": {
                  "dark": "hsl(262 59 35)",
                  "light": "hsl(267 95 85)"
               },
               "table-row-zebra-high-bg": {
                  "dark": "hsl(218 19 16)",
                  "light": "hsl(0 0 100)"
               },
               "table-row-zebra-low-bg": {
                  "dark": "hsl(216 20 20)",
                  "light": "hsl(210 9 96)"
               },
               "target": {
                  "dark": "hsl(53 93 21)",
                  "light": "hsl(37 80 77)"
               },
               "text-base": {
                  "dark": "hsl(208 18 84)",
                  "light": "hsl(218 19 16)"
               },
               "text-muted": {
                  "dark": "hsl(215 11 65)",
                  "light": "hsl(216 20 35)"
               },
               "warning": {
                  "dark": "hsl(25 100 64)",
                  "light": "hsl(24 93 50)"
               },
               "warning-bg": {
                  "dark": "hsl(24 96 20)",
                  "light": "hsl(29 74 89)"
               }
            }
         },
         "theme_font_sizes": {
            "prefix": "--pst-font-size-",
            "properties": {
               "base": "1rem",
               "h1": "2.74rem",
               "h2": "2.28rem",
               "h3": "1.90rem",
               "h4": "1.58rem",
               "h5": "1.32rem",
               "h6": "1.10rem",
               "milli": "0.9rem"
            },
            "selector": "html"
         },
         "theme_header_color": {
            "cases": {
               "dark": {
                  "selector": "html[data-theme=\"dark\"] .bd-header"
               },
               "light": {
                  "selector": "html[data-theme=\"light\"] .bd-header"
               }
            },
            "properties": {
               "background-color": {
                  "dark": "black !important",
                  "light": "white !important"
               }
            }
         }
      },
      "file": {
         "icon": {
            "path": "docs/website/source/_media/logo/favicon.svg",
            "rel_path": "_media/logo/favicon.svg",
            "url": "https://raw.githubusercontent.com/RepoDynamics/PyPackIT/main/docs/website/source/_media/logo/favicon.svg"
         },
         "logo_full_dark": {
            "path": "docs/website/source/_media/logo/full_dark.svg",
            "rel_path": "_media/logo/full_dark.svg",
            "url": "https://raw.githubusercontent.com/RepoDynamics/PyPackIT/main/docs/website/source/_media/logo/full_dark.svg"
         },
         "logo_full_light": {
            "path": "docs/website/source/_media/logo/full_light.svg",
            "rel_path": "_media/logo/full_light.svg",
            "url": "https://raw.githubusercontent.com/RepoDynamics/PyPackIT/main/docs/website/source/_media/logo/full_light.svg"
         },
         "logo_full_raster": {
            "path": "docs/website/source/_media/logo/full_light.png",
            "rel_path": "_media/logo/full_light.png",
            "url": "https://raw.githubusercontent.com/RepoDynamics/PyPackIT/main/docs/website/source/_media/logo/full_light.png"
         },
         "logo_simple_dark": {
            "path": "docs/website/source/_media/logo/simple_dark.svg",
            "rel_path": "_media/logo/simple_dark.svg",
            "url": "https://raw.githubusercontent.com/RepoDynamics/PyPackIT/main/docs/website/source/_media/logo/simple_dark.svg"
         },
         "logo_simple_light": {
            "path": "docs/website/source/_media/logo/simple_light.svg",
            "rel_path": "_media/logo/simple_light.svg",
            "url": "https://raw.githubusercontent.com/RepoDynamics/PyPackIT/main/docs/website/source/_media/logo/simple_light.svg"
         },
         "logo_simple_raster": {
            "path": "docs/website/source/_media/logo/simple_light.png",
            "rel_path": "_media/logo/simple_light.png",
            "url": "https://raw.githubusercontent.com/RepoDynamics/PyPackIT/main/docs/website/source/_media/logo/simple_light.png"
         }
      },
      "page": {
         "about": {
            "path": "about",
            "title": "About",
            "url": "https://pypackit.repodynamics.com/about"
         },
         "api": {
            "path": "api",
            "title": "API Reference",
            "url": "https://pypackit.repodynamics.com/api"
         },
         "blog": {
            "path": "news",
            "title": "News",
            "url": "https://pypackit.repodynamics.com/news"
         },
         "blog_category_release": {
            "path": "news/category/release",
            "title": "Release",
            "url": "https://pypackit.repodynamics.com/news/category/release"
         },
         "contact": {
            "path": "about/contact",
            "title": "Contact",
            "url": "https://pypackit.repodynamics.com/about/contact"
         },
         "contribute": {
            "path": "contribute",
            "title": "Contribution Guide",
            "url": "https://pypackit.repodynamics.com/contribute"
         },
         "help": {
            "path": "help",
            "title": "Support Guide",
            "url": "https://pypackit.repodynamics.com/help"
         },
         "install": {
            "path": "manual/install",
            "title": "Installation",
            "url": "https://pypackit.repodynamics.com/manual/install"
         },
         "intro": {
            "path": "intro",
            "title": "Introduction",
            "url": "https://pypackit.repodynamics.com/intro"
         },
         "license": {
            "path": "about/license",
            "title": "License",
            "url": "https://pypackit.repodynamics.com/about/license"
         },
         "manual": {
            "path": "manual",
            "title": "User Manual",
            "url": "https://pypackit.repodynamics.com/manual"
         },
         "overview": {
            "path": "intro/overview",
            "title": "Overview",
            "url": "https://pypackit.repodynamics.com/intro/overview"
         }
      },
      "path": {
         "build": "docs/website/.build",
         "logo_dir": "_media/logo",
         "root": "docs/website",
         "source": "docs/website/source",
         "source_rel": "source",
         "to_root": "../../../"
      },
      "readthedocs": {
         "config_file": {
            "content": {
               "build": {
                  "jobs": {
                     "post_checkout": [
                        "git fetch --unshallow"
                     ]
                  },
                  "os": "ubuntu-22.04",
                  "tools": {
                     "python": "mambaforge-4.10"
                  }
               },
               "conda": {
                  "environment": ".devcontainer/environment/conda/website.yaml"
               },
               "formats": "all",
               "python": {
                  "install": [
                     {
                        "method": "pip",
                        "path": "pkg"
                     }
                  ]
               },
               "sphinx": {
                  "builder": "dirhtml",
                  "configuration": "docs/website/source/conf.py",
                  "fail_on_warning": false
               },
               "version": 2
            },
            "path": ".readthedocs.yaml"
         },
         "language": "en",
         "name": "PyPackIT",
         "platform": "community",
         "version_scheme": {
            "single_version": false,
            "translation": false
         }
      },
      "url": {
         "base": "https://pypackit.repodynamics.com",
         "custom": {
            "enforce_https": true,
            "name": "pypackit.repodynamics.com"
         },
         "home": "https://pypackit.repodynamics.com"
      }
   },
   "workflow": {
      "binder": {
         "action": {
            "build": "auto",
            "deploy": "auto"
         },
         "artifact": {
            "dockerfile": {
               "include_hidden": false,
               "name": "Dockerfile - v{{ version }}"
            }
         },
         "env": {
            "name": "GitHub Container Registry",
            "url": "https://github.com/RepoDynamics/PyPackIT/pkgs/container/PyPackIT"
         },
         "image": {
            "label": {
               "org.opencontainers.image.created": "{{ now.isoformat() }}",
               "org.opencontainers.image.description": "Cloud-Native Continuous Software Engineering Automation for Python Packages on GitHub",
               "org.opencontainers.image.licenses": "AGPL-3.0-or-later",
               "org.opencontainers.image.source": "https://github.com/RepoDynamics/PyPackIT",
               "org.opencontainers.image.title": "PyPackIT {{ version }}",
               "org.opencontainers.image.version": "{{ version }}"
            },
            "test_script": "PyPackIT-TestSuite"
         },
         "index": {
            "name": "PyPackIT",
            "namespace": "RepoDynamics",
            "registry": "ghcr.io",
            "url": {
               "home": "https://github.com/RepoDynamics/PyPackIT/pkgs/container/PyPackIT"
            },
            "username": "RepoDynamics"
         },
         "name": "Docker (v{{ version }})",
         "path": {
            "config": ".devcontainer/config/binder",
            "dockerfile": ".binder"
         }
      },
      "build": {
         "action": "auto",
         "artifact": {
            "conda": {
               "include_hidden": false,
               "merge": {
                  "name": "{{ pkg.name }} v{{ version }} - conda",
                  "pattern": "{{ pkg.name }} v{{ version }} - conda - *"
               },
               "name": "{{ pkg.name }} v{{ version }} - conda - {{ python }} - {{ platform }}"
            },
            "readme": {
               "include_hidden": false,
               "name": "{{ pkg.name }} v{{ version }} - README"
            },
            "sdist": {
               "include_hidden": false,
               "name": "{{ pkg.name }} v{{ version }} - sdist"
            },
            "wheel": {
               "include_hidden": false,
               "merge": {
                  "name": "{{ pkg.name }} v{{ version }} - wheels",
                  "pattern": "{{ pkg.name }} v{{ version }} - wheel - *"
               },
               "name": "{{ pkg.name }} v{{ version }} - wheel - {{ python }} - {{ platform }}"
            }
         },
         "name": "Build ({{ pkg.name }} v{{ version }})"
      },
      "lint": {
         "action": "auto",
         "name": "Lint ({{ pkg.name }} v{{ version }})"
      },
      "publish": {
         "anaconda": {
            "action": {
               "pkg": "auto",
               "test": "auto"
            },
            "env": {
               "name": "Anaconda ({{ pkg.name }})",
               "url": "https://anaconda.org/RepoDynamics/{{ pkg.name }}/files?version={{ version }}"
            },
            "index": {
               "channel": "RepoDynamics"
            },
            "name": "Publish (Anaconda)",
            "task_name": "{{ pkg.name }} v{{ version }}"
         },
         "github": {
            "action": "auto",
            "asset": {
               "citation": {
                  "files": [
                     {
                        "artifact": false,
                        "destination": ".",
                        "source": "CITATION.cff"
                     }
                  ],
                  "label": "Citation",
                  "media_type": "application/yaml",
                  "name": "pypackit-{{ version }}-citation.cff"
               },
               "conda": {
                  "files": [
                     {
                        "artifact": true,
                        "destination": ".",
                        "pattern": "^[^/]+ - conda/.+\\.conda$",
                        "source": "."
                     }
                  ],
                  "format": "zip",
                  "label": "Conda Distributions",
                  "name": "pypackit-{{ version }}-conda.zip"
               },
               "dockerfile": {
                  "files": [
                     {
                        "artifact": false,
                        "destination": ".",
                        "source": ".binder/Dockerfile"
                     }
                  ],
                  "label": "Dockerfile",
                  "media_type": "text/plain",
                  "name": "Dockerfile"
               },
               "docs": {
                  "files": [
                     {
                        "artifact": true,
                        "destination": ".",
                        "pattern": "^Website(?!.*GH-Pages)[^/]*$",
                        "source": "."
                     }
                  ],
                  "format": "zip",
                  "label": "Documentation",
                  "name": "pypackit-{{ version }}-docs.zip"
               },
               "license": {
                  "files": [
                     {
                        "artifact": false,
                        "destination": ".",
                        "pattern": "^(LICENSE|COPYING)[^/]*$",
                        "source": "."
                     }
                  ],
                  "format": "zip",
                  "label": "License",
                  "name": "pypackit-{{ version }}-license.zip"
               },
               "sdist": {
                  "files": [
                     {
                        "artifact": true,
                        "destination": ".",
                        "pattern": "^[^/]+ - sdist/[^/]+\\.tar\\.gz$",
                        "source": "."
                     }
                  ],
                  "format": "zip",
                  "label": "Source Distributions",
                  "name": "pypackit-{{ version }}-sdists.zip"
               },
               "template": {
                  "files": [
                     {
                        "artifact": false,
                        "destination": ".",
                        "source": "template"
                     },
                     {
                        "artifact": false,
                        "destination": ".github/workflows",
                        "source": ".github/workflows"
                     }
                  ],
                  "format": "zip",
                  "label": "PyPackIT",
                  "name": "pypackit-{{ version }}.zip"
               },
               "wheel": {
                  "files": [
                     {
                        "artifact": true,
                        "destination": ".",
                        "pattern": "^[^/]+ - wheels/[^/]+\\.whl$",
                        "source": "."
                     }
                  ],
                  "format": "zip",
                  "label": "Binary Distributions",
                  "name": "pypackit-{{ version }}-wheels.zip"
               }
            },
            "env": {
               "name": "GitHub Release",
               "url": "https://github.com/RepoDynamics/PyPackIT/deployments"
            },
            "name": "Release",
            "release": {
               "body": {
                  "body": [
                     {
                        "class": "badges",
                        "color": "#0B3C75",
                        "height": "23px",
                        "items": [
                           {
                              "args": {
                                 "message": "0.0.0"
                              },
                              "color": "rgb(60 85 0)",
                              "color_dark": "rgb(175 138 0)",
                              "label": "PyPackIT",
                              "label_color": "rgb(0 85 0)",
                              "label_color_dark": "rgb(28 170 0)",
                              "logo": "docs/website/source/_media/logo/favicon.svg",
                              "logo_type": "file"
                           },
                           {
                              "args": {
                                 "message": "major"
                              },
                              "color": "#AF1F10",
                              "label": "\ud83d\udca5\u2002Release Type"
                           },
                           {
                              "args": {
                                 "message": "2025-04-14"
                              },
                              "label": "\ud83d\uddd3\u2002Release Date"
                           },
                           {
                              "args": {
                                 "message": "10.5281/zenodo.14359839"
                              },
                              "color": "#1682D4",
                              "label": "DOI",
                              "link": "https://zenodo.org/uploads/14359839",
                              "logo": "zenodo",
                              "logo_color": "#1682D4"
                           },
                           {
                              "args": {
                                 "message": "PyPackIT == 0.0.0"
                              },
                              "color": "#3775A9",
                              "label": "pip install",
                              "link": "https://pypi.org/project/PyPackIT",
                              "logo": "docs/website/source/_media/logo_ext/pypi.png",
                              "logo_media_type": "png",
                              "logo_type": "file"
                           },
                           {
                              "args": {
                                 "message": "PyPackIT == 0.0.0 -c RepoDynamics"
                              },
                              "color": "#44A833",
                              "label": "conda install",
                              "link": "https://anaconda.org/repodynamics/pypackit",
                              "logo": "anaconda",
                              "logo_color": "#44A833",
                              "logo_type": "name"
                           },
                           {
                              "args": {
                                 "message": "ghcr.io/repodynamics/pypackit:0.0.0"
                              },
                              "color": "#2496ED",
                              "label": "docker pull",
                              "link": "https://github.com/RepoDynamics/PyPackIT/pkgs/container/PyPackIT",
                              "logo": "docker",
                              "logo_color": "#2496ED",
                              "logo_type": "name"
                           },
                           {
                              "args": {
                                 "message": "ver/0.0.0"
                              },
                              "color": "#181717",
                              "label": "git checkout",
                              "link": "https://github.com/RepoDynamics/PyPackIT/releases",
                              "logo": "github",
                              "logo_type": "name"
                           },
                           {
                              "args": {
                                 "message": "try online",
                                 "ref": "ver/0.0.0",
                                 "repo": "PyPackIT",
                                 "user": "RepoDynamics"
                              },
                              "color": "#579ACA",
                              "endpoint": "github",
                              "label": "Binder",
                              "service": "binder"
                           }
                        ],
                        "label_color": "#494949",
                        "separator": 2,
                        "service": "static",
                        "style": "flat-square"
                     },
                     "**Project Initialization**",
                     "This is an initial emtpy release."
                  ],
                  "sections": [
                     {
                        "body": [
                           {
                              "class": "badges",
                              "color": "#0B3C75",
                              "height": "23px",
                              "items": [
                                 {
                                    "args": {
                                       "message": "10.5072/zenodo.141305"
                                    },
                                    "color": "#1682D4",
                                    "label": "DOI",
                                    "link": "https://sandbox.zenodo.org/uploads/141305",
                                    "logo": "zenodo",
                                    "logo_color": "#1682D4"
                                 }
                              ],
                              "label_color": "#494949",
                              "separator": 2,
                              "service": "static",
                              "style": "flat-square"
                           }
                        ],
                        "heading": "Latest Developmental Release"
                     },
                     {
                        "body": [
                           [
                              {
                                 "class": "button",
                                 "color": "#494949",
                                 "height": "23px",
                                 "style": "flat-square",
                                 "text": "\u2699\ufe0f\u2002Operating System"
                              },
                              "&nbsp;",
                              {
                                 "class": "badges",
                                 "height": "23px",
                                 "items": [
                                    {
                                       "args": {
                                          "message": "any"
                                       },
                                       "color": "#00802B",
                                       "label": "Linux (x64)",
                                       "logo": "docs/website/source/_media/logo_ext/linux.png",
                                       "logo_color": null
                                    },
                                    {
                                       "args": {
                                          "message": "any"
                                       },
                                       "color": "#00802B",
                                       "label": "Linux (arm64)",
                                       "logo": "docs/website/source/_media/logo_ext/linux.png",
                                       "logo_color": null
                                    },
                                    {
                                       "args": {
                                          "message": "any"
                                       },
                                       "color": "#00802B",
                                       "label": "macOS (x64)",
                                       "logo": "apple",
                                       "logo_color": "#000000"
                                    },
                                    {
                                       "args": {
                                          "message": "any"
                                       },
                                       "color": "#00802B",
                                       "label": "macOS (arm64)",
                                       "logo": "apple",
                                       "logo_color": "#000000"
                                    },
                                    {
                                       "args": {
                                          "message": "any"
                                       },
                                       "color": "#00802B",
                                       "label": "Windows (x64)",
                                       "logo": "https://upload.wikimedia.org/wikipedia/commons/4/44/Microsoft_logo.svg",
                                       "logo_color": null
                                    }
                                 ],
                                 "label_color": "#494949",
                                 "separator": 1,
                                 "service": "static",
                                 "style": "flat-square"
                              }
                           ],
                           [
                              {
                                 "args": {
                                    "message": "Python"
                                 },
                                 "class": "badge",
                                 "color": "#494949",
                                 "height": "23px",
                                 "label_color": "#494949",
                                 "logo": "docs/website/source/_media/logo_ext/python.svg",
                                 "logo_media_type": "svg+xml",
                                 "logo_type": "file",
                                 "service": "static",
                                 "style": "flat-square"
                              },
                              "&nbsp;",
                              {
                                 "class": "badges",
                                 "color": "#0B3C75",
                                 "height": "23px",
                                 "items": [
                                    {
                                       "args": {
                                          "message": "3.10 | 3.11 | 3.12 | 3.13"
                                       },
                                       "label": "Versions"
                                    },
                                    {
                                       "args": {
                                          "message": "any"
                                       },
                                       "color": "#00802B",
                                       "label": "Implementation"
                                    }
                                 ],
                                 "label_color": "#494949",
                                 "separator": 1,
                                 "service": "static",
                                 "style": "flat-square"
                              }
                           ],
                           [
                              {
                                 "class": "button",
                                 "color": "#494949",
                                 "height": "23px",
                                 "style": "flat-square",
                                 "text": "\ud83d\udce6\u2002Dependencies"
                              },
                              "&nbsp;",
                              {
                                 "class": "badges",
                                 "height": "23px",
                                 "items": [
                                    {
                                       "args": {
                                          "message": "any"
                                       },
                                       "color": "#00802B",
                                       "label": "pkgdata"
                                    }
                                 ],
                                 "label_color": "#494949",
                                 "separator": 1,
                                 "service": "static",
                                 "style": "flat-square"
                              }
                           ]
                        ],
                        "heading": "Requirements"
                     },
                     {
                        "body": [
                           [
                              {
                                 "class": "button",
                                 "color": "#494949",
                                 "height": "23px",
                                 "logo": "docs/website/source/_media/logo_ext/python.svg",
                                 "logo_media_type": "svg+xml",
                                 "logo_type": "file",
                                 "style": "flat-square",
                                 "text": "API"
                              },
                              "&nbsp;",
                              {
                                 "class": "badges",
                                 "color": "#0B3C75",
                                 "height": "23px",
                                 "items": [
                                    {
                                       "alt": "pypackit",
                                       "args": {
                                          "message": "pypackit"
                                       },
                                       "color": "#3776AB",
                                       "title": "Main Python API entry of the package."
                                    }
                                 ],
                                 "label": "import",
                                 "label_color": "#494949",
                                 "separator": 1,
                                 "service": "static",
                                 "style": "flat-square"
                              }
                           ],
                           [
                              {
                                 "class": "button",
                                 "color": "#494949",
                                 "height": "23px",
                                 "logo": "gnubash",
                                 "logo_color": "#4EAA25",
                                 "style": "flat-square",
                                 "text": "CLI"
                              },
                              "&nbsp;",
                              {
                                 "class": "badges",
                                 "color": "#0B3C75",
                                 "height": "23px",
                                 "items": [
                                    {
                                       "alt": "pypackit",
                                       "args": {
                                          "message": "pypackit"
                                       },
                                       "color": "#000",
                                       "title": "Main CLI entry of the package."
                                    }
                                 ],
                                 "label": "$",
                                 "label_color": "#494949",
                                 "separator": 1,
                                 "service": "static",
                                 "style": "flat-square"
                              }
                           ]
                        ],
                        "heading": "Interfaces"
                     }
                  ]
               },
               "discussion_category_name": "announcements",
               "draft": false,
               "name": "PyPackIT 0.0.0",
               "order": "version"
            },
            "task_name": "GitHub"
         },
         "pypi": {
            "action": {
               "pkg": "auto",
               "test": "auto"
            },
            "env": {
               "name": "PyPI ({{ pkg.name }})",
               "url": "https://pypi.org/project/{{ pkg.name }}/{{ version }}"
            },
            "index": {
               "url": {
                  "upload": "https://upload.pypi.org/legacy/"
               }
            },
            "name": "Publish (PyPI)",
            "task_name": "{{ pkg.name }} v{{ version }}"
         },
         "testpypi": {
            "action": {
               "pkg": "auto",
               "test": "auto"
            },
            "env": {
               "name": "TestPyPI ({{ pkg.name }})",
               "url": "https://test.pypi.org/project/{{ pkg.name }}/{{ version }}"
            },
            "index": {
               "url": {
                  "upload": "https://test.pypi.org/legacy/"
               }
            },
            "name": "Publish (TestPyPI)",
            "task_name": "{{ pkg.name }} v{{ version }}"
         },
         "zenodo": {
            "action": "auto",
            "asset": {
               "citation": {
                  "files": [
                     {
                        "artifact": false,
                        "destination": ".",
                        "source": "CITATION.cff"
                     }
                  ],
                  "label": "Citation",
                  "media_type": "application/yaml",
                  "name": "pypackit-{{ version }}-citation.cff"
               },
               "conda": {
                  "files": [
                     {
                        "artifact": true,
                        "destination": ".",
                        "pattern": "^[^/]+ - conda/.+\\.conda$",
                        "source": "."
                     }
                  ],
                  "format": "zip",
                  "label": "Conda Distributions",
                  "name": "pypackit-{{ version }}-conda.zip"
               },
               "dockerfile": {
                  "files": [
                     {
                        "artifact": false,
                        "destination": ".",
                        "source": ".binder/Dockerfile"
                     }
                  ],
                  "label": "Dockerfile",
                  "media_type": "text/plain",
                  "name": "Dockerfile"
               },
               "docs": {
                  "files": [
                     {
                        "artifact": true,
                        "destination": ".",
                        "pattern": "^Website(?!.*GH-Pages)[^/]*$",
                        "source": "."
                     }
                  ],
                  "format": "zip",
                  "label": "Documentation",
                  "name": "pypackit-{{ version }}-docs.zip"
               },
               "license": {
                  "files": [
                     {
                        "artifact": false,
                        "destination": ".",
                        "pattern": "^(LICENSE|COPYING)[^/]*$",
                        "source": "."
                     }
                  ],
                  "format": "zip",
                  "label": "License",
                  "name": "pypackit-{{ version }}-license.zip"
               },
               "sdist": {
                  "files": [
                     {
                        "artifact": true,
                        "destination": ".",
                        "pattern": "^[^/]+ - sdist/[^/]+\\.tar\\.gz$",
                        "source": "."
                     }
                  ],
                  "format": "zip",
                  "label": "Source Distributions",
                  "name": "pypackit-{{ version }}-sdists.zip"
               },
               "template": {
                  "files": [
                     {
                        "artifact": false,
                        "destination": ".",
                        "source": "template"
                     },
                     {
                        "artifact": false,
                        "destination": ".github/workflows",
                        "source": ".github/workflows"
                     }
                  ],
                  "format": "zip",
                  "label": "PyPackIT",
                  "name": "pypackit-{{ version }}.zip"
               },
               "wheel": {
                  "files": [
                     {
                        "artifact": true,
                        "destination": ".",
                        "pattern": "^[^/]+ - wheels/[^/]+\\.whl$",
                        "source": "."
                     }
                  ],
                  "format": "zip",
                  "label": "Binary Distributions",
                  "name": "pypackit-{{ version }}-wheels.zip"
               }
            },
            "env": {
               "name": "Zenodo",
               "url": "https://zenodo.org/records/{{ id }}"
            },
            "name": "Release",
            "task_name": "Zenodo"
         },
         "zenodo_sandbox": {
            "action": "auto",
            "asset": {
               "citation": {
                  "files": [
                     {
                        "artifact": false,
                        "destination": ".",
                        "source": "CITATION.cff"
                     }
                  ],
                  "label": "Citation",
                  "media_type": "application/yaml",
                  "name": "pypackit-{{ version }}-citation.cff"
               },
               "conda": {
                  "files": [
                     {
                        "artifact": true,
                        "destination": ".",
                        "pattern": "^[^/]+ - conda/.+\\.conda$",
                        "source": "."
                     }
                  ],
                  "format": "zip",
                  "label": "Conda Distributions",
                  "name": "pypackit-{{ version }}-conda.zip"
               },
               "dockerfile": {
                  "files": [
                     {
                        "artifact": false,
                        "destination": ".",
                        "source": ".binder/Dockerfile"
                     }
                  ],
                  "label": "Dockerfile",
                  "media_type": "text/plain",
                  "name": "Dockerfile"
               },
               "docs": {
                  "files": [
                     {
                        "artifact": true,
                        "destination": ".",
                        "pattern": "^Website(?!.*GH-Pages)[^/]*$",
                        "source": "."
                     }
                  ],
                  "format": "zip",
                  "label": "Documentation",
                  "name": "pypackit-{{ version }}-docs.zip"
               },
               "license": {
                  "files": [
                     {
                        "artifact": false,
                        "destination": ".",
                        "pattern": "^(LICENSE|COPYING)[^/]*$",
                        "source": "."
                     }
                  ],
                  "format": "zip",
                  "label": "License",
                  "name": "pypackit-{{ version }}-license.zip"
               },
               "sdist": {
                  "files": [
                     {
                        "artifact": true,
                        "destination": ".",
                        "pattern": "^[^/]+ - sdist/[^/]+\\.tar\\.gz$",
                        "source": "."
                     }
                  ],
                  "format": "zip",
                  "label": "Source Distributions",
                  "name": "pypackit-{{ version }}-sdists.zip"
               },
               "template": {
                  "files": [
                     {
                        "artifact": false,
                        "destination": ".",
                        "source": "template"
                     },
                     {
                        "artifact": false,
                        "destination": ".github/workflows",
                        "source": ".github/workflows"
                     }
                  ],
                  "format": "zip",
                  "label": "PyPackIT",
                  "name": "pypackit-{{ version }}.zip"
               },
               "wheel": {
                  "files": [
                     {
                        "artifact": true,
                        "destination": ".",
                        "pattern": "^[^/]+ - wheels/[^/]+\\.whl$",
                        "source": "."
                     }
                  ],
                  "format": "zip",
                  "label": "Binary Distributions",
                  "name": "pypackit-{{ version }}-wheels.zip"
               }
            },
            "env": {
               "name": "Zenodo Sandbox",
               "url": "https://sandbox.zenodo.org/records/{{ id }}"
            },
            "name": "Release",
            "task_name": "Zenodo Sandbox"
         }
      },
      "schedule": {
         "cca": {
            "branch_types": [
               "main",
               "release",
               "pre"
            ],
            "cron": "43 23 * * *",
            "job": {
               "announcement_expiry": {
                  "action": "commit"
               },
               "sync": {
                  "action": "pull"
               }
            }
         },
         "cr_ct": {
            "branch_types": [
               "main",
               "release"
            ],
            "cron": "43 6 * * 6",
            "job": {
               "lint": {
                  "action": "issue"
               },
               "refactor": {
                  "action": "pull"
               },
               "test": {
                  "action": "issue"
               }
            }
         }
      },
      "test": {
         "action": "auto",
         "artifact": {
            "report": {
               "include_hidden": false,
               "merge": {
                  "name": "Test Reports - {{ source }} - v{{ version }}",
                  "pattern": "Test Report -*"
               },
               "name": "Test Report - ",
               "path": "report"
            }
         },
         "codecov": {
            "codecov_yml_path": ".github/.codecov.yml"
         },
         "name": "Test ({{ pkg.name }} - v{{ version }})"
      },
      "web": {
         "action": {
            "build": "auto",
            "deploy": "auto"
         },
         "artifact": {
            "build": {
               "include_hidden": true,
               "name": "Website - v{{ version }}",
               "path": "docs/website/.build"
            },
            "pages": {
               "include_hidden": false,
               "name": "Website - v{{ version }} - GH-Pages",
               "path": "docs/website/.build/dirhtml"
            }
         },
         "container": {
            "command": "build-web",
            "env": {},
            "id": "main",
            "inherit_env": false,
            "name": "repodynamics/pypackit-devcontainer-main",
            "ref": "refs/heads/main"
         },
         "env": {
            "name": "GitHub Pages",
            "url": "https://pypackit.repodynamics.com"
         },
         "name": "Web (v{{ version }})"
      }
   },
   "zenodo": {
      "access_right": "open",
      "concept": {
         "doi": "10.5281/zenodo.14359838",
         "id": 14359838
      },
      "contributors": [
         {
            "id": "aariam",
            "member": true,
            "role_types": "ContactPerson"
         },
         {
            "id": "aariam",
            "member": true,
            "role_types": "ProjectManager"
         },
         {
            "id": "aariam",
            "member": true,
            "role_types": "ProjectMember"
         }
      ],
      "creators": [
         {
            "id": "aariam",
            "member": true
         }
      ],
      "custom": {
         "code:codeRepository": "https://github.com/RepoDynamics/PyPackIT",
         "code:developmentStatus": {
            "id": "active"
         },
         "code:programmingLanguage": [
            {
               "id": "python"
            }
         ]
      },
      "description": "PyPackIT [\u02c8pa\u026a\u02ccp\u00e6k\u026at] is a comprehensive <strong>cloud-based automation tool</strong> for production of <abbr title=\"Findable, Accessible, Interoperable, and Reusable\">FAIR</abbr> and professional applications on <strong>GitHub</strong>, in accordance with the latest software engineering best practices and standards. PyPackIT is a ready-to-use software suite that streamlines the initiation, configuration, development, publication, management, and maintenance of high-quality <strong>Python applications</strong>. By taking charge of repetitive tasks and automatically enforcing best practices throughout the software development life cycle, PyPackIT enables users to solely focus on the creative aspects of their projects, while improving quality and lowering production costs. Using latest tools and methodologies, PyPackIT offers a robust project infrastructure, including a build-ready Python <strong>package skeleton</strong>, a fully operational <strong>test suite</strong>, an automated <strong>documentation website</strong>, and a comprehensive <strong>control center</strong> according to <strong>Infrastructure-as-Code</strong> and <strong>Continuous Configuration Automation</strong> practices to enable dynamic project management and customization. PyPackIT establishes a complete <strong>cloud development</strong> environment on GitHub, integrating with its version control system, issue tracker,and pull-based model to provide a fully <strong>automated software development workflow</strong> with <strong>issue management</strong>, <strong>branching model</strong>, and <strong>versioning scheme</strong>. Leveraging <strong>GitHub Actions</strong>, PyPackIT implements a cloud-native Agile development process using <strong>Continuous software engineering</strong>, <strong>containerization</strong>, and <strong>DevOps</strong> methodologies, with a full set of <strong>Continuous Integration</strong>, Deployment, Testing, Refactoring, and Maintenance pipelines. PyPackIT is a <strong>free</strong> and <strong>open-source</strong> software suite that readily integrates with both new and existing projects to ensure their long-term sustainability and high quality, enabling software projects to rapidly implement their ideas and easily maintain their products.",
      "keywords": [
         "Automation",
         "Cloud-Native Development",
         "Continuous Integration",
         "Continuous Delivery",
         "Continuous Deployment",
         "Continuous Testing",
         "Continuous Refactoring",
         "Continuous Configuration Automation",
         "Continuous Software Engineering",
         "DevOps",
         "Infrastructure as Code",
         "Agile",
         "Dynamic Project Management",
         "Template Repository",
         "Python Package Skeleton",
         "Sphinx Website",
         "Testing Infrastructure",
         "FAIR Software",
         "GitHub Actions",
         "Bot"
      ],
      "language": "eng",
      "license": "AGPL-3.0-or-later",
      "related_identifiers": [
         {
            "identifier": "10.5281/zenodo.14359838",
            "relation": "isPartOf",
            "resource_type": "software"
         }
      ],
      "title": "PyPackIT: Cloud-Native Continuous Software Engineering Automation for Python Packages on GitHub",
      "upload_type": "software"
   }
}
