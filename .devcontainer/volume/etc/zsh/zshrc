case $- in
  *i*) ;;
    *) return;;
esac
. "/etc/globalrc"
READNULLCMD=${PAGER:-/usr/bin/pager}
typeset -ga debian_missing_features
if [[ -z "${DEBIAN_PREVENT_KEYBOARD_CHANGES-}" ]] && [[ "$TERM" != 'emacs' ]]; then
  typeset -A key
  key=(
    BackSpace  "${terminfo[kbs]}"
    Home       "${terminfo[khome]}"
    End        "${terminfo[kend]}"
    Insert     "${terminfo[kich1]}"
    Delete     "${terminfo[kdch1]}"
    Up         "${terminfo[kcuu1]}"
    Down       "${terminfo[kcud1]}"
    Left       "${terminfo[kcub1]}"
    Right      "${terminfo[kcuf1]}"
    PageUp     "${terminfo[kpp]}"
    PageDown   "${terminfo[knp]}"
  )
  function bind2maps () {
    local i sequence widget
    local -a maps
    while [[ "$1" != "--" ]]; do
      maps+=( "$1" )
      shift
    done
    shift
    sequence="${key[$1]}"
    widget="$2"
    [[ -z "$sequence" ]] && return 1
    for i in "${maps[@]}"; do
      bindkey -M "$i" "$sequence" "$widget"
    done
  }
  bind2maps emacs             -- BackSpace   backward-delete-char
  bind2maps       viins       -- BackSpace   vi-backward-delete-char
  bind2maps             vicmd -- BackSpace   vi-backward-char
  bind2maps emacs             -- Home        beginning-of-line
  bind2maps       viins vicmd -- Home        vi-beginning-of-line
  bind2maps emacs             -- End         end-of-line
  bind2maps       viins vicmd -- End         vi-end-of-line
  bind2maps emacs viins       -- Insert      overwrite-mode
  bind2maps             vicmd -- Insert      vi-insert
  bind2maps emacs             -- Delete      delete-char
  bind2maps       viins vicmd -- Delete      vi-delete-char
  bind2maps emacs viins vicmd -- Up          up-line-or-history
  bind2maps emacs viins vicmd -- Down        down-line-or-history
  bind2maps emacs             -- Left        backward-char
  bind2maps       viins vicmd -- Left        vi-backward-char
  bind2maps emacs             -- Right       forward-char
  bind2maps       viins vicmd -- Right       vi-forward-char
  if (( ${+terminfo[smkx]} )) && (( ${+terminfo[rmkx]} )); then
    function zle-line-init () {
      emulate -L zsh
      printf '%s' ${terminfo[smkx]}
    }
    function zle-line-finish () {
      emulate -L zsh
      printf '%s' ${terminfo[rmkx]}
    }
    zle -N zle-line-init
    zle -N zle-line-finish
  else
    for i in {s,r}mkx; do
      (( ${+terminfo[$i]} )) || debian_missing_features+=($i)
    done
    unset i
  fi
  unfunction bind2maps
fi
zstyle ':completion:*:sudo:*' command-path \
    /usr/local/sbin \
    /usr/local/bin  \
    /usr/sbin       \
    /usr/bin        \
    /sbin           \
    /bin            \
    /usr/X11R6/bin
zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select=2
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' menu select=long
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'
if (( ${${(@f)"$(</etc/os-release)"}[(I)ID*=*ubuntu]} )) && [[ -z "$skip_global_compinit" ]]; then
  autoload -Uz compinit
  compinit
fi
(( ${+aliases[run-help]} )) && unalias run-help
autoload -Uz run-help
setopt histignorealldups  # remove older duplicates
setopt sharehistory       # share history across sessions
bindkey -e
HISTSIZE=1000
SAVEHIST=1000
HISTFILE=/etc/zsh/zsh_history
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi
export ZSH="/home/pypackit-dev/.oh-my-zsh"
ZSH_THEME="powerlevel10k/powerlevel10k"
plugins=(
    git
    github
    per-directory-history
    pip
    python
    z
    zsh-syntax-highlighting
)
ZSH_CUSTOM="$ZSH/custom"
ZSH_CACHE_DIR="$ZSH/cache"
zstyle ':omz:update' mode disabled
ZSH_COMPDUMP="$ZSH_CACHE_DIR/.zcompdump"
COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
CASE_SENSITIVE="true"
ENABLE_CORRECTION=true
HIST_STAMPS="yyyy-mm-dd"
source $ZSH/oh-my-zsh.sh
ZSH_THEME_TERM_TITLE_IDLE="%n@%m:%~"
ZSH_THEME_TERM_TAB_TITLE_IDLE="%15<..<%~%<<"
. "/etc/zsh/p10k.zsh"
eval "$(pixi completion -s zsh)"
