{
   "containerUser": "codespace",
   "customizations": {
      "vscode": {
         "extensions": [
            "ms-python.python",
            "ms-python.vscode-pylance",
            "ms-python.debugpy",
            "ms-toolsai.jupyter",
            "ms-toolsai.jupyter-keymap",
            "ms-toolsai.jupyter-renderers",
            "ms-vscode.cpptools",
            "ritwickdey.LiveServer",
            "VisualStudioExptTeam.vscodeintellicode",
            "ms-toolsai.vscode-jupyter-cell-tags",
            "ms-toolsai.vscode-jupyter-slideshow",
            "twxs.cmake",
            "ms-vscode.cmake-tools",
            "redhat.java",
            "ms-azuretools.vscode-docker",
            "dbaeumer.vscode-eslint",
            "eamodio.gitlens",
            "ms-vscode.cpptools-extension-pack",
            "VisualStudioExptTeam.intellicode-api-usage-examples",
            "formulahendry.code-runner",
            "GitHub.copilot",
            "GitHub.copilot-chat",
            "GitHub.vscode-pull-request-github",
            "ms-vscode-remote.remote-ssh-edit",
            "ecmel.vscode-html-css",
            "formulahendry.auto-rename-tag",
            "redhat.vscode-yaml",
            "MS-vsliveshare.vsliveshare",
            "xabikos.JavaScriptSnippets",
            "ms-vscode.remote-explorer",
            "christian-kohler.path-intellisense",
            "golang.Go",
            "formulahendry.auto-close-tag",
            "bmewburn.vscode-intelephense-client",
            "streetsidesoftware.code-spell-checker",
            "donjayamanne.githistory",
            "KevinRose.vsc-python-indent",
            "njpwerner.autodocstring",
            "wholroyd.jinja",
            "jeff-hykin.better-cpp-syntax",
            "mechatroner.rainbow-csv",
            "techer.open-in-browser",
            "mhutchie.git-graph",
            "yzhang.markdown-all-in-one",
            "Zignd.html-css-class-completion",
            "DavidAnson.vscode-markdownlint",
            "aaron-bond.better-comments",
            "naumovs.color-highlight",
            "redhat.vscode-xml",
            "tomoki1207.pdf",
            "pranaygp.vscode-css-peek",
            "shd101wyy.markdown-preview-enhanced",
            "ms-vscode.makefile-tools",
            "GitHub.codespaces",
            "rust-lang.rust-analyzer",
            "GitHub.remotehub",
            "ms-vscode.remote-repositories",
            "GitHub.vscode-github-actions",
            "thekalinga.bootstrap4-vscode",
            "ziyasal.vscode-open-in-github",
            "ZainChen.json",
            "kisstkondoros.vscode-gutter-preview",
            "tamasfe.even-better-toml",
            "shardulm94.trailing-spaces",
            "quicktype.quicktype",
            "yzane.markdown-pdf",
            "bierner.markdown-mermaid",
            "GraphQL.vscode-graphql",
            "ms-python.pylint",
            "bierner.github-markdown-preview",
            "jock.svg",
            "charliermarsh.ruff",
            "ms-python.mypy-type-checker",
            "graphql.vscode-graphql-syntax"
         ],
         "settings": {
            "jupyter.kernels.filter": [
               {
                  "path": "/opt/conda/bin/python",
                  "type": "pythonEnvironment"
               },
               {
                  "path": "/opt/conda/envs/app/bin/python",
                  "type": "pythonEnvironment"
               }
            ],
            "lldb.executable": "/usr/bin/lldb",
            "python.defaultInterpreterPath": "/opt/conda/envs/app/bin/python",
            "tasks": {
               "tasks": [
                  {
                     "args": [
                        "-p",
                        "-o",
                        "pdf",
                        "-v",
                        "${file}"
                     ],
                     "command": "inara",
                     "group": {
                        "isDefault": true,
                        "kind": "build"
                     },
                     "label": "Build Paper (Final)",
                     "presentation": {
                        "echo": true,
                        "focus": true,
                        "panel": "new",
                        "reveal": "always"
                     },
                     "type": "process"
                  },
                  {
                     "args": [
                        "-o",
                        "pdf,contextpdf,tex,preprint,docx,html,crossref,cff",
                        "-vv",
                        "${file}"
                     ],
                     "command": "inara",
                     "group": {
                        "isDefault": false,
                        "kind": "build"
                     },
                     "label": "Build Paper (Draft)",
                     "presentation": {
                        "echo": true,
                        "focus": true,
                        "panel": "new",
                        "reveal": "always"
                     },
                     "type": "process"
                  }
               ],
               "version": "2.0.0"
            },
            "terminal.integrated.scrollback": 1000000
         }
      }
   },
   "dockerComposeFile": [
      "docker-compose.yaml"
   ],
   "features": {
      "./features/conda_setup": {},
      "./features/pkg_setup": {
         "packages": "{\n  \\\\\\\"app\\\\\\\": {\n    \\\\\\\"packages\\\\\\\": [\n      {\n        \\\\\\\"id\\\\\\\": \\\\\\\"main\\\\\\\",\n        \\\\\\\"extras\\\\\\\": \\\\\\\"all\\\\\\\"\n      },\n      {\n        \\\\\\\"id\\\\\\\": \\\\\\\"test\\\\\\\",\n        \\\\\\\"extras\\\\\\\": \\\\\\\"all\\\\\\\"\n      },\n    ],\n    \\\\\\\"python-version\\\\\\\": \\\\\\\"3.10\\\\\\\",\n    \\\\\\\"sources\\\\\\\": \\\\\\\"pip conda apt bash\\\\\\\"\n  },\n  \\\\\\\"proman\\\\\\\": {\n    \\\\\\\"packages\\\\\\\": [\n      {\n        \\\\\\\"id\\\\\\\": \\\\\\\"ci\\\\\\\",\n        \\\\\\\"extras\\\\\\\": \\\\\\\"all\\\\\\\"\n      }\n    ],\n    \\\\\\\"python-version\\\\\\\": \\\\\\\"3.13\\\\\\\",\n    \\\\\\\"sources\\\\\\\": \\\\\\\"pip conda apt bash\\\\\\\"\n  }\n}"
      },
      "./features/setup-user": {},
      "ghcr.io/devcontainers-extra/features/apt-get-packages:1": {
         "packages": ""
      },
      "ghcr.io/devcontainers/features/common-utils:2": {
         "configureZshAsDefaultShell": true,
         "installOhMyZsh": true,
         "installOhMyZshConfig": true,
         "installZsh": true,
         "upgradePackages": true,
         "userGid": "1000",
         "userUid": "1000",
         "username": "codespace"
      },
      "ghcr.io/devcontainers/features/conda:1": {
         "addCondaForge": true,
         "version": "latest"
      },
      "ghcr.io/devcontainers/features/desktop-lite:1": {
         "password": "noPassword",
         "version": "latest",
         "vncPort": "5901",
         "webPort": "6080"
      },
      "ghcr.io/devcontainers/features/docker-outside-of-docker:1": {
         "version": "latest"
      },
      "ghcr.io/devcontainers/features/git-lfs:1": {
         "autoPull": true,
         "version": "latest"
      },
      "ghcr.io/devcontainers/features/git:1": {
         "ppa": false,
         "version": "latest"
      },
      "ghcr.io/devcontainers/features/github-cli:1": {
         "version": "latest"
      },
      "ghcr.io/devcontainers/features/node:1": {
         "installYarnUsingApt": true,
         "nodeGypDependencies": true,
         "nvmInstallPath": "/usr/local/share/nvm",
         "nvmVersion": "latest",
         "pnpmVersion": "latest",
         "version": "latest"
      },
      "ghcr.io/devcontainers/features/oryx:1": {},
      "ghcr.io/devcontainers/features/ruby:1": {
         "version": "latest"
      },
      "ghcr.io/devcontainers/features/rust:1": {
         "profile": "minimal",
         "version": "latest"
      },
      "ghcr.io/devcontainers/features/sshd:1": {
         "version": "latest"
      }
   },
   "forwardPorts": [
      8888,
      6080,
      5901
   ],
   "name": "Main Development Environment",
   "overrideFeatureInstallOrder": [
      "ghcr.io/devcontainers/features/common-utils",
      "ghcr.io/devcontainers/features/desktop-lite:1",
      "ghcr.io/devcontainers/features/git",
      "ghcr.io/devcontainers/features/node",
      "ghcr.io/devcontainers/features/conda",
      "ghcr.io/devcontainers/features/ruby",
      "ghcr.io/devcontainers/features/sshd",
      "ghcr.io/devcontainers/features/git-lfs",
      "ghcr.io/devcontainers/features/github-cli",
      "ghcr.io/devcontainers/features/docker-outside-of-docker",
      "ghcr.io/devcontainers/features/oryx",
      "./features/setup-user",
      "ghcr.io/devcontainers-extra/features/apt-get-packages",
      "./features/conda_setup",
      "./features/pkg_setup"
   ],
   "portsAttributes": {
      "5901": {
         "elevateIfNeeded": true,
         "label": "Desktop Lite (VNC)",
         "onAutoForward": "notify",
         "requireLocalPort": false
      },
      "6080": {
         "elevateIfNeeded": true,
         "label": "Desktop Lite (web)",
         "onAutoForward": "openBrowserOnce",
         "requireLocalPort": false
      },
      "8888": {
         "elevateIfNeeded": true,
         "label": "Jupyter",
         "onAutoForward": "openBrowserOnce",
         "requireLocalPort": false
      }
   },
   "postCreateCommand": {
      "pre_commit_install": [
         "conda",
         "run",
         "--name",
         "pre_commit",
         "--live-stream",
         "-vv",
         "pre-commit",
         "install",
         "--install-hooks",
         "--config",
         ".config/pre-commit.yaml"
      ],
      "source_tasks": "echo 'source /workspace/.devcontainer/tasks_local.sh' | tee -a ~/.bashrc ~/.bash_profile"
   },
   "postStartCommand": {
      "pypackit_install": [
         "conda",
         "run",
         "--name",
         "pypackit",
         "--live-stream",
         "-vv",
         "pip",
         "install",
         "--editable",
         ".manager",
         "--no-deps"
      ]
   },
   "remoteEnv": {
      "LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}"
   },
   "remoteUser": "codespace",
   "service": "main",
   "shutdownAction": "none",
   "workspaceFolder": "/workspace"
}
